"use strict";(self.webpackChunkcspr_docs_redux=self.webpackChunkcspr_docs_redux||[]).push([[9150],{10199:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>l,frontMatter:()=>c,metadata:()=>s,toc:()=>p});const s=JSON.parse('{"id":"jsonrpc-comp/rpc-2.0/schema/Package.json","title":"Package.json","description":"","source":"@site/condor/jsonrpc-comp/rpc-2.0/schema/Package.json.md","sourceDirName":"jsonrpc-comp/rpc-2.0/schema","slug":"/jsonrpc-comp/rpc-2.0/schema/Package.json","permalink":"/condor/jsonrpc-comp/rpc-2.0/schema/Package.json","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{}}');var o=t(74848),r=t(28453);const c={},a=void 0,i={},p=[];function d(e){const n={code:"code",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",metastring:"copy ",children:'{\n    "description": "Entity definition, metadata, and security container.",\n    "type": "object",\n    "required": [\n        "disabled_versions",\n        "groups",\n        "lock_status",\n        "versions"\n    ],\n    "properties": {\n        "versions": {\n            "description": "All versions (enabled & disabled).",\n            "allOf": [\n                {\n                    "$ref": "#/components/schemas/Array_of_EntityVersionAndHash"\n                }\n            ]\n        },\n        "disabled_versions": {\n            "description": "Collection of disabled entity versions. The runtime will not permit disabled entity versions to be executed.",\n            "type": "array",\n            "items": {\n                "$ref": "#/components/schemas/EntityVersionKey"\n            },\n            "uniqueItems": true\n        },\n        "groups": {\n            "description": "Mapping maintaining the set of URefs associated with each \\"user group\\". This can be used to control access to methods in a particular version of the entity. A method is callable by any context which \\"knows\\" any of the URefs associated with the method\'s user group.",\n            "allOf": [\n                {\n                    "$ref": "#/components/schemas/Array_of_NamedUserGroup"\n                }\n            ]\n        },\n        "lock_status": {\n            "description": "A flag that determines whether a entity is locked",\n            "allOf": [\n                {\n                    "$ref": "#/components/schemas/PackageStatus"\n                }\n            ]\n        }\n    }\n} \n'})})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>a});var s=t(96540);const o={},r=s.createContext(o);function c(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);