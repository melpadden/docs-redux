"use strict";(self.webpackChunkcspr_docs_redux=self.webpackChunkcspr_docs_redux||[]).push([[50205],{89713:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"jsonrpc-comp/rpc-2.0/schema/TransactionEntryPoint.json","title":"TransactionEntryPoint.json","description":"","source":"@site/condor/jsonrpc-comp/rpc-2.0/schema/TransactionEntryPoint.json.md","sourceDirName":"jsonrpc-comp/rpc-2.0/schema","slug":"/jsonrpc-comp/rpc-2.0/schema/TransactionEntryPoint.json","permalink":"/condor/jsonrpc-comp/rpc-2.0/schema/TransactionEntryPoint.json","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{}}');var o=t(74848),i=t(28453);const s={},a=void 0,c={},d=[];function p(n){const e={code:"code",pre:"pre",...(0,i.R)(),...n.components};return(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-json",metastring:"copy ",children:'{\n    "description": "Entry point of a Transaction.",\n    "oneOf": [\n        {\n            "description": "The standard `call` entry point used in session code.",\n            "type": "string",\n            "enum": [\n                "Call"\n            ]\n        },\n        {\n            "description": "A non-native, arbitrary entry point.",\n            "type": "object",\n            "required": [\n                "Custom"\n            ],\n            "properties": {\n                "Custom": {\n                    "type": "string"\n                }\n            },\n            "additionalProperties": false\n        },\n        {\n            "description": "The `transfer` native entry point, used to transfer `Motes` from a source purse to a target purse.",\n            "type": "string",\n            "enum": [\n                "Transfer"\n            ]\n        },\n        {\n            "description": "The `add_bid` native entry point, used to create or top off a bid purse.",\n            "type": "string",\n            "enum": [\n                "AddBid"\n            ]\n        },\n        {\n            "description": "The `withdraw_bid` native entry point, used to decrease a stake.",\n            "type": "string",\n            "enum": [\n                "WithdrawBid"\n            ]\n        },\n        {\n            "description": "The `delegate` native entry point, used to add a new delegator or increase an existing delegator\'s stake.",\n            "type": "string",\n            "enum": [\n                "Delegate"\n            ]\n        },\n        {\n            "description": "The `undelegate` native entry point, used to reduce a delegator\'s stake or remove the delegator if the remaining stake is 0.",\n            "type": "string",\n            "enum": [\n                "Undelegate"\n            ]\n        },\n        {\n            "description": "The `redelegate` native entry point, used to reduce a delegator\'s stake or remove the delegator if the remaining stake is 0, and after the unbonding delay, automatically delegate to a new validator.",\n            "type": "string",\n            "enum": [\n                "Redelegate"\n            ]\n        },\n        {\n            "description": "The `activate_bid` native entry point, used to used to reactivate an inactive bid.",\n            "type": "string",\n            "enum": [\n                "ActivateBid"\n            ]\n        },\n        {\n            "description": "The `change_bid_public_key` native entry point, used to change a bid\'s public key.",\n            "type": "string",\n            "enum": [\n                "ChangeBidPublicKey"\n            ]\n        }\n    ]\n} \n'})})}function u(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(p,{...n})}):p(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>a});var r=t(96540);const o={},i=r.createContext(o);function s(n){const e=r.useContext(i);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:s(n.components),r.createElement(i.Provider,{value:e},n.children)}}}]);