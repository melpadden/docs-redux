"use strict";(self.webpackChunkcspr_docs_redux=self.webpackChunkcspr_docs_redux||[]).push([[9209],{60863:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>s,metadata:()=>r,toc:()=>p});const r=JSON.parse('{"id":"jsonrpc-comp/rpc-1.5/schema/components.json","title":"components.json","description":"","source":"@site/condor/jsonrpc-comp/rpc-1.5/schema/components.json.md","sourceDirName":"jsonrpc-comp/rpc-1.5/schema","slug":"/jsonrpc-comp/rpc-1.5/schema/components.json","permalink":"/condor/jsonrpc-comp/rpc-1.5/schema/components.json","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{}}');var o=t(74848),i=t(28453);const s={},a=void 0,c={},p=[];function d(n){const e={code:"code",pre:"pre",...(0,i.R)(),...n.components};return(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-json",metastring:"copy ",children:'{\n    "components": {\n        "schemas": {\n            "Deploy": {\n                "description": "A deploy; an item containing a smart contract along with the requester\'s signature(s).",\n                "type": "object",\n                "required": [\n                    "approvals",\n                    "hash",\n                    "header",\n                    "payment",\n                    "session"\n                ],\n                "properties": {\n                    "hash": {\n                        "$ref": "#/components/schemas/DeployHash"\n                    },\n                    "header": {\n                        "$ref": "#/components/schemas/DeployHeader"\n                    },\n                    "payment": {\n                        "$ref": "#/components/schemas/ExecutableDeployItem"\n                    },\n                    "session": {\n                        "$ref": "#/components/schemas/ExecutableDeployItem"\n                    },\n                    "approvals": {\n                        "type": "array",\n                        "items": {\n                            "$ref": "#/components/schemas/Approval"\n                        },\n                        "uniqueItems": true\n                    }\n                },\n                "additionalProperties": false\n            },\n            "DeployHash": {\n                "description": "Hex-encoded deploy hash.",\n                "allOf": [\n                    {\n                        "$ref": "#/components/schemas/Digest"\n                    }\n                ]\n            },\n            "Digest": {\n                "description": "Hex-encoded hash digest.",\n                "type": "string"\n            },\n            "DeployHeader": {\n                "description": "The header portion of a [`Deploy`].",\n                "type": "object",\n                "required": [\n                    "account",\n                    "body_hash",\n                    "chain_name",\n                    "dependencies",\n                    "gas_price",\n                    "timestamp",\n                    "ttl"\n                ],\n                "properties": {\n                    "account": {\n                        "$ref": "#/components/schemas/PublicKey"\n                    },\n                    "timestamp": {\n                        "$ref": "#/components/schemas/Timestamp"\n                    },\n                    "ttl": {\n                        "$ref": "#/components/schemas/TimeDiff"\n                    },\n                    "gas_price": {\n                        "type": "integer",\n                        "format": "uint64",\n                        "minimum": 0.0\n                    },\n                    "body_hash": {\n                        "$ref": "#/components/schemas/Digest"\n                    },\n                    "dependencies": {\n                        "type": "array",\n                        "items": {\n                            "$ref": "#/components/schemas/DeployHash"\n                        }\n                    },\n                    "chain_name": {\n                        "type": "string"\n                    }\n                },\n                "additionalProperties": false\n            },\n            "PublicKey": {\n                "description": "Hex-encoded cryptographic public key, including the algorithm tag prefix.",\n                "examples": [\n                    {\n                        "name": "SystemPublicKey",\n                        "description": "A pseudo public key, used for example when the system proposes an immediate switch block after a network upgrade rather than a specific validator. Its hex-encoded value is always \'00\', as is the corresponding pseudo signature\'s",\n                        "value": "00"\n                    },\n                    {\n                        "name": "Ed25519PublicKey",\n                        "description": "An Ed25519 public key. Its hex-encoded value begins \'01\' and is followed by 64 characters",\n                        "value": "018a88e3dd7409f195fd52db2d3cba5d72ca6709bf1d94121bf3748801b40f6f5c"\n                    },\n                    {\n                        "name": "Secp256k1PublicKey",\n                        "description": "A secp256k1 public key. Its hex-encoded value begins \'02\' and is followed by 66 characters",\n                        "value": "0203408e9526316fd1f8def480dd45b2cc72ffd732771c9ceb5d92ffa4051e6ee084"\n                    }\n                ],\n                "type": "string"\n            },\n            "Timestamp": {\n                "description": "Timestamp formatted as per RFC 3339",\n                "type": "integer",\n                "format": "uint64",\n                "minimum": 0.0\n            },\n            "TimeDiff": {\n                "description": "Human-readable duration.",\n                "type": "integer",\n                "format": "uint64",\n                "minimum": 0.0\n            },\n            "ExecutableDeployItem": {\n                "description": "Represents possible variants of an executable deploy.",\n                "anyOf": [\n                    {\n                        "description": "Executable specified as raw bytes that represent WASM code and an instance of [`RuntimeArgs`].",\n                        "type": "object",\n                        "required": [\n                            "ModuleBytes"\n                        ],\n                        "properties": {\n                            "ModuleBytes": {\n                                "type": "object",\n                                "required": [\n                                    "args",\n                                    "module_bytes"\n                                ],\n                                "properties": {\n                                    "module_bytes": {\n                                        "description": "Hex-encoded raw Wasm bytes.",\n                                        "type": "string"\n                                    },\n                                    "args": {\n                                        "description": "Runtime arguments.",\n                                        "allOf": [\n                                            {\n                                                "$ref": "#/components/schemas/RuntimeArgs"\n                                            }\n                                        ]\n                                    }\n                                },\n                                "additionalProperties": false\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "Stored contract referenced by its [`ContractHash`], entry point and an instance of [`RuntimeArgs`].",\n                        "type": "object",\n                        "required": [\n                            "StoredContractByHash"\n                        ],\n                        "properties": {\n                            "StoredContractByHash": {\n                                "type": "object",\n                                "required": [\n                                    "args",\n                                    "entry_point",\n                                    "hash"\n                                ],\n                                "properties": {\n                                    "hash": {\n                                        "description": "Hex-encoded hash.",\n                                        "type": "string"\n                                    },\n                                    "entry_point": {\n                                        "description": "Name of an entry point.",\n                                        "type": "string"\n                                    },\n                                    "args": {\n                                        "description": "Runtime arguments.",\n                                        "allOf": [\n                                            {\n                                                "$ref": "#/components/schemas/RuntimeArgs"\n                                            }\n                                        ]\n                                    }\n                                },\n                                "additionalProperties": false\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "Stored contract referenced by a named key existing in the signer\'s account context, entry point and an instance of [`RuntimeArgs`].",\n                        "type": "object",\n                        "required": [\n                            "StoredContractByName"\n                        ],\n                        "properties": {\n                            "StoredContractByName": {\n                                "type": "object",\n                                "required": [\n                                    "args",\n                                    "entry_point",\n                                    "name"\n                                ],\n                                "properties": {\n                                    "name": {\n                                        "description": "Named key.",\n                                        "type": "string"\n                                    },\n                                    "entry_point": {\n                                        "description": "Name of an entry point.",\n                                        "type": "string"\n                                    },\n                                    "args": {\n                                        "description": "Runtime arguments.",\n                                        "allOf": [\n                                            {\n                                                "$ref": "#/components/schemas/RuntimeArgs"\n                                            }\n                                        ]\n                                    }\n                                },\n                                "additionalProperties": false\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "Stored versioned contract referenced by its [`ContractPackageHash`], entry point and an instance of [`RuntimeArgs`].",\n                        "type": "object",\n                        "required": [\n                            "StoredVersionedContractByHash"\n                        ],\n                        "properties": {\n                            "StoredVersionedContractByHash": {\n                                "type": "object",\n                                "required": [\n                                    "args",\n                                    "entry_point",\n                                    "hash"\n                                ],\n                                "properties": {\n                                    "hash": {\n                                        "description": "Hex-encoded hash.",\n                                        "type": "string"\n                                    },\n                                    "version": {\n                                        "description": "An optional version of the contract to call. It will default to the highest enabled version if no value is specified.",\n                                        "type": [\n                                            "integer",\n                                            "null"\n                                        ],\n                                        "format": "uint32",\n                                        "minimum": 0.0\n                                    },\n                                    "entry_point": {\n                                        "description": "Entry point name.",\n                                        "type": "string"\n                                    },\n                                    "args": {\n                                        "description": "Runtime arguments.",\n                                        "allOf": [\n                                            {\n                                                "$ref": "#/components/schemas/RuntimeArgs"\n                                            }\n                                        ]\n                                    }\n                                },\n                                "additionalProperties": false\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "Stored versioned contract referenced by a named key existing in the signer\'s account context, entry point and an instance of [`RuntimeArgs`].",\n                        "type": "object",\n                        "required": [\n                            "StoredVersionedContractByName"\n                        ],\n                        "properties": {\n                            "StoredVersionedContractByName": {\n                                "type": "object",\n                                "required": [\n                                    "args",\n                                    "entry_point",\n                                    "name"\n                                ],\n                                "properties": {\n                                    "name": {\n                                        "description": "Named key.",\n                                        "type": "string"\n                                    },\n                                    "version": {\n                                        "description": "An optional version of the contract to call. It will default to the highest enabled version if no value is specified.",\n                                        "type": [\n                                            "integer",\n                                            "null"\n                                        ],\n                                        "format": "uint32",\n                                        "minimum": 0.0\n                                    },\n                                    "entry_point": {\n                                        "description": "Entry point name.",\n                                        "type": "string"\n                                    },\n                                    "args": {\n                                        "description": "Runtime arguments.",\n                                        "allOf": [\n                                            {\n                                                "$ref": "#/components/schemas/RuntimeArgs"\n                                            }\n                                        ]\n                                    }\n                                },\n                                "additionalProperties": false\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "A native transfer which does not contain or reference a WASM code.",\n                        "type": "object",\n                        "required": [\n                            "Transfer"\n                        ],\n                        "properties": {\n                            "Transfer": {\n                                "type": "object",\n                                "required": [\n                                    "args"\n                                ],\n                                "properties": {\n                                    "args": {\n                                        "description": "Runtime arguments.",\n                                        "allOf": [\n                                            {\n                                                "$ref": "#/components/schemas/RuntimeArgs"\n                                            }\n                                        ]\n                                    }\n                                },\n                                "additionalProperties": false\n                            }\n                        },\n                        "additionalProperties": false\n                    }\n                ]\n            },\n            "RuntimeArgs": {\n                "description": "Represents a collection of arguments passed to a smart contract.",\n                "type": "array",\n                "items": {\n                    "$ref": "#/components/schemas/NamedArg"\n                }\n            },\n            "NamedArg": {\n                "description": "Named arguments to a contract.",\n                "type": "array",\n                "items": [\n                    {\n                        "type": "string"\n                    },\n                    {\n                        "$ref": "#/components/schemas/CLValue"\n                    }\n                ],\n                "maxItems": 2,\n                "minItems": 2\n            },\n            "CLValue": {\n                "description": "A Casper value, i.e. a value which can be stored and manipulated by smart contracts.\\n\\nIt holds the underlying data as a type-erased, serialized `Vec<u8>` and also holds the CLType of the underlying data as a separate member.\\n\\nThe `parsed` field, representing the original value, is a convenience only available when a CLValue is encoded to JSON, and can always be set to null if preferred.",\n                "type": "object",\n                "required": [\n                    "bytes",\n                    "cl_type"\n                ],\n                "properties": {\n                    "cl_type": {\n                        "$ref": "#/components/schemas/CLType"\n                    },\n                    "bytes": {\n                        "type": "string"\n                    },\n                    "parsed": true\n                },\n                "additionalProperties": false\n            },\n            "CLType": {\n                "description": "Casper types, i.e. types which can be stored and manipulated by smart contracts.\\n\\nProvides a description of the underlying data type of a [`CLValue`](crate::CLValue).",\n                "anyOf": [\n                    {\n                        "type": "string",\n                        "enum": [\n                            "Bool",\n                            "I32",\n                            "I64",\n                            "U8",\n                            "U32",\n                            "U64",\n                            "U128",\n                            "U256",\n                            "U512",\n                            "Unit",\n                            "String",\n                            "Key",\n                            "URef",\n                            "PublicKey",\n                            "Any"\n                        ]\n                    },\n                    {\n                        "description": "`Option` of a `CLType`.",\n                        "type": "object",\n                        "required": [\n                            "Option"\n                        ],\n                        "properties": {\n                            "Option": {\n                                "$ref": "#/components/schemas/CLType"\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "Variable-length list of a single `CLType` (comparable to a `Vec`).",\n                        "type": "object",\n                        "required": [\n                            "List"\n                        ],\n                        "properties": {\n                            "List": {\n                                "$ref": "#/components/schemas/CLType"\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "Fixed-length list of a single `CLType` (comparable to a Rust array).",\n                        "type": "object",\n                        "required": [\n                            "ByteArray"\n                        ],\n                        "properties": {\n                            "ByteArray": {\n                                "type": "integer",\n                                "format": "uint32",\n                                "minimum": 0.0\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "`Result` with `Ok` and `Err` variants of `CLType`s.",\n                        "type": "object",\n                        "required": [\n                            "Result"\n                        ],\n                        "properties": {\n                            "Result": {\n                                "type": "object",\n                                "required": [\n                                    "err",\n                                    "ok"\n                                ],\n                                "properties": {\n                                    "ok": {\n                                        "$ref": "#/components/schemas/CLType"\n                                    },\n                                    "err": {\n                                        "$ref": "#/components/schemas/CLType"\n                                    }\n                                },\n                                "additionalProperties": false\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "Map with keys of a single `CLType` and values of a single `CLType`.",\n                        "type": "object",\n                        "required": [\n                            "Map"\n                        ],\n                        "properties": {\n                            "Map": {\n                                "type": "object",\n                                "required": [\n                                    "key",\n                                    "value"\n                                ],\n                                "properties": {\n                                    "key": {\n                                        "$ref": "#/components/schemas/CLType"\n                                    },\n                                    "value": {\n                                        "$ref": "#/components/schemas/CLType"\n                                    }\n                                },\n                                "additionalProperties": false\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "1-ary tuple of a `CLType`.",\n                        "type": "object",\n                        "required": [\n                            "Tuple1"\n                        ],\n                        "properties": {\n                            "Tuple1": {\n                                "type": "array",\n                                "items": {\n                                    "$ref": "#/components/schemas/CLType"\n                                },\n                                "maxItems": 1,\n                                "minItems": 1\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "2-ary tuple of `CLType`s.",\n                        "type": "object",\n                        "required": [\n                            "Tuple2"\n                        ],\n                        "properties": {\n                            "Tuple2": {\n                                "type": "array",\n                                "items": {\n                                    "$ref": "#/components/schemas/CLType"\n                                },\n                                "maxItems": 2,\n                                "minItems": 2\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "3-ary tuple of `CLType`s.",\n                        "type": "object",\n                        "required": [\n                            "Tuple3"\n                        ],\n                        "properties": {\n                            "Tuple3": {\n                                "type": "array",\n                                "items": {\n                                    "$ref": "#/components/schemas/CLType"\n                                },\n                                "maxItems": 3,\n                                "minItems": 3\n                            }\n                        },\n                        "additionalProperties": false\n                    }\n                ]\n            },\n            "Approval": {\n                "description": "A struct containing a signature of a deploy hash and the public key of the signer.",\n                "type": "object",\n                "required": [\n                    "signature",\n                    "signer"\n                ],\n                "properties": {\n                    "signer": {\n                        "$ref": "#/components/schemas/PublicKey"\n                    },\n                    "signature": {\n                        "$ref": "#/components/schemas/Signature"\n                    }\n                },\n                "additionalProperties": false\n            },\n            "Signature": {\n                "description": "Hex-encoded cryptographic signature, including the algorithm tag prefix.",\n                "type": "string"\n            },\n            "JsonExecutionResult": {\n                "description": "The execution result of a single deploy.",\n                "type": "object",\n                "required": [\n                    "block_hash",\n                    "result"\n                ],\n                "properties": {\n                    "block_hash": {\n                        "description": "The block hash.",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/BlockHash"\n                            }\n                        ]\n                    },\n                    "result": {\n                        "description": "Execution result.",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/ExecutionResult"\n                            }\n                        ]\n                    }\n                },\n                "additionalProperties": false\n            },\n            "BlockHash": {\n                "description": "A cryptographic hash identifying a [`Block`](struct.Block.html).",\n                "allOf": [\n                    {\n                        "$ref": "#/components/schemas/Digest"\n                    }\n                ]\n            },\n            "ExecutionResult": {\n                "description": "The result of executing a single deploy.",\n                "anyOf": [\n                    {\n                        "description": "The result of a failed execution.",\n                        "type": "object",\n                        "required": [\n                            "Failure"\n                        ],\n                        "properties": {\n                            "Failure": {\n                                "type": "object",\n                                "required": [\n                                    "cost",\n                                    "effect",\n                                    "error_message",\n                                    "transfers"\n                                ],\n                                "properties": {\n                                    "effect": {\n                                        "description": "The effect of executing the deploy.",\n                                        "allOf": [\n                                            {\n                                                "$ref": "#/components/schemas/ExecutionEffect"\n                                            }\n                                        ]\n                                    },\n                                    "transfers": {\n                                        "description": "A record of Transfers performed while executing the deploy.",\n                                        "type": "array",\n                                        "items": {\n                                            "$ref": "#/components/schemas/TransferAddr"\n                                        }\n                                    },\n                                    "cost": {\n                                        "description": "The cost of executing the deploy.",\n                                        "allOf": [\n                                            {\n                                                "$ref": "#/components/schemas/U512"\n                                            }\n                                        ]\n                                    },\n                                    "error_message": {\n                                        "description": "The error message associated with executing the deploy.",\n                                        "type": "string"\n                                    }\n                                },\n                                "additionalProperties": false\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "The result of a successful execution.",\n                        "type": "object",\n                        "required": [\n                            "Success"\n                        ],\n                        "properties": {\n                            "Success": {\n                                "type": "object",\n                                "required": [\n                                    "cost",\n                                    "effect",\n                                    "transfers"\n                                ],\n                                "properties": {\n                                    "effect": {\n                                        "description": "The effect of executing the deploy.",\n                                        "allOf": [\n                                            {\n                                                "$ref": "#/components/schemas/ExecutionEffect"\n                                            }\n                                        ]\n                                    },\n                                    "transfers": {\n                                        "description": "A record of Transfers performed while executing the deploy.",\n                                        "type": "array",\n                                        "items": {\n                                            "$ref": "#/components/schemas/TransferAddr"\n                                        }\n                                    },\n                                    "cost": {\n                                        "description": "The cost of executing the deploy.",\n                                        "allOf": [\n                                            {\n                                                "$ref": "#/components/schemas/U512"\n                                            }\n                                        ]\n                                    }\n                                },\n                                "additionalProperties": false\n                            }\n                        },\n                        "additionalProperties": false\n                    }\n                ]\n            },\n            "ExecutionEffect": {\n                "description": "The journal of execution transforms from a single deploy.",\n                "type": "object",\n                "required": [\n                    "operations",\n                    "transforms"\n                ],\n                "properties": {\n                    "operations": {\n                        "description": "The resulting operations.",\n                        "type": "array",\n                        "items": {\n                            "$ref": "#/components/schemas/Operation"\n                        }\n                    },\n                    "transforms": {\n                        "description": "The journal of execution transforms.",\n                        "type": "array",\n                        "items": {\n                            "$ref": "#/components/schemas/TransformEntry"\n                        }\n                    }\n                },\n                "additionalProperties": false\n            },\n            "Operation": {\n                "description": "An operation performed while executing a deploy.",\n                "type": "object",\n                "required": [\n                    "key",\n                    "kind"\n                ],\n                "properties": {\n                    "key": {\n                        "description": "The formatted string of the `Key`.",\n                        "type": "string"\n                    },\n                    "kind": {\n                        "description": "The type of operation.",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/OpKind"\n                            }\n                        ]\n                    }\n                },\n                "additionalProperties": false\n            },\n            "OpKind": {\n                "description": "The type of operation performed while executing a deploy.",\n                "type": "string",\n                "enum": [\n                    "Read",\n                    "Write",\n                    "Add",\n                    "NoOp"\n                ]\n            },\n            "TransformEntry": {\n                "description": "A transformation performed while executing a deploy.",\n                "type": "object",\n                "required": [\n                    "key",\n                    "transform"\n                ],\n                "properties": {\n                    "key": {\n                        "description": "The formatted string of the `Key`.",\n                        "type": "string"\n                    },\n                    "transform": {\n                        "description": "The transformation.",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/Transform"\n                            }\n                        ]\n                    }\n                },\n                "additionalProperties": false\n            },\n            "Transform": {\n                "description": "The actual transformation performed while executing a deploy.",\n                "anyOf": [\n                    {\n                        "type": "string",\n                        "enum": [\n                            "Identity",\n                            "WriteContractWasm",\n                            "WriteContract",\n                            "WriteContractPackage"\n                        ]\n                    },\n                    {\n                        "description": "Writes the given CLValue to global state.",\n                        "type": "object",\n                        "required": [\n                            "WriteCLValue"\n                        ],\n                        "properties": {\n                            "WriteCLValue": {\n                                "$ref": "#/components/schemas/CLValue"\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "Writes the given Account to global state.",\n                        "type": "object",\n                        "required": [\n                            "WriteAccount"\n                        ],\n                        "properties": {\n                            "WriteAccount": {\n                                "$ref": "#/components/schemas/AccountHash"\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "Writes the given DeployInfo to global state.",\n                        "type": "object",\n                        "required": [\n                            "WriteDeployInfo"\n                        ],\n                        "properties": {\n                            "WriteDeployInfo": {\n                                "$ref": "#/components/schemas/DeployInfo"\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "Writes the given EraInfo to global state.",\n                        "type": "object",\n                        "required": [\n                            "WriteEraInfo"\n                        ],\n                        "properties": {\n                            "WriteEraInfo": {\n                                "$ref": "#/components/schemas/EraInfo"\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "Writes the given Transfer to global state.",\n                        "type": "object",\n                        "required": [\n                            "WriteTransfer"\n                        ],\n                        "properties": {\n                            "WriteTransfer": {\n                                "$ref": "#/components/schemas/Transfer"\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "Writes the given Bid to global state.",\n                        "type": "object",\n                        "required": [\n                            "WriteBid"\n                        ],\n                        "properties": {\n                            "WriteBid": {\n                                "$ref": "#/components/schemas/Bid"\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "Writes the given Withdraw to global state.",\n                        "type": "object",\n                        "required": [\n                            "WriteWithdraw"\n                        ],\n                        "properties": {\n                            "WriteWithdraw": {\n                                "type": "array",\n                                "items": {\n                                    "$ref": "#/components/schemas/WithdrawPurse"\n                                }\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "Adds the given `i32`.",\n                        "type": "object",\n                        "required": [\n                            "AddInt32"\n                        ],\n                        "properties": {\n                            "AddInt32": {\n                                "type": "integer",\n                                "format": "int32"\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "Adds the given `u64`.",\n                        "type": "object",\n                        "required": [\n                            "AddUInt64"\n                        ],\n                        "properties": {\n                            "AddUInt64": {\n                                "type": "integer",\n                                "format": "uint64",\n                                "minimum": 0.0\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "Adds the given `U128`.",\n                        "type": "object",\n                        "required": [\n                            "AddUInt128"\n                        ],\n                        "properties": {\n                            "AddUInt128": {\n                                "$ref": "#/components/schemas/U128"\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "Adds the given `U256`.",\n                        "type": "object",\n                        "required": [\n                            "AddUInt256"\n                        ],\n                        "properties": {\n                            "AddUInt256": {\n                                "$ref": "#/components/schemas/U256"\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "Adds the given `U512`.",\n                        "type": "object",\n                        "required": [\n                            "AddUInt512"\n                        ],\n                        "properties": {\n                            "AddUInt512": {\n                                "$ref": "#/components/schemas/U512"\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "Adds the given collection of named keys.",\n                        "type": "object",\n                        "required": [\n                            "AddKeys"\n                        ],\n                        "properties": {\n                            "AddKeys": {\n                                "type": "array",\n                                "items": {\n                                    "$ref": "#/components/schemas/NamedKey"\n                                }\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "A failed transformation, containing an error message.",\n                        "type": "object",\n                        "required": [\n                            "Failure"\n                        ],\n                        "properties": {\n                            "Failure": {\n                                "type": "string"\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "Writes the given Unbonding to global state.",\n                        "type": "object",\n                        "required": [\n                            "WriteUnbonding"\n                        ],\n                        "properties": {\n                            "WriteUnbonding": {\n                                "type": "array",\n                                "items": {\n                                    "$ref": "#/components/schemas/UnbondingPurse"\n                                }\n                            }\n                        },\n                        "additionalProperties": false\n                    }\n                ]\n            },\n            "AccountHash": {\n                "description": "Hex-encoded account hash.",\n                "type": "string"\n            },\n            "DeployInfo": {\n                "description": "Information relating to the given Deploy.",\n                "type": "object",\n                "required": [\n                    "deploy_hash",\n                    "from",\n                    "gas",\n                    "source",\n                    "transfers"\n                ],\n                "properties": {\n                    "deploy_hash": {\n                        "description": "The relevant Deploy.",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/DeployHash"\n                            }\n                        ]\n                    },\n                    "transfers": {\n                        "description": "Transfers performed by the Deploy.",\n                        "type": "array",\n                        "items": {\n                            "$ref": "#/components/schemas/TransferAddr"\n                        }\n                    },\n                    "from": {\n                        "description": "Account identifier of the creator of the Deploy.",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/AccountHash"\n                            }\n                        ]\n                    },\n                    "source": {\n                        "description": "Source purse used for payment of the Deploy.",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/URef"\n                            }\n                        ]\n                    },\n                    "gas": {\n                        "description": "Gas cost of executing the Deploy.",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/U512"\n                            }\n                        ]\n                    }\n                },\n                "additionalProperties": false\n            },\n            "TransferAddr": {\n                "description": "Hex-encoded transfer address.",\n                "type": "string"\n            },\n            "URef": {\n                "description": "Hex-encoded, formatted URef.",\n                "type": "string"\n            },\n            "U512": {\n                "description": "Decimal representation of a 512-bit integer.",\n                "type": "string"\n            },\n            "EraInfo": {\n                "description": "Auction metadata.  Intended to be recorded at each era.",\n                "type": "object",\n                "required": [\n                    "seigniorage_allocations"\n                ],\n                "properties": {\n                    "seigniorage_allocations": {\n                        "type": "array",\n                        "items": {\n                            "$ref": "#/components/schemas/SeigniorageAllocation"\n                        }\n                    }\n                },\n                "additionalProperties": false\n            },\n            "SeigniorageAllocation": {\n                "description": "Information about a seigniorage allocation",\n                "anyOf": [\n                    {\n                        "description": "Info about a seigniorage allocation for a validator",\n                        "type": "object",\n                        "required": [\n                            "Validator"\n                        ],\n                        "properties": {\n                            "Validator": {\n                                "type": "object",\n                                "required": [\n                                    "amount",\n                                    "validator_public_key"\n                                ],\n                                "properties": {\n                                    "validator_public_key": {\n                                        "description": "Validator\'s public key",\n                                        "allOf": [\n                                            {\n                                                "$ref": "#/components/schemas/PublicKey"\n                                            }\n                                        ]\n                                    },\n                                    "amount": {\n                                        "description": "Allocated amount",\n                                        "allOf": [\n                                            {\n                                                "$ref": "#/components/schemas/U512"\n                                            }\n                                        ]\n                                    }\n                                },\n                                "additionalProperties": false\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "Info about a seigniorage allocation for a delegator",\n                        "type": "object",\n                        "required": [\n                            "Delegator"\n                        ],\n                        "properties": {\n                            "Delegator": {\n                                "type": "object",\n                                "required": [\n                                    "amount",\n                                    "delegator_public_key",\n                                    "validator_public_key"\n                                ],\n                                "properties": {\n                                    "delegator_public_key": {\n                                        "description": "Delegator\'s public key",\n                                        "allOf": [\n                                            {\n                                                "$ref": "#/components/schemas/PublicKey"\n                                            }\n                                        ]\n                                    },\n                                    "validator_public_key": {\n                                        "description": "Validator\'s public key",\n                                        "allOf": [\n                                            {\n                                                "$ref": "#/components/schemas/PublicKey"\n                                            }\n                                        ]\n                                    },\n                                    "amount": {\n                                        "description": "Allocated amount",\n                                        "allOf": [\n                                            {\n                                                "$ref": "#/components/schemas/U512"\n                                            }\n                                        ]\n                                    }\n                                },\n                                "additionalProperties": false\n                            }\n                        },\n                        "additionalProperties": false\n                    }\n                ]\n            },\n            "Transfer": {\n                "description": "Represents a transfer from one purse to another",\n                "type": "object",\n                "required": [\n                    "amount",\n                    "deploy_hash",\n                    "from",\n                    "gas",\n                    "source",\n                    "target"\n                ],\n                "properties": {\n                    "deploy_hash": {\n                        "description": "Deploy that created the transfer",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/DeployHash"\n                            }\n                        ]\n                    },\n                    "from": {\n                        "description": "Account from which transfer was executed",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/AccountHash"\n                            }\n                        ]\n                    },\n                    "to": {\n                        "description": "Account to which funds are transferred",\n                        "anyOf": [\n                            {\n                                "$ref": "#/components/schemas/AccountHash"\n                            },\n                            {\n                                "type": "null"\n                            }\n                        ]\n                    },\n                    "source": {\n                        "description": "Source purse",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/URef"\n                            }\n                        ]\n                    },\n                    "target": {\n                        "description": "Target purse",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/URef"\n                            }\n                        ]\n                    },\n                    "amount": {\n                        "description": "Transfer amount",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/U512"\n                            }\n                        ]\n                    },\n                    "gas": {\n                        "description": "Gas",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/U512"\n                            }\n                        ]\n                    },\n                    "id": {\n                        "description": "User-defined id",\n                        "type": [\n                            "integer",\n                            "null"\n                        ],\n                        "format": "uint64",\n                        "minimum": 0.0\n                    }\n                },\n                "additionalProperties": false\n            },\n            "Bid": {\n                "description": "An entry in the validator map.",\n                "type": "object",\n                "required": [\n                    "bonding_purse",\n                    "delegation_rate",\n                    "delegators",\n                    "inactive",\n                    "staked_amount",\n                    "validator_public_key"\n                ],\n                "properties": {\n                    "validator_public_key": {\n                        "description": "Validator public key",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/PublicKey"\n                            }\n                        ]\n                    },\n                    "bonding_purse": {\n                        "description": "The purse that was used for bonding.",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/URef"\n                            }\n                        ]\n                    },\n                    "staked_amount": {\n                        "description": "The amount of tokens staked by a validator (not including delegators).",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/U512"\n                            }\n                        ]\n                    },\n                    "delegation_rate": {\n                        "description": "Delegation rate",\n                        "type": "integer",\n                        "format": "uint8",\n                        "minimum": 0.0\n                    },\n                    "vesting_schedule": {\n                        "description": "Vesting schedule for a genesis validator. `None` if non-genesis validator.",\n                        "anyOf": [\n                            {\n                                "$ref": "#/components/schemas/VestingSchedule"\n                            },\n                            {\n                                "type": "null"\n                            }\n                        ]\n                    },\n                    "delegators": {\n                        "description": "This validator\'s delegators, indexed by their public keys",\n                        "type": "object",\n                        "additionalProperties": {\n                            "$ref": "#/components/schemas/Delegator"\n                        }\n                    },\n                    "inactive": {\n                        "description": "`true` if validator has been \\"evicted\\"",\n                        "type": "boolean"\n                    }\n                },\n                "additionalProperties": false\n            },\n            "VestingSchedule": {\n                "type": "object",\n                "required": [\n                    "initial_release_timestamp_millis"\n                ],\n                "properties": {\n                    "initial_release_timestamp_millis": {\n                        "type": "integer",\n                        "format": "uint64",\n                        "minimum": 0.0\n                    },\n                    "locked_amounts": {\n                        "type": [\n                            "array",\n                            "null"\n                        ],\n                        "items": {\n                            "$ref": "#/components/schemas/U512"\n                        },\n                        "maxItems": 14,\n                        "minItems": 14\n                    }\n                },\n                "additionalProperties": false\n            },\n            "Delegator": {\n                "description": "Represents a party delegating their stake to a validator (or \\"delegatee\\")",\n                "type": "object",\n                "required": [\n                    "bonding_purse",\n                    "delegator_public_key",\n                    "staked_amount",\n                    "validator_public_key"\n                ],\n                "properties": {\n                    "delegator_public_key": {\n                        "$ref": "#/components/schemas/PublicKey"\n                    },\n                    "staked_amount": {\n                        "$ref": "#/components/schemas/U512"\n                    },\n                    "bonding_purse": {\n                        "$ref": "#/components/schemas/URef"\n                    },\n                    "validator_public_key": {\n                        "$ref": "#/components/schemas/PublicKey"\n                    },\n                    "vesting_schedule": {\n                        "anyOf": [\n                            {\n                                "$ref": "#/components/schemas/VestingSchedule"\n                            },\n                            {\n                                "type": "null"\n                            }\n                        ]\n                    }\n                },\n                "additionalProperties": false\n            },\n            "WithdrawPurse": {\n                "description": "A withdraw purse, a legacy structure.",\n                "type": "object",\n                "required": [\n                    "amount",\n                    "bonding_purse",\n                    "era_of_creation",\n                    "unbonder_public_key",\n                    "validator_public_key"\n                ],\n                "properties": {\n                    "bonding_purse": {\n                        "description": "Bonding Purse",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/URef"\n                            }\n                        ]\n                    },\n                    "validator_public_key": {\n                        "description": "Validators public key.",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/PublicKey"\n                            }\n                        ]\n                    },\n                    "unbonder_public_key": {\n                        "description": "Unbonders public key.",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/PublicKey"\n                            }\n                        ]\n                    },\n                    "era_of_creation": {\n                        "description": "Era in which this unbonding request was created.",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/EraId"\n                            }\n                        ]\n                    },\n                    "amount": {\n                        "description": "Unbonding Amount.",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/U512"\n                            }\n                        ]\n                    }\n                },\n                "additionalProperties": false\n            },\n            "EraId": {\n                "description": "Era ID newtype.",\n                "type": "integer",\n                "format": "uint64",\n                "minimum": 0.0\n            },\n            "U128": {\n                "description": "Decimal representation of a 128-bit integer.",\n                "type": "string"\n            },\n            "U256": {\n                "description": "Decimal representation of a 256-bit integer.",\n                "type": "string"\n            },\n            "NamedKey": {\n                "description": "A named key.",\n                "type": "object",\n                "required": [\n                    "key",\n                    "name"\n                ],\n                "properties": {\n                    "name": {\n                        "description": "The name of the entry.",\n                        "type": "string"\n                    },\n                    "key": {\n                        "description": "The value of the entry: a casper `Key` type.",\n                        "type": "string"\n                    }\n                },\n                "additionalProperties": false\n            },\n            "UnbondingPurse": {\n                "description": "Unbonding purse.",\n                "type": "object",\n                "required": [\n                    "amount",\n                    "bonding_purse",\n                    "era_of_creation",\n                    "unbonder_public_key",\n                    "validator_public_key"\n                ],\n                "properties": {\n                    "bonding_purse": {\n                        "description": "Bonding Purse",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/URef"\n                            }\n                        ]\n                    },\n                    "validator_public_key": {\n                        "description": "Validators public key.",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/PublicKey"\n                            }\n                        ]\n                    },\n                    "unbonder_public_key": {\n                        "description": "Unbonders public key.",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/PublicKey"\n                            }\n                        ]\n                    },\n                    "era_of_creation": {\n                        "description": "Era in which this unbonding request was created.",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/EraId"\n                            }\n                        ]\n                    },\n                    "amount": {\n                        "description": "Unbonding Amount.",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/U512"\n                            }\n                        ]\n                    },\n                    "new_validator": {\n                        "description": "The validator public key to re-delegate to.",\n                        "anyOf": [\n                            {\n                                "$ref": "#/components/schemas/PublicKey"\n                            },\n                            {\n                                "type": "null"\n                            }\n                        ]\n                    }\n                },\n                "additionalProperties": false\n            },\n            "AccountIdentifier": {\n                "description": "Identifier of an account.",\n                "anyOf": [\n                    {\n                        "description": "The public key of an account",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/PublicKey"\n                            }\n                        ]\n                    },\n                    {\n                        "description": "The account hash of an account",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/AccountHash"\n                            }\n                        ]\n                    }\n                ]\n            },\n            "BlockIdentifier": {\n                "description": "Identifier for possible ways to retrieve a block.",\n                "anyOf": [\n                    {\n                        "description": "Identify and retrieve the block with its hash.",\n                        "type": "object",\n                        "required": [\n                            "Hash"\n                        ],\n                        "properties": {\n                            "Hash": {\n                                "$ref": "#/components/schemas/BlockHash"\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "Identify and retrieve the block with its height.",\n                        "type": "object",\n                        "required": [\n                            "Height"\n                        ],\n                        "properties": {\n                            "Height": {\n                                "type": "integer",\n                                "format": "uint64",\n                                "minimum": 0.0\n                            }\n                        },\n                        "additionalProperties": false\n                    }\n                ]\n            },\n            "Account": {\n                "description": "Structure representing a user\'s account, stored in global state.",\n                "type": "object",\n                "required": [\n                    "account_hash",\n                    "action_thresholds",\n                    "associated_keys",\n                    "main_purse",\n                    "named_keys"\n                ],\n                "properties": {\n                    "account_hash": {\n                        "$ref": "#/components/schemas/AccountHash"\n                    },\n                    "named_keys": {\n                        "type": "array",\n                        "items": {\n                            "$ref": "#/components/schemas/NamedKey"\n                        }\n                    },\n                    "main_purse": {\n                        "$ref": "#/components/schemas/URef"\n                    },\n                    "associated_keys": {\n                        "type": "array",\n                        "items": {\n                            "$ref": "#/components/schemas/AssociatedKey"\n                        }\n                    },\n                    "action_thresholds": {\n                        "$ref": "#/components/schemas/ActionThresholds"\n                    }\n                },\n                "additionalProperties": false\n            },\n            "AssociatedKey": {\n                "type": "object",\n                "required": [\n                    "account_hash",\n                    "weight"\n                ],\n                "properties": {\n                    "account_hash": {\n                        "$ref": "#/components/schemas/AccountHash"\n                    },\n                    "weight": {\n                        "type": "integer",\n                        "format": "uint8",\n                        "minimum": 0.0\n                    }\n                },\n                "additionalProperties": false\n            },\n            "ActionThresholds": {\n                "description": "Thresholds that have to be met when executing an action of a certain type.",\n                "type": "object",\n                "required": [\n                    "deployment",\n                    "key_management"\n                ],\n                "properties": {\n                    "deployment": {\n                        "type": "integer",\n                        "format": "uint8",\n                        "minimum": 0.0\n                    },\n                    "key_management": {\n                        "type": "integer",\n                        "format": "uint8",\n                        "minimum": 0.0\n                    }\n                },\n                "additionalProperties": false\n            },\n            "DictionaryIdentifier": {\n                "description": "Options for dictionary item lookups.",\n                "anyOf": [\n                    {\n                        "description": "Lookup a dictionary item via an Account\'s named keys.",\n                        "type": "object",\n                        "required": [\n                            "AccountNamedKey"\n                        ],\n                        "properties": {\n                            "AccountNamedKey": {\n                                "type": "object",\n                                "required": [\n                                    "dictionary_item_key",\n                                    "dictionary_name",\n                                    "key"\n                                ],\n                                "properties": {\n                                    "key": {\n                                        "description": "The account key as a formatted string whose named keys contains dictionary_name.",\n                                        "type": "string"\n                                    },\n                                    "dictionary_name": {\n                                        "description": "The named key under which the dictionary seed URef is stored.",\n                                        "type": "string"\n                                    },\n                                    "dictionary_item_key": {\n                                        "description": "The dictionary item key formatted as a string.",\n                                        "type": "string"\n                                    }\n                                }\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "Lookup a dictionary item via a Contract\'s named keys.",\n                        "type": "object",\n                        "required": [\n                            "ContractNamedKey"\n                        ],\n                        "properties": {\n                            "ContractNamedKey": {\n                                "type": "object",\n                                "required": [\n                                    "dictionary_item_key",\n                                    "dictionary_name",\n                                    "key"\n                                ],\n                                "properties": {\n                                    "key": {\n                                        "description": "The contract key as a formatted string whose named keys contains dictionary_name.",\n                                        "type": "string"\n                                    },\n                                    "dictionary_name": {\n                                        "description": "The named key under which the dictionary seed URef is stored.",\n                                        "type": "string"\n                                    },\n                                    "dictionary_item_key": {\n                                        "description": "The dictionary item key formatted as a string.",\n                                        "type": "string"\n                                    }\n                                }\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "Lookup a dictionary item via its seed URef.",\n                        "type": "object",\n                        "required": [\n                            "URef"\n                        ],\n                        "properties": {\n                            "URef": {\n                                "type": "object",\n                                "required": [\n                                    "dictionary_item_key",\n                                    "seed_uref"\n                                ],\n                                "properties": {\n                                    "seed_uref": {\n                                        "description": "The dictionary\'s seed URef.",\n                                        "type": "string"\n                                    },\n                                    "dictionary_item_key": {\n                                        "description": "The dictionary item key formatted as a string.",\n                                        "type": "string"\n                                    }\n                                }\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "Lookup a dictionary item via its unique key.",\n                        "type": "object",\n                        "required": [\n                            "Dictionary"\n                        ],\n                        "properties": {\n                            "Dictionary": {\n                                "type": "string"\n                            }\n                        },\n                        "additionalProperties": false\n                    }\n                ]\n            },\n            "StoredValue": {\n                "description": "Representation of a value stored in global state.\\n\\n`Account`, `Contract` and `ContractPackage` have their own `json_compatibility` representations (see their docs for further info).",\n                "anyOf": [\n                    {\n                        "description": "An instance of any variant of CLValue",\n                        "type": "object",\n                        "required": [\n                            "CLValue"\n                        ],\n                        "properties": {\n                            "CLValue": {\n                                "$ref": "#/components/schemas/CLValue"\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "An account.",\n                        "type": "object",\n                        "required": [\n                            "Account"\n                        ],\n                        "properties": {\n                            "Account": {\n                                "$ref": "#/components/schemas/Account"\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "A contract\'s Wasm",\n                        "type": "object",\n                        "required": [\n                            "ContractWasm"\n                        ],\n                        "properties": {\n                            "ContractWasm": {\n                                "type": "string"\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "Methods and type signatures supported by a contract.",\n                        "type": "object",\n                        "required": [\n                            "Contract"\n                        ],\n                        "properties": {\n                            "Contract": {\n                                "$ref": "#/components/schemas/Contract"\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "A contract definition, metadata, and security container.",\n                        "type": "object",\n                        "required": [\n                            "ContractPackage"\n                        ],\n                        "properties": {\n                            "ContractPackage": {\n                                "$ref": "#/components/schemas/ContractPackage"\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "A record of a transfer",\n                        "type": "object",\n                        "required": [\n                            "Transfer"\n                        ],\n                        "properties": {\n                            "Transfer": {\n                                "$ref": "#/components/schemas/Transfer"\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "A record of a deploy",\n                        "type": "object",\n                        "required": [\n                            "DeployInfo"\n                        ],\n                        "properties": {\n                            "DeployInfo": {\n                                "$ref": "#/components/schemas/DeployInfo"\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "Auction metadata",\n                        "type": "object",\n                        "required": [\n                            "EraInfo"\n                        ],\n                        "properties": {\n                            "EraInfo": {\n                                "$ref": "#/components/schemas/EraInfo"\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "A bid",\n                        "type": "object",\n                        "required": [\n                            "Bid"\n                        ],\n                        "properties": {\n                            "Bid": {\n                                "$ref": "#/components/schemas/Bid"\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "A withdraw",\n                        "type": "object",\n                        "required": [\n                            "Withdraw"\n                        ],\n                        "properties": {\n                            "Withdraw": {\n                                "type": "array",\n                                "items": {\n                                    "$ref": "#/components/schemas/WithdrawPurse"\n                                }\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "A collection of unbonding purses",\n                        "type": "object",\n                        "required": [\n                            "Unbonding"\n                        ],\n                        "properties": {\n                            "Unbonding": {\n                                "type": "array",\n                                "items": {\n                                    "$ref": "#/components/schemas/UnbondingPurse"\n                                }\n                            }\n                        },\n                        "additionalProperties": false\n                    }\n                ]\n            },\n            "Contract": {\n                "description": "A contract struct that can be serialized as  JSON object.",\n                "type": "object",\n                "required": [\n                    "contract_package_hash",\n                    "contract_wasm_hash",\n                    "entry_points",\n                    "named_keys",\n                    "protocol_version"\n                ],\n                "properties": {\n                    "contract_package_hash": {\n                        "$ref": "#/components/schemas/ContractPackageHash"\n                    },\n                    "contract_wasm_hash": {\n                        "$ref": "#/components/schemas/ContractWasmHash"\n                    },\n                    "named_keys": {\n                        "type": "array",\n                        "items": {\n                            "$ref": "#/components/schemas/NamedKey"\n                        }\n                    },\n                    "entry_points": {\n                        "type": "array",\n                        "items": {\n                            "$ref": "#/components/schemas/EntryPoint"\n                        }\n                    },\n                    "protocol_version": {\n                        "type": "string"\n                    }\n                },\n                "additionalProperties": false\n            },\n            "ContractPackageHash": {\n                "description": "The hash address of the contract package",\n                "type": "string"\n            },\n            "ContractWasmHash": {\n                "description": "The hash address of the contract wasm",\n                "type": "string"\n            },\n            "EntryPoint": {\n                "description": "Type signature of a method. Order of arguments matter since can be referenced by index as well as name.",\n                "type": "object",\n                "required": [\n                    "access",\n                    "args",\n                    "entry_point_type",\n                    "name",\n                    "ret"\n                ],\n                "properties": {\n                    "name": {\n                        "type": "string"\n                    },\n                    "args": {\n                        "type": "array",\n                        "items": {\n                            "$ref": "#/components/schemas/Parameter"\n                        }\n                    },\n                    "ret": {\n                        "$ref": "#/components/schemas/CLType"\n                    },\n                    "access": {\n                        "$ref": "#/components/schemas/EntryPointAccess"\n                    },\n                    "entry_point_type": {\n                        "$ref": "#/components/schemas/EntryPointType"\n                    }\n                }\n            },\n            "Parameter": {\n                "description": "Parameter to a method",\n                "type": "object",\n                "required": [\n                    "cl_type",\n                    "name"\n                ],\n                "properties": {\n                    "name": {\n                        "type": "string"\n                    },\n                    "cl_type": {\n                        "$ref": "#/components/schemas/CLType"\n                    }\n                }\n            },\n            "EntryPointAccess": {\n                "description": "Enum describing the possible access control options for a contract entry point (method).",\n                "anyOf": [\n                    {\n                        "type": "string",\n                        "enum": [\n                            "Public"\n                        ]\n                    },\n                    {\n                        "description": "Only users from the listed groups may call this method. Note: if the list is empty then this method is not callable from outside the contract.",\n                        "type": "object",\n                        "required": [\n                            "Groups"\n                        ],\n                        "properties": {\n                            "Groups": {\n                                "type": "array",\n                                "items": {\n                                    "$ref": "#/components/schemas/Group"\n                                }\n                            }\n                        },\n                        "additionalProperties": false\n                    }\n                ]\n            },\n            "Group": {\n                "description": "A (labelled) \\"user group\\". Each method of a versioned contract may be associated with one or more user groups which are allowed to call it.",\n                "type": "string"\n            },\n            "EntryPointType": {\n                "description": "Context of method execution",\n                "type": "string",\n                "enum": [\n                    "Session",\n                    "Contract"\n                ]\n            },\n            "ContractPackage": {\n                "description": "Contract definition, metadata, and security container.",\n                "type": "object",\n                "required": [\n                    "access_key",\n                    "disabled_versions",\n                    "groups",\n                    "lock_status",\n                    "versions"\n                ],\n                "properties": {\n                    "access_key": {\n                        "$ref": "#/components/schemas/URef"\n                    },\n                    "versions": {\n                        "type": "array",\n                        "items": {\n                            "$ref": "#/components/schemas/ContractVersion"\n                        }\n                    },\n                    "disabled_versions": {\n                        "type": "array",\n                        "items": {\n                            "$ref": "#/components/schemas/DisabledVersion"\n                        }\n                    },\n                    "groups": {\n                        "type": "array",\n                        "items": {\n                            "$ref": "#/components/schemas/Groups"\n                        }\n                    },\n                    "lock_status": {\n                        "$ref": "#/components/schemas/ContractPackageStatus"\n                    }\n                },\n                "additionalProperties": false\n            },\n            "ContractVersion": {\n                "type": "object",\n                "required": [\n                    "contract_hash",\n                    "contract_version",\n                    "protocol_version_major"\n                ],\n                "properties": {\n                    "protocol_version_major": {\n                        "type": "integer",\n                        "format": "uint32",\n                        "minimum": 0.0\n                    },\n                    "contract_version": {\n                        "type": "integer",\n                        "format": "uint32",\n                        "minimum": 0.0\n                    },\n                    "contract_hash": {\n                        "$ref": "#/components/schemas/ContractHash"\n                    }\n                }\n            },\n            "ContractHash": {\n                "description": "The hash address of the contract",\n                "type": "string"\n            },\n            "DisabledVersion": {\n                "type": "object",\n                "required": [\n                    "contract_version",\n                    "protocol_version_major"\n                ],\n                "properties": {\n                    "protocol_version_major": {\n                        "type": "integer",\n                        "format": "uint32",\n                        "minimum": 0.0\n                    },\n                    "contract_version": {\n                        "type": "integer",\n                        "format": "uint32",\n                        "minimum": 0.0\n                    }\n                }\n            },\n            "Groups": {\n                "type": "object",\n                "required": [\n                    "group",\n                    "keys"\n                ],\n                "properties": {\n                    "group": {\n                        "type": "string"\n                    },\n                    "keys": {\n                        "type": "array",\n                        "items": {\n                            "$ref": "#/components/schemas/URef"\n                        }\n                    }\n                }\n            },\n            "ContractPackageStatus": {\n                "description": "A enum to determine the lock status of the contract package.",\n                "type": "string",\n                "enum": [\n                    "Locked",\n                    "Unlocked"\n                ]\n            },\n            "GlobalStateIdentifier": {\n                "description": "Identifier for possible ways to query Global State",\n                "anyOf": [\n                    {\n                        "description": "Query using a block hash.",\n                        "type": "object",\n                        "required": [\n                            "BlockHash"\n                        ],\n                        "properties": {\n                            "BlockHash": {\n                                "$ref": "#/components/schemas/BlockHash"\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "Query using a block height.",\n                        "type": "object",\n                        "required": [\n                            "BlockHeight"\n                        ],\n                        "properties": {\n                            "BlockHeight": {\n                                "type": "integer",\n                                "format": "uint64",\n                                "minimum": 0.0\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "Query using the state root hash.",\n                        "type": "object",\n                        "required": [\n                            "StateRootHash"\n                        ],\n                        "properties": {\n                            "StateRootHash": {\n                                "$ref": "#/components/schemas/Digest"\n                            }\n                        },\n                        "additionalProperties": false\n                    }\n                ]\n            },\n            "JsonBlockHeader": {\n                "description": "JSON representation of a block header.",\n                "type": "object",\n                "required": [\n                    "accumulated_seed",\n                    "body_hash",\n                    "era_id",\n                    "height",\n                    "parent_hash",\n                    "protocol_version",\n                    "random_bit",\n                    "state_root_hash",\n                    "timestamp"\n                ],\n                "properties": {\n                    "parent_hash": {\n                        "description": "The parent hash.",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/BlockHash"\n                            }\n                        ]\n                    },\n                    "state_root_hash": {\n                        "description": "The state root hash.",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/Digest"\n                            }\n                        ]\n                    },\n                    "body_hash": {\n                        "description": "The body hash.",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/Digest"\n                            }\n                        ]\n                    },\n                    "random_bit": {\n                        "description": "Randomness bit.",\n                        "type": "boolean"\n                    },\n                    "accumulated_seed": {\n                        "description": "Accumulated seed.",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/Digest"\n                            }\n                        ]\n                    },\n                    "era_end": {\n                        "description": "The era end.",\n                        "anyOf": [\n                            {\n                                "$ref": "#/components/schemas/JsonEraEnd"\n                            },\n                            {\n                                "type": "null"\n                            }\n                        ]\n                    },\n                    "timestamp": {\n                        "description": "The block timestamp.",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/Timestamp"\n                            }\n                        ]\n                    },\n                    "era_id": {\n                        "description": "The block era id.",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/EraId"\n                            }\n                        ]\n                    },\n                    "height": {\n                        "description": "The block height.",\n                        "type": "integer",\n                        "format": "uint64",\n                        "minimum": 0.0\n                    },\n                    "protocol_version": {\n                        "description": "The protocol version.",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/ProtocolVersion"\n                            }\n                        ]\n                    }\n                },\n                "additionalProperties": false\n            },\n            "JsonEraEnd": {\n                "type": "object",\n                "required": [\n                    "era_report",\n                    "next_era_validator_weights"\n                ],\n                "properties": {\n                    "era_report": {\n                        "$ref": "#/components/schemas/JsonEraReport"\n                    },\n                    "next_era_validator_weights": {\n                        "type": "array",\n                        "items": {\n                            "$ref": "#/components/schemas/ValidatorWeight"\n                        }\n                    }\n                },\n                "additionalProperties": false\n            },\n            "JsonEraReport": {\n                "description": "Equivocation and reward information to be included in the terminal block.",\n                "type": "object",\n                "required": [\n                    "equivocators",\n                    "inactive_validators",\n                    "rewards"\n                ],\n                "properties": {\n                    "equivocators": {\n                        "type": "array",\n                        "items": {\n                            "$ref": "#/components/schemas/PublicKey"\n                        }\n                    },\n                    "rewards": {\n                        "type": "array",\n                        "items": {\n                            "$ref": "#/components/schemas/Reward"\n                        }\n                    },\n                    "inactive_validators": {\n                        "type": "array",\n                        "items": {\n                            "$ref": "#/components/schemas/PublicKey"\n                        }\n                    }\n                },\n                "additionalProperties": false\n            },\n            "Reward": {\n                "type": "object",\n                "required": [\n                    "amount",\n                    "validator"\n                ],\n                "properties": {\n                    "validator": {\n                        "$ref": "#/components/schemas/PublicKey"\n                    },\n                    "amount": {\n                        "type": "integer",\n                        "format": "uint64",\n                        "minimum": 0.0\n                    }\n                },\n                "additionalProperties": false\n            },\n            "ValidatorWeight": {\n                "type": "object",\n                "required": [\n                    "validator",\n                    "weight"\n                ],\n                "properties": {\n                    "validator": {\n                        "$ref": "#/components/schemas/PublicKey"\n                    },\n                    "weight": {\n                        "$ref": "#/components/schemas/U512"\n                    }\n                },\n                "additionalProperties": false\n            },\n            "ProtocolVersion": {\n                "description": "Casper Platform protocol version",\n                "type": "string"\n            },\n            "PurseIdentifier": {\n                "description": "Identifier of a purse.",\n                "anyOf": [\n                    {\n                        "description": "The main purse of the account identified by this public key.",\n                        "type": "object",\n                        "required": [\n                            "main_purse_under_public_key"\n                        ],\n                        "properties": {\n                            "main_purse_under_public_key": {\n                                "$ref": "#/components/schemas/PublicKey"\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "The main purse of the account identified by this account hash.",\n                        "type": "object",\n                        "required": [\n                            "main_purse_under_account_hash"\n                        ],\n                        "properties": {\n                            "main_purse_under_account_hash": {\n                                "$ref": "#/components/schemas/AccountHash"\n                            }\n                        },\n                        "additionalProperties": false\n                    },\n                    {\n                        "description": "The purse identified by this URef.",\n                        "type": "object",\n                        "required": [\n                            "purse_uref"\n                        ],\n                        "properties": {\n                            "purse_uref": {\n                                "$ref": "#/components/schemas/URef"\n                            }\n                        },\n                        "additionalProperties": false\n                    }\n                ]\n            },\n            "PeersMap": {\n                "description": "Map of peer IDs to network addresses.",\n                "type": "array",\n                "items": {\n                    "$ref": "#/components/schemas/PeerEntry"\n                }\n            },\n            "PeerEntry": {\n                "description": "Node peer entry.",\n                "type": "object",\n                "required": [\n                    "address",\n                    "node_id"\n                ],\n                "properties": {\n                    "node_id": {\n                        "description": "Node id.",\n                        "type": "string"\n                    },\n                    "address": {\n                        "description": "Node address.",\n                        "type": "string"\n                    }\n                },\n                "additionalProperties": false\n            },\n            "MinimalBlockInfo": {\n                "description": "Minimal info of a `Block`.",\n                "type": "object",\n                "required": [\n                    "creator",\n                    "era_id",\n                    "hash",\n                    "height",\n                    "state_root_hash",\n                    "timestamp"\n                ],\n                "properties": {\n                    "hash": {\n                        "$ref": "#/components/schemas/BlockHash"\n                    },\n                    "timestamp": {\n                        "$ref": "#/components/schemas/Timestamp"\n                    },\n                    "era_id": {\n                        "$ref": "#/components/schemas/EraId"\n                    },\n                    "height": {\n                        "type": "integer",\n                        "format": "uint64",\n                        "minimum": 0.0\n                    },\n                    "state_root_hash": {\n                        "$ref": "#/components/schemas/Digest"\n                    },\n                    "creator": {\n                        "$ref": "#/components/schemas/PublicKey"\n                    }\n                },\n                "additionalProperties": false\n            },\n            "NextUpgrade": {\n                "description": "Information about the next protocol upgrade.",\n                "type": "object",\n                "required": [\n                    "activation_point",\n                    "protocol_version"\n                ],\n                "properties": {\n                    "activation_point": {\n                        "$ref": "#/components/schemas/ActivationPoint"\n                    },\n                    "protocol_version": {\n                        "type": "string"\n                    }\n                }\n            },\n            "ActivationPoint": {\n                "description": "The first era to which the associated protocol version applies.",\n                "anyOf": [\n                    {\n                        "description": "Era id.",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/EraId"\n                            }\n                        ]\n                    },\n                    {\n                        "description": "Genesis timestamp.",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/Timestamp"\n                            }\n                        ]\n                    }\n                ]\n            },\n            "ReactorState": {\n                "description": "The state of the reactor.",\n                "type": "string",\n                "enum": [\n                    "Initialize",\n                    "CatchUp",\n                    "Upgrading",\n                    "KeepUp",\n                    "Validate",\n                    "ShutdownForUpgrade"\n                ]\n            },\n            "AvailableBlockRange": {\n                "description": "An unbroken, inclusive range of blocks.",\n                "type": "object",\n                "required": [\n                    "high",\n                    "low"\n                ],\n                "properties": {\n                    "low": {\n                        "description": "The inclusive lower bound of the range.",\n                        "type": "integer",\n                        "format": "uint64",\n                        "minimum": 0.0\n                    },\n                    "high": {\n                        "description": "The inclusive upper bound of the range.",\n                        "type": "integer",\n                        "format": "uint64",\n                        "minimum": 0.0\n                    }\n                },\n                "additionalProperties": false\n            },\n            "BlockSynchronizerStatus": {\n                "description": "The status of the block synchronizer.",\n                "type": "object",\n                "properties": {\n                    "historical": {\n                        "description": "The status of syncing a historical block, if any.",\n                        "anyOf": [\n                            {\n                                "$ref": "#/components/schemas/BlockSyncStatus"\n                            },\n                            {\n                                "type": "null"\n                            }\n                        ]\n                    },\n                    "forward": {\n                        "description": "The status of syncing a forward block, if any.",\n                        "anyOf": [\n                            {\n                                "$ref": "#/components/schemas/BlockSyncStatus"\n                            },\n                            {\n                                "type": "null"\n                            }\n                        ]\n                    }\n                },\n                "additionalProperties": false\n            },\n            "BlockSyncStatus": {\n                "description": "The status of syncing an individual block.",\n                "type": "object",\n                "required": [\n                    "acquisition_state",\n                    "block_hash"\n                ],\n                "properties": {\n                    "block_hash": {\n                        "description": "The block hash.",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/BlockHash"\n                            }\n                        ]\n                    },\n                    "block_height": {\n                        "description": "The height of the block, if known.",\n                        "type": [\n                            "integer",\n                            "null"\n                        ],\n                        "format": "uint64",\n                        "minimum": 0.0\n                    },\n                    "acquisition_state": {\n                        "description": "The state of acquisition of the data associated with the block.",\n                        "type": "string"\n                    }\n                },\n                "additionalProperties": false\n            },\n            "JsonValidatorChanges": {\n                "description": "The changes in a validator\'s status.",\n                "type": "object",\n                "required": [\n                    "public_key",\n                    "status_changes"\n                ],\n                "properties": {\n                    "public_key": {\n                        "description": "The public key of the validator.",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/PublicKey"\n                            }\n                        ]\n                    },\n                    "status_changes": {\n                        "description": "The set of changes to the validator\'s status.",\n                        "type": "array",\n                        "items": {\n                            "$ref": "#/components/schemas/JsonValidatorStatusChange"\n                        }\n                    }\n                },\n                "additionalProperties": false\n            },\n            "JsonValidatorStatusChange": {\n                "description": "A single change to a validator\'s status in the given era.",\n                "type": "object",\n                "required": [\n                    "era_id",\n                    "validator_change"\n                ],\n                "properties": {\n                    "era_id": {\n                        "description": "The era in which the change occurred.",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/EraId"\n                            }\n                        ]\n                    },\n                    "validator_change": {\n                        "description": "The change in validator status.",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/ValidatorChange"\n                            }\n                        ]\n                    }\n                },\n                "additionalProperties": false\n            },\n            "ValidatorChange": {\n                "description": "A change to a validator\'s status between two eras.",\n                "type": "string",\n                "enum": [\n                    "Added",\n                    "Removed",\n                    "Banned",\n                    "CannotPropose",\n                    "SeenAsFaulty"\n                ]\n            },\n            "ChainspecRawBytes": {\n                "description": "The raw bytes of the chainspec.toml, genesis accounts.toml, and global_state.toml files.",\n                "type": "object",\n                "required": [\n                    "chainspec_bytes",\n                    "maybe_genesis_accounts_bytes",\n                    "maybe_global_state_bytes"\n                ],\n                "properties": {\n                    "chainspec_bytes": {\n                        "description": "Hex-encoded raw bytes of the current chainspec.toml file.",\n                        "type": "string"\n                    },\n                    "maybe_genesis_accounts_bytes": {\n                        "description": "Hex-encoded raw bytes of the current genesis accounts.toml file.",\n                        "type": "string"\n                    },\n                    "maybe_global_state_bytes": {\n                        "description": "Hex-encoded raw bytes of the current global_state.toml file.",\n                        "type": "string"\n                    }\n                }\n            },\n            "JsonBlock": {\n                "description": "A JSON-friendly representation of `Block`.",\n                "type": "object",\n                "required": [\n                    "body",\n                    "hash",\n                    "header",\n                    "proofs"\n                ],\n                "properties": {\n                    "hash": {\n                        "description": "`BlockHash`",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/BlockHash"\n                            }\n                        ]\n                    },\n                    "header": {\n                        "description": "JSON-friendly block header.",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/JsonBlockHeader"\n                            }\n                        ]\n                    },\n                    "body": {\n                        "description": "JSON-friendly block body.",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/JsonBlockBody"\n                            }\n                        ]\n                    },\n                    "proofs": {\n                        "description": "JSON-friendly list of proofs for this block.",\n                        "type": "array",\n                        "items": {\n                            "$ref": "#/components/schemas/JsonProof"\n                        }\n                    }\n                },\n                "additionalProperties": false\n            },\n            "JsonBlockBody": {\n                "description": "A JSON-friendly representation of `Body`",\n                "type": "object",\n                "required": [\n                    "deploy_hashes",\n                    "proposer",\n                    "transfer_hashes"\n                ],\n                "properties": {\n                    "proposer": {\n                        "$ref": "#/components/schemas/PublicKey"\n                    },\n                    "deploy_hashes": {\n                        "type": "array",\n                        "items": {\n                            "$ref": "#/components/schemas/DeployHash"\n                        }\n                    },\n                    "transfer_hashes": {\n                        "type": "array",\n                        "items": {\n                            "$ref": "#/components/schemas/DeployHash"\n                        }\n                    }\n                },\n                "additionalProperties": false\n            },\n            "JsonProof": {\n                "description": "A JSON-friendly representation of a proof, i.e. a block\'s finality signature.",\n                "type": "object",\n                "required": [\n                    "public_key",\n                    "signature"\n                ],\n                "properties": {\n                    "public_key": {\n                        "$ref": "#/components/schemas/PublicKey"\n                    },\n                    "signature": {\n                        "$ref": "#/components/schemas/Signature"\n                    }\n                },\n                "additionalProperties": false\n            },\n            "EraSummary": {\n                "description": "The summary of an era",\n                "type": "object",\n                "required": [\n                    "block_hash",\n                    "era_id",\n                    "merkle_proof",\n                    "state_root_hash",\n                    "stored_value"\n                ],\n                "properties": {\n                    "block_hash": {\n                        "description": "The block hash",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/BlockHash"\n                            }\n                        ]\n                    },\n                    "era_id": {\n                        "description": "The era id",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/EraId"\n                            }\n                        ]\n                    },\n                    "stored_value": {\n                        "description": "The StoredValue containing era information",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/StoredValue"\n                            }\n                        ]\n                    },\n                    "state_root_hash": {\n                        "description": "Hex-encoded hash of the state root",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/Digest"\n                            }\n                        ]\n                    },\n                    "merkle_proof": {\n                        "description": "The Merkle proof",\n                        "type": "string"\n                    }\n                },\n                "additionalProperties": false\n            },\n            "AuctionState": {\n                "description": "Data structure summarizing auction contract data.",\n                "type": "object",\n                "required": [\n                    "bids",\n                    "block_height",\n                    "era_validators",\n                    "state_root_hash"\n                ],\n                "properties": {\n                    "state_root_hash": {\n                        "description": "Global state hash.",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/Digest"\n                            }\n                        ]\n                    },\n                    "block_height": {\n                        "description": "Block height.",\n                        "type": "integer",\n                        "format": "uint64",\n                        "minimum": 0.0\n                    },\n                    "era_validators": {\n                        "description": "Era validators.",\n                        "type": "array",\n                        "items": {\n                            "$ref": "#/components/schemas/JsonEraValidators"\n                        }\n                    },\n                    "bids": {\n                        "description": "All bids contained within a vector.",\n                        "type": "array",\n                        "items": {\n                            "$ref": "#/components/schemas/JsonBids"\n                        }\n                    }\n                },\n                "additionalProperties": false\n            },\n            "JsonEraValidators": {\n                "description": "The validators for the given era.",\n                "type": "object",\n                "required": [\n                    "era_id",\n                    "validator_weights"\n                ],\n                "properties": {\n                    "era_id": {\n                        "$ref": "#/components/schemas/EraId"\n                    },\n                    "validator_weights": {\n                        "type": "array",\n                        "items": {\n                            "$ref": "#/components/schemas/JsonValidatorWeights"\n                        }\n                    }\n                },\n                "additionalProperties": false\n            },\n            "JsonValidatorWeights": {\n                "description": "A validator\'s weight.",\n                "type": "object",\n                "required": [\n                    "public_key",\n                    "weight"\n                ],\n                "properties": {\n                    "public_key": {\n                        "$ref": "#/components/schemas/PublicKey"\n                    },\n                    "weight": {\n                        "$ref": "#/components/schemas/U512"\n                    }\n                },\n                "additionalProperties": false\n            },\n            "JsonBids": {\n                "description": "A Json representation of a single bid.",\n                "type": "object",\n                "required": [\n                    "bid",\n                    "public_key"\n                ],\n                "properties": {\n                    "public_key": {\n                        "$ref": "#/components/schemas/PublicKey"\n                    },\n                    "bid": {\n                        "$ref": "#/components/schemas/JsonBid"\n                    }\n                },\n                "additionalProperties": false\n            },\n            "JsonBid": {\n                "description": "An entry in a founding validator map representing a bid.",\n                "type": "object",\n                "required": [\n                    "bonding_purse",\n                    "delegation_rate",\n                    "delegators",\n                    "inactive",\n                    "staked_amount"\n                ],\n                "properties": {\n                    "bonding_purse": {\n                        "description": "The purse that was used for bonding.",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/URef"\n                            }\n                        ]\n                    },\n                    "staked_amount": {\n                        "description": "The amount of tokens staked by a validator (not including delegators).",\n                        "allOf": [\n                            {\n                                "$ref": "#/components/schemas/U512"\n                            }\n                        ]\n                    },\n                    "delegation_rate": {\n                        "description": "The delegation rate.",\n                        "type": "integer",\n                        "format": "uint8",\n                        "minimum": 0.0\n                    },\n                    "delegators": {\n                        "description": "The delegators.",\n                        "type": "array",\n                        "items": {\n                            "$ref": "#/components/schemas/JsonDelegator"\n                        }\n                    },\n                    "inactive": {\n                        "description": "Is this an inactive validator.",\n                        "type": "boolean"\n                    }\n                },\n                "additionalProperties": false\n            },\n            "JsonDelegator": {\n                "description": "A delegator associated with the given validator.",\n                "type": "object",\n                "required": [\n                    "bonding_purse",\n                    "delegatee",\n                    "public_key",\n                    "staked_amount"\n                ],\n                "properties": {\n                    "public_key": {\n                        "$ref": "#/components/schemas/PublicKey"\n                    },\n                    "staked_amount": {\n                        "$ref": "#/components/schemas/U512"\n                    },\n                    "bonding_purse": {\n                        "$ref": "#/components/schemas/URef"\n                    },\n                    "delegatee": {\n                        "$ref": "#/components/schemas/PublicKey"\n                    }\n                },\n                "additionalProperties": false\n            }\n        }\n    }\n} \n'})})}function l(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>a});var r=t(96540);const o={},i=r.createContext(o);function s(n){const e=r.useContext(i);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:s(n.components),r.createElement(i.Provider,{value:e},n.children)}}}]);