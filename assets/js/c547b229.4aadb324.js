"use strict";(self.webpackChunkcspr_docs_redux=self.webpackChunkcspr_docs_redux||[]).push([[65551],{74769:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>c,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>i});const s=JSON.parse('{"id":"jsonrpc-comp/rpc-2.0/schema/CLValue.json","title":"CLValue.json","description":"","source":"@site/condor/jsonrpc-comp/rpc-2.0/schema/CLValue.json.md","sourceDirName":"jsonrpc-comp/rpc-2.0/schema","slug":"/jsonrpc-comp/rpc-2.0/schema/CLValue.json","permalink":"/condor/jsonrpc-comp/rpc-2.0/schema/CLValue.json","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{}}');var r=t(74848),o=t(28453);const a={},c=void 0,p={},i=[];function d(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:"copy ",children:'{\n    "description": "A Casper value, i.e. a value which can be stored and manipulated by smart contracts.\\n\\nIt holds the underlying data as a type-erased, serialized `Vec<u8>` and also holds the CLType of the underlying data as a separate member.\\n\\nThe `parsed` field, representing the original value, is a convenience only available when a CLValue is encoded to JSON, and can always be set to null if preferred.",\n    "type": "object",\n    "required": [\n        "bytes",\n        "cl_type"\n    ],\n    "properties": {\n        "cl_type": {\n            "$ref": "#/components/schemas/CLType"\n        },\n        "bytes": {\n            "type": "string"\n        },\n        "parsed": true\n    },\n    "additionalProperties": false\n} \n'})})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var s=t(96540);const r={},o=s.createContext(r);function a(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);