"use strict";(self.webpackChunkcspr_docs_redux=self.webpackChunkcspr_docs_redux||[]).push([[90227],{85289:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>f,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"jsonrpc-comp/rpc-1.5/schema.json","title":"schema.json","description":"","source":"@site/condor/jsonrpc-comp/rpc-1.5/schema.json.md","sourceDirName":"jsonrpc-comp/rpc-1.5","slug":"/jsonrpc-comp/rpc-1.5/schema.json","permalink":"/condor/jsonrpc-comp/rpc-1.5/schema.json","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{}}');var r=a(74848),s=a(28453);const o={},i=void 0,c={},d=[];function p(n){const e={code:"code",pre:"pre",...(0,s.R)(),...n.components};return(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-json",metastring:"copy ",children:'{\n  "openrpc": "1.0.0-rc1",\n  "info": {\n    "version": "1.5.6",\n    "title": "Client API of Casper Node",\n    "description": "This describes the JSON-RPC 2.0 API of a node on the Casper network.",\n    "contact": {\n      "name": "Casper Labs",\n      "url": "https://casperlabs.io"\n    },\n    "license": {\n      "name": "APACHE LICENSE, VERSION 2.0",\n      "url": "https://www.apache.org/licenses/LICENSE-2.0"\n    }\n  },\n  "servers": [\n    {\n      "name": "any Casper Network node",\n      "url": "http://IP:PORT/rpc/"\n    }\n  ],\n  "methods": [\n    {\n      "name": "account_put_deploy",\n      "summary": "receives a Deploy to be executed by the network",\n      "params": [\n        {\n          "name": "deploy",\n          "schema": {\n            "description": "The `Deploy`.",\n            "$ref": "#/components/schemas/Deploy"\n          },\n          "required": true\n        }\n      ],\n      "result": {\n        "name": "account_put_deploy_result",\n        "schema": {\n          "description": "Result for \\"account_put_deploy\\" RPC response.",\n          "type": "object",\n          "required": [\n            "api_version",\n            "deploy_hash"\n          ],\n          "properties": {\n            "api_version": {\n              "description": "The RPC API version.",\n              "type": "string"\n            },\n            "deploy_hash": {\n              "description": "The deploy hash.",\n              "$ref": "#/components/schemas/DeployHash"\n            }\n          },\n          "additionalProperties": false\n        }\n      },\n      "examples": [\n        {\n          "name": "account_put_deploy_example",\n          "params": [\n            {\n              "name": "deploy",\n              "value": {\n                "hash": "5c9b3b099c1378aa8e4a5f07f59ff1fcdc69a83179427c7e67ae0377d94d93fa",\n                "header": {\n                  "account": "01d9bf2148748a85c89da5aad8ee0b0fc2d105fd39d41a4c796536354f0ae2900c",\n                  "timestamp": "2020-11-17T00:39:24.072Z",\n                  "ttl": "1h",\n                  "gas_price": 1,\n                  "body_hash": "d53cf72d17278fd47d399013ca389c50d589352f1a12593c0b8e01872a641b50",\n                  "dependencies": [\n                    "0101010101010101010101010101010101010101010101010101010101010101"\n                  ],\n                  "chain_name": "casper-example"\n                },\n                "payment": {\n                  "StoredContractByName": {\n                    "name": "casper-example",\n                    "entry_point": "example-entry-point",\n                    "args": [\n                      [\n                        "amount",\n                        {\n                          "cl_type": "I32",\n                          "bytes": "e8030000",\n                          "parsed": 1000\n                        }\n                      ]\n                    ]\n                  }\n                },\n                "session": {\n                  "Transfer": {\n                    "args": [\n                      [\n                        "amount",\n                        {\n                          "cl_type": "I32",\n                          "bytes": "e8030000",\n                          "parsed": 1000\n                        }\n                      ]\n                    ]\n                  }\n                },\n                "approvals": [\n                  {\n                    "signer": "01d9bf2148748a85c89da5aad8ee0b0fc2d105fd39d41a4c796536354f0ae2900c",\n                    "signature": "014c1a89f92e29dd74fc648f741137d9caf4edba97c5f9799ce0c9aa6b0c9b58db368c64098603dbecef645774c05dff057cb1f91f2cf390bbacce78aa6f084007"\n                  }\n                ]\n              }\n            }\n          ],\n          "result": {\n            "name": "account_put_deploy_example_result",\n            "value": {\n              "api_version": "1.5.6",\n              "deploy_hash": "5c9b3b099c1378aa8e4a5f07f59ff1fcdc69a83179427c7e67ae0377d94d93fa"\n            }\n          }\n        }\n      ]\n    },\n    {\n      "name": "info_get_deploy",\n      "summary": "returns a Deploy from the network",\n      "params": [\n        {\n          "name": "deploy_hash",\n          "schema": {\n            "description": "The deploy hash.",\n            "$ref": "#/components/schemas/DeployHash"\n          },\n          "required": true\n        },\n        {\n          "name": "finalized_approvals",\n          "schema": {\n            "description": "Whether to return the deploy with the finalized approvals substituted. If `false` or omitted, returns the deploy with the approvals that were originally received by the node.",\n            "default": false,\n            "type": "boolean"\n          },\n          "required": false\n        }\n      ],\n      "result": {\n        "name": "info_get_deploy_result",\n        "schema": {\n          "description": "Result for \\"info_get_deploy\\" RPC response.",\n          "type": "object",\n          "required": [\n            "api_version",\n            "deploy",\n            "execution_results"\n          ],\n          "properties": {\n            "api_version": {\n              "description": "The RPC API version.",\n              "type": "string"\n            },\n            "deploy": {\n              "description": "The deploy.",\n              "$ref": "#/components/schemas/Deploy"\n            },\n            "execution_results": {\n              "description": "The map of block hash to execution result.",\n              "type": "array",\n              "items": {\n                "$ref": "#/components/schemas/JsonExecutionResult"\n              }\n            },\n            "block_hash": {\n              "description": "The hash of this deploy\'s block.",\n              "$ref": "#/components/schemas/BlockHash"\n            },\n            "block_height": {\n              "description": "The height of this deploy\'s block.",\n              "type": "integer",\n              "format": "uint64",\n              "minimum": 0.0\n            }\n          },\n          "additionalProperties": false\n        }\n      },\n      "examples": [\n        {\n          "name": "info_get_deploy_example",\n          "params": [\n            {\n              "name": "deploy_hash",\n              "value": "5c9b3b099c1378aa8e4a5f07f59ff1fcdc69a83179427c7e67ae0377d94d93fa"\n            },\n            {\n              "name": "finalized_approvals",\n              "value": true\n            }\n          ],\n          "result": {\n            "name": "info_get_deploy_example_result",\n            "value": {\n              "api_version": "1.5.6",\n              "deploy": {\n                "hash": "5c9b3b099c1378aa8e4a5f07f59ff1fcdc69a83179427c7e67ae0377d94d93fa",\n                "header": {\n                  "account": "01d9bf2148748a85c89da5aad8ee0b0fc2d105fd39d41a4c796536354f0ae2900c",\n                  "timestamp": "2020-11-17T00:39:24.072Z",\n                  "ttl": "1h",\n                  "gas_price": 1,\n                  "body_hash": "d53cf72d17278fd47d399013ca389c50d589352f1a12593c0b8e01872a641b50",\n                  "dependencies": [\n                    "0101010101010101010101010101010101010101010101010101010101010101"\n                  ],\n                  "chain_name": "casper-example"\n                },\n                "payment": {\n                  "StoredContractByName": {\n                    "name": "casper-example",\n                    "entry_point": "example-entry-point",\n                    "args": [\n                      [\n                        "amount",\n                        {\n                          "cl_type": "I32",\n                          "bytes": "e8030000",\n                          "parsed": 1000\n                        }\n                      ]\n                    ]\n                  }\n                },\n                "session": {\n                  "Transfer": {\n                    "args": [\n                      [\n                        "amount",\n                        {\n                          "cl_type": "I32",\n                          "bytes": "e8030000",\n                          "parsed": 1000\n                        }\n                      ]\n                    ]\n                  }\n                },\n                "approvals": [\n                  {\n                    "signer": "01d9bf2148748a85c89da5aad8ee0b0fc2d105fd39d41a4c796536354f0ae2900c",\n                    "signature": "014c1a89f92e29dd74fc648f741137d9caf4edba97c5f9799ce0c9aa6b0c9b58db368c64098603dbecef645774c05dff057cb1f91f2cf390bbacce78aa6f084007"\n                  }\n                ]\n              },\n              "execution_results": [\n                {\n                  "block_hash": "13c2d7a68ecdd4b74bf4393c88915c836c863fc4bf11d7f2bd930a1bbccacdcb",\n                  "result": {\n                    "Success": {\n                      "effect": {\n                        "operations": [\n                          {\n                            "key": "account-hash-2c4a11c062a8a337bfc97e27fd66291caeb2c65865dcb5d3ef3759c4c97efecb",\n                            "kind": "Write"\n                          },\n                          {\n                            "key": "deploy-af684263911154d26fa05be9963171802801a0b6aff8f199b7391eacb8edc9e1",\n                            "kind": "Read"\n                          }\n                        ],\n                        "transforms": [\n                          {\n                            "key": "uref-2c4a11c062a8a337bfc97e27fd66291caeb2c65865dcb5d3ef3759c4c97efecb-007",\n                            "transform": {\n                              "AddUInt64": 8\n                            }\n                          },\n                          {\n                            "key": "deploy-af684263911154d26fa05be9963171802801a0b6aff8f199b7391eacb8edc9e1",\n                            "transform": "Identity"\n                          }\n                        ]\n                      },\n                      "transfers": [\n                        "transfer-5959595959595959595959595959595959595959595959595959595959595959",\n                        "transfer-8282828282828282828282828282828282828282828282828282828282828282"\n                      ],\n                      "cost": "123456"\n                    }\n                  }\n                }\n              ]\n            }\n          }\n        }\n      ]\n    },\n    {\n      "name": "state_get_account_info",\n      "summary": "returns an Account from the network",\n      "params": [\n        {\n          "name": "account_identifier",\n          "schema": {\n            "description": "The public key of the Account.",\n            "$ref": "#/components/schemas/AccountIdentifier"\n          },\n          "required": true\n        },\n        {\n          "name": "block_identifier",\n          "schema": {\n            "description": "The block identifier.",\n            "anyOf": [\n              {\n                "$ref": "#/components/schemas/BlockIdentifier"\n              },\n              {\n                "type": "null"\n              }\n            ]\n          },\n          "required": false\n        }\n      ],\n      "result": {\n        "name": "state_get_account_info_result",\n        "schema": {\n          "description": "Result for \\"state_get_account_info\\" RPC response.",\n          "type": "object",\n          "required": [\n            "account",\n            "api_version",\n            "merkle_proof"\n          ],\n          "properties": {\n            "api_version": {\n              "description": "The RPC API version.",\n              "type": "string"\n            },\n            "account": {\n              "description": "The account.",\n              "$ref": "#/components/schemas/Account"\n            },\n            "merkle_proof": {\n              "description": "The Merkle proof.",\n              "type": "string"\n            }\n          },\n          "additionalProperties": false\n        }\n      },\n      "examples": [\n        {\n          "name": "state_get_account_info_example",\n          "params": [\n            {\n              "name": "account_identifier",\n              "value": "013b6a27bcceb6a42d62a3a8d02a6f0d73653215771de243a63ac048a18b59da29"\n            },\n            {\n              "name": "block_identifier",\n              "value": {\n                "Hash": "13c2d7a68ecdd4b74bf4393c88915c836c863fc4bf11d7f2bd930a1bbccacdcb"\n              }\n            }\n          ],\n          "result": {\n            "name": "state_get_account_info_example_result",\n            "value": {\n              "api_version": "1.5.6",\n              "account": {\n                "account_hash": "account-hash-e94daaff79c2ab8d9c31d9c3058d7d0a0dd31204a5638dc1451fa67b2e3fb88c",\n                "named_keys": [],\n                "main_purse": "uref-09480c3248ef76b603d386f3f4f8a5f87f597d4eaffd475433f861af187ab5db-007",\n                "associated_keys": [\n                  {\n                    "account_hash": "account-hash-e94daaff79c2ab8d9c31d9c3058d7d0a0dd31204a5638dc1451fa67b2e3fb88c",\n                    "weight": 1\n                  }\n                ],\n                "action_thresholds": {\n                  "deployment": 1,\n                  "key_management": 1\n                }\n              },\n              "merkle_proof": "01000000006ef2e0949ac76e55812421f755abe129b6244fe7168b77f47a72536147614625016ef2e0949ac76e55812421f755abe129b6244fe7168b77f47a72536147614625000000003529cde5c621f857f75f3810611eb4af3f998caaa9d4a3413cf799f99c67db0307010000006ef2e0949ac76e55812421f755abe129b6244fe7168b77f47a7253614761462501010102000000006e06000000000074769d28aac597a36a03a932d4b43e4f10bf0403ee5c41dd035102553f5773631200b9e173e8f05361b681513c14e25e3138639eb03232581db7557c9e8dbbc83ce94500226a9a7fe4f2b7b88d5103a4fc7400f02bf89c860c9ccdd56951a2afe9be0e0267006d820fb5676eb2960e15722f7725f3f8f41030078f8b2e44bf0dc03f71b176d6e800dc5ae9805068c5be6da1a90b2528ee85db0609cc0fb4bd60bbd559f497a98b67f500e1e3e846592f4918234647fca39830b7e1e6ad6f5b7a99b39af823d82ba1873d000003000000010186ff500f287e9b53f823ae1582b1fa429dfede28015125fd233a31ca04d5012002015cc42669a55467a1fdf49750772bfc1aed59b9b085558eb81510e9b015a7c83b0301e3cf4a34b1db6bfa58808b686cb8fe21ebe0c1bcbcee522649d2b135fe510fe3"\n            }\n          }\n        }\n      ]\n    },\n    {\n      "name": "state_get_dictionary_item",\n      "summary": "returns an item from a Dictionary",\n      "params": [\n        {\n          "name": "state_root_hash",\n          "schema": {\n            "description": "Hash of the state root",\n            "$ref": "#/components/schemas/Digest"\n          },\n          "required": true\n        },\n        {\n          "name": "dictionary_identifier",\n          "schema": {\n            "description": "The Dictionary query identifier.",\n            "$ref": "#/components/schemas/DictionaryIdentifier"\n          },\n          "required": true\n        }\n      ],\n      "result": {\n        "name": "state_get_dictionary_item_result",\n        "schema": {\n          "description": "Result for \\"state_get_dictionary_item\\" RPC response.",\n          "type": "object",\n          "required": [\n            "api_version",\n            "dictionary_key",\n            "merkle_proof",\n            "stored_value"\n          ],\n          "properties": {\n            "api_version": {\n              "description": "The RPC API version.",\n              "type": "string"\n            },\n            "dictionary_key": {\n              "description": "The key under which the value is stored.",\n              "type": "string"\n            },\n            "stored_value": {\n              "description": "The stored value.",\n              "$ref": "#/components/schemas/StoredValue"\n            },\n            "merkle_proof": {\n              "description": "The Merkle proof.",\n              "type": "string"\n            }\n          },\n          "additionalProperties": false\n        }\n      },\n      "examples": [\n        {\n          "name": "state_get_dictionary_item_example",\n          "params": [\n            {\n              "name": "state_root_hash",\n              "value": "0808080808080808080808080808080808080808080808080808080808080808"\n            },\n            {\n              "name": "dictionary_identifier",\n              "value": {\n                "URef": {\n                  "seed_uref": "uref-09480c3248ef76b603d386f3f4f8a5f87f597d4eaffd475433f861af187ab5db-007",\n                  "dictionary_item_key": "a_unique_entry_identifier"\n                }\n              }\n            }\n          ],\n          "result": {\n            "name": "state_get_dictionary_item_example_result",\n            "value": {\n              "api_version": "1.5.6",\n              "dictionary_key": "dictionary-67518854aa916c97d4e53df8570c8217ccc259da2721b692102d76acd0ee8d1f",\n              "stored_value": {\n                "CLValue": {\n                  "cl_type": "U64",\n                  "bytes": "0100000000000000",\n                  "parsed": 1\n                }\n              },\n              "merkle_proof": "01000000006ef2e0949ac76e55812421f755abe129b6244fe7168b77f47a72536147614625016ef2e0949ac76e55812421f755abe129b6244fe7168b77f47a72536147614625000000003529cde5c621f857f75f3810611eb4af3f998caaa9d4a3413cf799f99c67db0307010000006ef2e0949ac76e55812421f755abe129b6244fe7168b77f47a7253614761462501010102000000006e06000000000074769d28aac597a36a03a932d4b43e4f10bf0403ee5c41dd035102553f5773631200b9e173e8f05361b681513c14e25e3138639eb03232581db7557c9e8dbbc83ce94500226a9a7fe4f2b7b88d5103a4fc7400f02bf89c860c9ccdd56951a2afe9be0e0267006d820fb5676eb2960e15722f7725f3f8f41030078f8b2e44bf0dc03f71b176d6e800dc5ae9805068c5be6da1a90b2528ee85db0609cc0fb4bd60bbd559f497a98b67f500e1e3e846592f4918234647fca39830b7e1e6ad6f5b7a99b39af823d82ba1873d000003000000010186ff500f287e9b53f823ae1582b1fa429dfede28015125fd233a31ca04d5012002015cc42669a55467a1fdf49750772bfc1aed59b9b085558eb81510e9b015a7c83b0301e3cf4a34b1db6bfa58808b686cb8fe21ebe0c1bcbcee522649d2b135fe510fe3"\n            }\n          }\n        }\n      ]\n    },\n    {\n      "name": "query_global_state",\n      "summary": "a query to global state using either a Block hash or state root hash",\n      "params": [\n        {\n          "name": "key",\n          "schema": {\n            "description": "`casper_types::Key` as formatted string.",\n            "type": "string"\n          },\n          "required": true\n        },\n        {\n          "name": "state_identifier",\n          "schema": {\n            "description": "The identifier used for the query. If none is passed the tip of the chain will be used.",\n            "anyOf": [\n              {\n                "$ref": "#/components/schemas/GlobalStateIdentifier"\n              },\n              {\n                "type": "null"\n              }\n            ]\n          },\n          "required": false\n        },\n        {\n          "name": "path",\n          "schema": {\n            "description": "The path components starting from the key as base.",\n            "default": [],\n            "type": "array",\n            "items": {\n              "type": "string"\n            }\n          },\n          "required": false\n        }\n      ],\n      "result": {\n        "name": "query_global_state_result",\n        "schema": {\n          "description": "Result for \\"query_global_state\\" RPC response.",\n          "type": "object",\n          "required": [\n            "api_version",\n            "merkle_proof",\n            "stored_value"\n          ],\n          "properties": {\n            "api_version": {\n              "description": "The RPC API version.",\n              "type": "string"\n            },\n            "block_header": {\n              "description": "The block header if a Block hash was provided.",\n              "anyOf": [\n                {\n                  "$ref": "#/components/schemas/JsonBlockHeader"\n                },\n                {\n                  "type": "null"\n                }\n              ]\n            },\n            "stored_value": {\n              "description": "The stored value.",\n              "$ref": "#/components/schemas/StoredValue"\n            },\n            "merkle_proof": {\n              "description": "The Merkle proof.",\n              "type": "string"\n            }\n          },\n          "additionalProperties": false\n        }\n      },\n      "examples": [\n        {\n          "name": "query_global_state_example",\n          "params": [\n            {\n              "name": "state_identifier",\n              "value": {\n                "BlockHash": "13c2d7a68ecdd4b74bf4393c88915c836c863fc4bf11d7f2bd930a1bbccacdcb"\n              }\n            },\n            {\n              "name": "key",\n              "value": "deploy-af684263911154d26fa05be9963171802801a0b6aff8f199b7391eacb8edc9e1"\n            },\n            {\n              "name": "path",\n              "value": []\n            }\n          ],\n          "result": {\n            "name": "query_global_state_example_result",\n            "value": {\n              "api_version": "1.5.6",\n              "block_header": {\n                "parent_hash": "0707070707070707070707070707070707070707070707070707070707070707",\n                "state_root_hash": "0808080808080808080808080808080808080808080808080808080808080808",\n                "body_hash": "cd502c5393a3c8b66d6979ad7857507c9baf5a8ba16ba99c28378d3a970fff42",\n                "random_bit": true,\n                "accumulated_seed": "ac979f51525cfd979b14aa7dc0737c5154eabe0db9280eceaa8dc8d2905b20d5",\n                "era_end": {\n                  "era_report": {\n                    "equivocators": [\n                      "013b6a27bcceb6a42d62a3a8d02a6f0d73653215771de243a63ac048a18b59da29"\n                    ],\n                    "rewards": [\n                      {\n                        "validator": "018a88e3dd7409f195fd52db2d3cba5d72ca6709bf1d94121bf3748801b40f6f5c",\n                        "amount": 1000\n                      }\n                    ],\n                    "inactive_validators": [\n                      "018139770ea87d175f56a35466c34c7ecccb8d8a91b4ee37a25df60f5b8fc9b394"\n                    ]\n                  },\n                  "next_era_validator_weights": [\n                    {\n                      "validator": "016e7a1cdd29b0b78fd13af4c5598feff4ef2a97166e3ca6f2e4fbfccd80505bf1",\n                      "weight": "456"\n                    },\n                    {\n                      "validator": "018a875fff1eb38451577acd5afee405456568dd7c89e090863a0557bc7af49f17",\n                      "weight": "789"\n                    },\n                    {\n                      "validator": "01d9bf2148748a85c89da5aad8ee0b0fc2d105fd39d41a4c796536354f0ae2900c",\n                      "weight": "123"\n                    }\n                  ]\n                },\n                "timestamp": "2020-11-17T00:39:24.072Z",\n                "era_id": 1,\n                "height": 10,\n                "protocol_version": "1.0.0"\n              },\n              "stored_value": {\n                "Account": {\n                  "account_hash": "account-hash-e94daaff79c2ab8d9c31d9c3058d7d0a0dd31204a5638dc1451fa67b2e3fb88c",\n                  "named_keys": [],\n                  "main_purse": "uref-09480c3248ef76b603d386f3f4f8a5f87f597d4eaffd475433f861af187ab5db-007",\n                  "associated_keys": [\n                    {\n                      "account_hash": "account-hash-e94daaff79c2ab8d9c31d9c3058d7d0a0dd31204a5638dc1451fa67b2e3fb88c",\n                      "weight": 1\n                    }\n                  ],\n                  "action_thresholds": {\n                    "deployment": 1,\n                    "key_management": 1\n                  }\n                }\n              },\n              "merkle_proof": "01000000006ef2e0949ac76e55812421f755abe129b6244fe7168b77f47a72536147614625016ef2e0949ac76e55812421f755abe129b6244fe7168b77f47a72536147614625000000003529cde5c621f857f75f3810611eb4af3f998caaa9d4a3413cf799f99c67db0307010000006ef2e0949ac76e55812421f755abe129b6244fe7168b77f47a7253614761462501010102000000006e06000000000074769d28aac597a36a03a932d4b43e4f10bf0403ee5c41dd035102553f5773631200b9e173e8f05361b681513c14e25e3138639eb03232581db7557c9e8dbbc83ce94500226a9a7fe4f2b7b88d5103a4fc7400f02bf89c860c9ccdd56951a2afe9be0e0267006d820fb5676eb2960e15722f7725f3f8f41030078f8b2e44bf0dc03f71b176d6e800dc5ae9805068c5be6da1a90b2528ee85db0609cc0fb4bd60bbd559f497a98b67f500e1e3e846592f4918234647fca39830b7e1e6ad6f5b7a99b39af823d82ba1873d000003000000010186ff500f287e9b53f823ae1582b1fa429dfede28015125fd233a31ca04d5012002015cc42669a55467a1fdf49750772bfc1aed59b9b085558eb81510e9b015a7c83b0301e3cf4a34b1db6bfa58808b686cb8fe21ebe0c1bcbcee522649d2b135fe510fe3"\n            }\n          }\n        }\n      ]\n    },\n    {\n      "name": "query_balance",\n      "summary": "query for a balance using a purse identifier and a state identifier",\n      "params": [\n        {\n          "name": "purse_identifier",\n          "schema": {\n            "description": "The identifier to obtain the purse corresponding to balance query.",\n            "$ref": "#/components/schemas/PurseIdentifier"\n          },\n          "required": true\n        },\n        {\n          "name": "state_identifier",\n          "schema": {\n            "description": "The state identifier used for the query, if none is passed the tip of the chain will be used.",\n            "anyOf": [\n              {\n                "$ref": "#/components/schemas/GlobalStateIdentifier"\n              },\n              {\n                "type": "null"\n              }\n            ]\n          },\n          "required": false\n        }\n      ],\n      "result": {\n        "name": "query_balance_result",\n        "schema": {\n          "description": "Result for \\"query_balance\\" RPC response.",\n          "type": "object",\n          "required": [\n            "api_version",\n            "balance"\n          ],\n          "properties": {\n            "api_version": {\n              "description": "The RPC API version.",\n              "type": "string"\n            },\n            "balance": {\n              "description": "The balance represented in motes.",\n              "$ref": "#/components/schemas/U512"\n            }\n          }\n        }\n      },\n      "examples": [\n        {\n          "name": "query_balance_example",\n          "params": [\n            {\n              "name": "state_identifier",\n              "value": {\n                "BlockHash": "13c2d7a68ecdd4b74bf4393c88915c836c863fc4bf11d7f2bd930a1bbccacdcb"\n              }\n            },\n            {\n              "name": "purse_identifier",\n              "value": {\n                "main_purse_under_account_hash": "account-hash-0909090909090909090909090909090909090909090909090909090909090909"\n              }\n            }\n          ],\n          "result": {\n            "name": "query_balance_example_result",\n            "value": {\n              "api_version": "1.5.6",\n              "balance": "123456"\n            }\n          }\n        }\n      ]\n    },\n    {\n      "name": "info_get_peers",\n      "summary": "returns a list of peers connected to the node",\n      "params": [],\n      "result": {\n        "name": "info_get_peers_result",\n        "schema": {\n          "description": "Result for \\"info_get_peers\\" RPC response.",\n          "type": "object",\n          "required": [\n            "api_version",\n            "peers"\n          ],\n          "properties": {\n            "api_version": {\n              "description": "The RPC API version.",\n              "type": "string"\n            },\n            "peers": {\n              "description": "The node ID and network address of each connected peer.",\n              "$ref": "#/components/schemas/PeersMap"\n            }\n          },\n          "additionalProperties": false\n        }\n      },\n      "examples": [\n        {\n          "name": "info_get_peers_example",\n          "params": [],\n          "result": {\n            "name": "info_get_peers_example_result",\n            "value": {\n              "api_version": "1.5.6",\n              "peers": [\n                {\n                  "node_id": "tls:0101..0101",\n                  "address": "127.0.0.1:54321"\n                }\n              ]\n            }\n          }\n        }\n      ]\n    },\n    {\n      "name": "info_get_status",\n      "summary": "returns the current status of the node",\n      "params": [],\n      "result": {\n        "name": "info_get_status_result",\n        "schema": {\n          "description": "Result for \\"info_get_status\\" RPC response.",\n          "type": "object",\n          "required": [\n            "api_version",\n            "available_block_range",\n            "block_sync",\n            "build_version",\n            "chainspec_name",\n            "last_progress",\n            "peers",\n            "reactor_state",\n            "starting_state_root_hash",\n            "uptime"\n          ],\n          "properties": {\n            "peers": {\n              "description": "The node ID and network address of each connected peer.",\n              "$ref": "#/components/schemas/PeersMap"\n            },\n            "api_version": {\n              "description": "The RPC API version.",\n              "type": "string"\n            },\n            "build_version": {\n              "description": "The compiled node version.",\n              "type": "string"\n            },\n            "chainspec_name": {\n              "description": "The chainspec name.",\n              "type": "string"\n            },\n            "starting_state_root_hash": {\n              "description": "The state root hash of the lowest block in the available block range.",\n              "$ref": "#/components/schemas/Digest"\n            },\n            "last_added_block_info": {\n              "description": "The minimal info of the last block from the linear chain.",\n              "anyOf": [\n                {\n                  "$ref": "#/components/schemas/MinimalBlockInfo"\n                },\n                {\n                  "type": "null"\n                }\n              ]\n            },\n            "our_public_signing_key": {\n              "description": "Our public signing key.",\n              "anyOf": [\n                {\n                  "$ref": "#/components/schemas/PublicKey"\n                },\n                {\n                  "type": "null"\n                }\n              ]\n            },\n            "round_length": {\n              "description": "The next round length if this node is a validator.",\n              "anyOf": [\n                {\n                  "$ref": "#/components/schemas/TimeDiff"\n                },\n                {\n                  "type": "null"\n                }\n              ]\n            },\n            "next_upgrade": {\n              "description": "Information about the next scheduled upgrade.",\n              "anyOf": [\n                {\n                  "$ref": "#/components/schemas/NextUpgrade"\n                },\n                {\n                  "type": "null"\n                }\n              ]\n            },\n            "uptime": {\n              "description": "Time that passed since the node has started.",\n              "$ref": "#/components/schemas/TimeDiff"\n            },\n            "reactor_state": {\n              "description": "The current state of node reactor.",\n              "$ref": "#/components/schemas/ReactorState"\n            },\n            "last_progress": {\n              "description": "Timestamp of the last recorded progress in the reactor.",\n              "$ref": "#/components/schemas/Timestamp"\n            },\n            "available_block_range": {\n              "description": "The available block range in storage.",\n              "$ref": "#/components/schemas/AvailableBlockRange"\n            },\n            "block_sync": {\n              "description": "The status of the block synchronizer builders.",\n              "$ref": "#/components/schemas/BlockSynchronizerStatus"\n            }\n          },\n          "additionalProperties": false\n        }\n      },\n      "examples": [\n        {\n          "name": "info_get_status_example",\n          "params": [],\n          "result": {\n            "name": "info_get_status_example_result",\n            "value": {\n              "peers": [\n                {\n                  "node_id": "tls:0101..0101",\n                  "address": "127.0.0.1:54321"\n                }\n              ],\n              "api_version": "1.5.6",\n              "build_version": "1.5.6",\n              "chainspec_name": "casper-example",\n              "starting_state_root_hash": "0000000000000000000000000000000000000000000000000000000000000000",\n              "last_added_block_info": {\n                "hash": "13c2d7a68ecdd4b74bf4393c88915c836c863fc4bf11d7f2bd930a1bbccacdcb",\n                "timestamp": "2020-11-17T00:39:24.072Z",\n                "era_id": 1,\n                "height": 10,\n                "state_root_hash": "0808080808080808080808080808080808080808080808080808080808080808",\n                "creator": "01d9bf2148748a85c89da5aad8ee0b0fc2d105fd39d41a4c796536354f0ae2900c"\n              },\n              "our_public_signing_key": "01d9bf2148748a85c89da5aad8ee0b0fc2d105fd39d41a4c796536354f0ae2900c",\n              "round_length": "1m 5s 536ms",\n              "next_upgrade": {\n                "activation_point": 42,\n                "protocol_version": "2.0.1"\n              },\n              "uptime": "13s",\n              "reactor_state": "Initialize",\n              "last_progress": "1970-01-01T00:00:00.000Z",\n              "available_block_range": {\n                "low": 0,\n                "high": 0\n              },\n              "block_sync": {\n                "historical": {\n                  "block_hash": "16ddf28e2b3d2e17f4cef36f8b58827eca917af225d139b0c77df3b4a67dc55e",\n                  "block_height": 40,\n                  "acquisition_state": "have strict finality(40) for: block hash 16dd..c55e"\n                },\n                "forward": {\n                  "block_hash": "59907b1e32a9158169c4d89d9ce5ac9164fc31240bfcfb0969227ece06d74983",\n                  "block_height": 6701,\n                  "acquisition_state": "have block body(6701) for: block hash 5990..4983"\n                }\n              }\n            }\n          }\n        }\n      ]\n    },\n    {\n      "name": "info_get_validator_changes",\n      "summary": "returns status changes of active validators",\n      "params": [],\n      "result": {\n        "name": "info_get_validator_changes_result",\n        "schema": {\n          "description": "Result for the \\"info_get_validator_changes\\" RPC.",\n          "type": "object",\n          "required": [\n            "api_version",\n            "changes"\n          ],\n          "properties": {\n            "api_version": {\n              "description": "The RPC API version.",\n              "type": "string"\n            },\n            "changes": {\n              "description": "The validators\' status changes.",\n              "type": "array",\n              "items": {\n                "$ref": "#/components/schemas/JsonValidatorChanges"\n              }\n            }\n          },\n          "additionalProperties": false\n        }\n      },\n      "examples": [\n        {\n          "name": "info_get_validator_changes_example",\n          "params": [],\n          "result": {\n            "name": "info_get_validator_changes_example_result",\n            "value": {\n              "api_version": "1.5.6",\n              "changes": [\n                {\n                  "public_key": "01d9bf2148748a85c89da5aad8ee0b0fc2d105fd39d41a4c796536354f0ae2900c",\n                  "status_changes": [\n                    {\n                      "era_id": 1,\n                      "validator_change": "Added"\n                    }\n                  ]\n                }\n              ]\n            }\n          }\n        }\n      ]\n    },\n    {\n      "name": "info_get_chainspec",\n      "summary": "returns the raw bytes of the chainspec.toml, genesis accounts.toml, and global_state.toml files",\n      "params": [],\n      "result": {\n        "name": "info_get_chainspec_result",\n        "schema": {\n          "description": "Result for the \\"info_get_chainspec\\" RPC.",\n          "type": "object",\n          "required": [\n            "api_version",\n            "chainspec_bytes"\n          ],\n          "properties": {\n            "api_version": {\n              "description": "The RPC API version.",\n              "type": "string"\n            },\n            "chainspec_bytes": {\n              "description": "The chainspec file bytes.",\n              "$ref": "#/components/schemas/ChainspecRawBytes"\n            }\n          }\n        }\n      },\n      "examples": [\n        {\n          "name": "info_get_chainspec_example",\n          "params": [],\n          "result": {\n            "name": "info_get_chainspec_example_result",\n            "value": {\n              "api_version": "1.5.6",\n              "chainspec_bytes": {\n                "chainspec_bytes": "2a2a",\n                "maybe_genesis_accounts_bytes": null,\n                "maybe_global_state_bytes": null\n              }\n            }\n          }\n        }\n      ]\n    },\n    {\n      "name": "chain_get_block",\n      "summary": "returns a Block from the network",\n      "params": [\n        {\n          "name": "block_identifier",\n          "schema": {\n            "description": "The block identifier.",\n            "$ref": "#/components/schemas/BlockIdentifier"\n          },\n          "required": false\n        }\n      ],\n      "result": {\n        "name": "chain_get_block_result",\n        "schema": {\n          "description": "Result for \\"chain_get_block\\" RPC response.",\n          "type": "object",\n          "required": [\n            "api_version"\n          ],\n          "properties": {\n            "api_version": {\n              "description": "The RPC API version.",\n              "type": "string"\n            },\n            "block": {\n              "description": "The block, if found.",\n              "anyOf": [\n                {\n                  "$ref": "#/components/schemas/JsonBlock"\n                },\n                {\n                  "type": "null"\n                }\n              ]\n            }\n          },\n          "additionalProperties": false\n        }\n      },\n      "examples": [\n        {\n          "name": "chain_get_block_example",\n          "params": [\n            {\n              "name": "block_identifier",\n              "value": {\n                "Hash": "13c2d7a68ecdd4b74bf4393c88915c836c863fc4bf11d7f2bd930a1bbccacdcb"\n              }\n            }\n          ],\n          "result": {\n            "name": "chain_get_block_example_result",\n            "value": {\n              "api_version": "1.5.6",\n              "block": {\n                "hash": "13c2d7a68ecdd4b74bf4393c88915c836c863fc4bf11d7f2bd930a1bbccacdcb",\n                "header": {\n                  "parent_hash": "0707070707070707070707070707070707070707070707070707070707070707",\n                  "state_root_hash": "0808080808080808080808080808080808080808080808080808080808080808",\n                  "body_hash": "cd502c5393a3c8b66d6979ad7857507c9baf5a8ba16ba99c28378d3a970fff42",\n                  "random_bit": true,\n                  "accumulated_seed": "ac979f51525cfd979b14aa7dc0737c5154eabe0db9280eceaa8dc8d2905b20d5",\n                  "era_end": {\n                    "era_report": {\n                      "equivocators": [\n                        "013b6a27bcceb6a42d62a3a8d02a6f0d73653215771de243a63ac048a18b59da29"\n                      ],\n                      "rewards": [\n                        {\n                          "validator": "018a88e3dd7409f195fd52db2d3cba5d72ca6709bf1d94121bf3748801b40f6f5c",\n                          "amount": 1000\n                        }\n                      ],\n                      "inactive_validators": [\n                        "018139770ea87d175f56a35466c34c7ecccb8d8a91b4ee37a25df60f5b8fc9b394"\n                      ]\n                    },\n                    "next_era_validator_weights": [\n                      {\n                        "validator": "016e7a1cdd29b0b78fd13af4c5598feff4ef2a97166e3ca6f2e4fbfccd80505bf1",\n                        "weight": "456"\n                      },\n                      {\n                        "validator": "018a875fff1eb38451577acd5afee405456568dd7c89e090863a0557bc7af49f17",\n                        "weight": "789"\n                      },\n                      {\n                        "validator": "01d9bf2148748a85c89da5aad8ee0b0fc2d105fd39d41a4c796536354f0ae2900c",\n                        "weight": "123"\n                      }\n                    ]\n                  },\n                  "timestamp": "2020-11-17T00:39:24.072Z",\n                  "era_id": 1,\n                  "height": 10,\n                  "protocol_version": "1.0.0"\n                },\n                "body": {\n                  "proposer": "01d9bf2148748a85c89da5aad8ee0b0fc2d105fd39d41a4c796536354f0ae2900c",\n                  "deploy_hashes": [],\n                  "transfer_hashes": [\n                    "5c9b3b099c1378aa8e4a5f07f59ff1fcdc69a83179427c7e67ae0377d94d93fa"\n                  ]\n                },\n                "proofs": [\n                  {\n                    "public_key": "01d9bf2148748a85c89da5aad8ee0b0fc2d105fd39d41a4c796536354f0ae2900c",\n                    "signature": "016291a7b2689e2edcc6e79030be50edd02f9bd7d809921ae2654012f808c7b9a0f125bc32d6aa610cbd012395a9832ccfaa9262023339f1db71ca073a13bb9707"\n                  }\n                ]\n              }\n            }\n          }\n        }\n      ]\n    },\n    {\n      "name": "chain_get_block_transfers",\n      "summary": "returns all transfers for a Block from the network",\n      "params": [\n        {\n          "name": "block_identifier",\n          "schema": {\n            "description": "The block hash.",\n            "$ref": "#/components/schemas/BlockIdentifier"\n          },\n          "required": false\n        }\n      ],\n      "result": {\n        "name": "chain_get_block_transfers_result",\n        "schema": {\n          "description": "Result for \\"chain_get_block_transfers\\" RPC response.",\n          "type": "object",\n          "required": [\n            "api_version"\n          ],\n          "properties": {\n            "api_version": {\n              "description": "The RPC API version.",\n              "type": "string"\n            },\n            "block_hash": {\n              "description": "The block hash, if found.",\n              "anyOf": [\n                {\n                  "$ref": "#/components/schemas/BlockHash"\n                },\n                {\n                  "type": "null"\n                }\n              ]\n            },\n            "transfers": {\n              "description": "The block\'s transfers, if found.",\n              "type": [\n                "array",\n                "null"\n              ],\n              "items": {\n                "$ref": "#/components/schemas/Transfer"\n              }\n            }\n          },\n          "additionalProperties": false\n        }\n      },\n      "examples": [\n        {\n          "name": "chain_get_block_transfers_example",\n          "params": [\n            {\n              "name": "block_identifier",\n              "value": {\n                "Hash": "13c2d7a68ecdd4b74bf4393c88915c836c863fc4bf11d7f2bd930a1bbccacdcb"\n              }\n            }\n          ],\n          "result": {\n            "name": "chain_get_block_transfers_example_result",\n            "value": {\n              "api_version": "1.5.6",\n              "block_hash": "13c2d7a68ecdd4b74bf4393c88915c836c863fc4bf11d7f2bd930a1bbccacdcb",\n              "transfers": [\n                {\n                  "deploy_hash": "0000000000000000000000000000000000000000000000000000000000000000",\n                  "from": "account-hash-0000000000000000000000000000000000000000000000000000000000000000",\n                  "to": null,\n                  "source": "uref-0000000000000000000000000000000000000000000000000000000000000000-000",\n                  "target": "uref-0000000000000000000000000000000000000000000000000000000000000000-000",\n                  "amount": "0",\n                  "gas": "0",\n                  "id": null\n                }\n              ]\n            }\n          }\n        }\n      ]\n    },\n    {\n      "name": "chain_get_state_root_hash",\n      "summary": "returns a state root hash at a given Block",\n      "params": [\n        {\n          "name": "block_identifier",\n          "schema": {\n            "description": "The block hash.",\n            "$ref": "#/components/schemas/BlockIdentifier"\n          },\n          "required": false\n        }\n      ],\n      "result": {\n        "name": "chain_get_state_root_hash_result",\n        "schema": {\n          "description": "Result for \\"chain_get_state_root_hash\\" RPC response.",\n          "type": "object",\n          "required": [\n            "api_version"\n          ],\n          "properties": {\n            "api_version": {\n              "description": "The RPC API version.",\n              "type": "string"\n            },\n            "state_root_hash": {\n              "description": "Hex-encoded hash of the state root.",\n              "anyOf": [\n                {\n                  "$ref": "#/components/schemas/Digest"\n                },\n                {\n                  "type": "null"\n                }\n              ]\n            }\n          },\n          "additionalProperties": false\n        }\n      },\n      "examples": [\n        {\n          "name": "chain_get_state_root_hash_example",\n          "params": [\n            {\n              "name": "block_identifier",\n              "value": {\n                "Height": 10\n              }\n            }\n          ],\n          "result": {\n            "name": "chain_get_state_root_hash_example_result",\n            "value": {\n              "api_version": "1.5.6",\n              "state_root_hash": "0808080808080808080808080808080808080808080808080808080808080808"\n            }\n          }\n        }\n      ]\n    },\n    {\n      "name": "state_get_item",\n      "summary": "returns a stored value from the network. This RPC is deprecated, use `query_global_state` instead.",\n      "params": [\n        {\n          "name": "state_root_hash",\n          "schema": {\n            "description": "Hash of the state root.",\n            "$ref": "#/components/schemas/Digest"\n          },\n          "required": true\n        },\n        {\n          "name": "key",\n          "schema": {\n            "description": "`casper_types::Key` as formatted string.",\n            "type": "string"\n          },\n          "required": true\n        },\n        {\n          "name": "path",\n          "schema": {\n            "description": "The path components starting from the key as base.",\n            "default": [],\n            "type": "array",\n            "items": {\n              "type": "string"\n            }\n          },\n          "required": false\n        }\n      ],\n      "result": {\n        "name": "state_get_item_result",\n        "schema": {\n          "description": "Result for \\"state_get_item\\" RPC response.",\n          "type": "object",\n          "required": [\n            "api_version",\n            "merkle_proof",\n            "stored_value"\n          ],\n          "properties": {\n            "api_version": {\n              "description": "The RPC API version.",\n              "type": "string"\n            },\n            "stored_value": {\n              "description": "The stored value.",\n              "$ref": "#/components/schemas/StoredValue"\n            },\n            "merkle_proof": {\n              "description": "The Merkle proof.",\n              "type": "string"\n            }\n          },\n          "additionalProperties": false\n        }\n      },\n      "examples": [\n        {\n          "name": "state_get_item_example",\n          "params": [\n            {\n              "name": "state_root_hash",\n              "value": "0808080808080808080808080808080808080808080808080808080808080808"\n            },\n            {\n              "name": "key",\n              "value": "deploy-af684263911154d26fa05be9963171802801a0b6aff8f199b7391eacb8edc9e1"\n            },\n            {\n              "name": "path",\n              "value": [\n                "inner"\n              ]\n            }\n          ],\n          "result": {\n            "name": "state_get_item_example_result",\n            "value": {\n              "api_version": "1.5.6",\n              "stored_value": {\n                "CLValue": {\n                  "cl_type": "U64",\n                  "bytes": "0100000000000000",\n                  "parsed": 1\n                }\n              },\n              "merkle_proof": "01000000006ef2e0949ac76e55812421f755abe129b6244fe7168b77f47a72536147614625016ef2e0949ac76e55812421f755abe129b6244fe7168b77f47a72536147614625000000003529cde5c621f857f75f3810611eb4af3f998caaa9d4a3413cf799f99c67db0307010000006ef2e0949ac76e55812421f755abe129b6244fe7168b77f47a7253614761462501010102000000006e06000000000074769d28aac597a36a03a932d4b43e4f10bf0403ee5c41dd035102553f5773631200b9e173e8f05361b681513c14e25e3138639eb03232581db7557c9e8dbbc83ce94500226a9a7fe4f2b7b88d5103a4fc7400f02bf89c860c9ccdd56951a2afe9be0e0267006d820fb5676eb2960e15722f7725f3f8f41030078f8b2e44bf0dc03f71b176d6e800dc5ae9805068c5be6da1a90b2528ee85db0609cc0fb4bd60bbd559f497a98b67f500e1e3e846592f4918234647fca39830b7e1e6ad6f5b7a99b39af823d82ba1873d000003000000010186ff500f287e9b53f823ae1582b1fa429dfede28015125fd233a31ca04d5012002015cc42669a55467a1fdf49750772bfc1aed59b9b085558eb81510e9b015a7c83b0301e3cf4a34b1db6bfa58808b686cb8fe21ebe0c1bcbcee522649d2b135fe510fe3"\n            }\n          }\n        }\n      ]\n    },\n    {\n      "name": "state_get_balance",\n      "summary": "returns a purse\'s balance from the network",\n      "params": [\n        {\n          "name": "state_root_hash",\n          "schema": {\n            "description": "The hash of state root.",\n            "$ref": "#/components/schemas/Digest"\n          },\n          "required": true\n        },\n        {\n          "name": "purse_uref",\n          "schema": {\n            "description": "Formatted URef.",\n            "type": "string"\n          },\n          "required": true\n        }\n      ],\n      "result": {\n        "name": "state_get_balance_result",\n        "schema": {\n          "description": "Result for \\"state_get_balance\\" RPC response.",\n          "type": "object",\n          "required": [\n            "api_version",\n            "balance_value",\n            "merkle_proof"\n          ],\n          "properties": {\n            "api_version": {\n              "description": "The RPC API version.",\n              "type": "string"\n            },\n            "balance_value": {\n              "description": "The balance value.",\n              "$ref": "#/components/schemas/U512"\n            },\n            "merkle_proof": {\n              "description": "The Merkle proof.",\n              "type": "string"\n            }\n          },\n          "additionalProperties": false\n        }\n      },\n      "examples": [\n        {\n          "name": "state_get_balance_example",\n          "params": [\n            {\n              "name": "state_root_hash",\n              "value": "0808080808080808080808080808080808080808080808080808080808080808"\n            },\n            {\n              "name": "purse_uref",\n              "value": "uref-09480c3248ef76b603d386f3f4f8a5f87f597d4eaffd475433f861af187ab5db-007"\n            }\n          ],\n          "result": {\n            "name": "state_get_balance_example_result",\n            "value": {\n              "api_version": "1.5.6",\n              "balance_value": "123456",\n              "merkle_proof": "01000000006ef2e0949ac76e55812421f755abe129b6244fe7168b77f47a72536147614625016ef2e0949ac76e55812421f755abe129b6244fe7168b77f47a72536147614625000000003529cde5c621f857f75f3810611eb4af3f998caaa9d4a3413cf799f99c67db0307010000006ef2e0949ac76e55812421f755abe129b6244fe7168b77f47a7253614761462501010102000000006e06000000000074769d28aac597a36a03a932d4b43e4f10bf0403ee5c41dd035102553f5773631200b9e173e8f05361b681513c14e25e3138639eb03232581db7557c9e8dbbc83ce94500226a9a7fe4f2b7b88d5103a4fc7400f02bf89c860c9ccdd56951a2afe9be0e0267006d820fb5676eb2960e15722f7725f3f8f41030078f8b2e44bf0dc03f71b176d6e800dc5ae9805068c5be6da1a90b2528ee85db0609cc0fb4bd60bbd559f497a98b67f500e1e3e846592f4918234647fca39830b7e1e6ad6f5b7a99b39af823d82ba1873d000003000000010186ff500f287e9b53f823ae1582b1fa429dfede28015125fd233a31ca04d5012002015cc42669a55467a1fdf49750772bfc1aed59b9b085558eb81510e9b015a7c83b0301e3cf4a34b1db6bfa58808b686cb8fe21ebe0c1bcbcee522649d2b135fe510fe3"\n            }\n          }\n        }\n      ]\n    },\n    {\n      "name": "chain_get_era_info_by_switch_block",\n      "summary": "returns an EraInfo from the network",\n      "params": [\n        {\n          "name": "block_identifier",\n          "schema": {\n            "description": "The block identifier.",\n            "$ref": "#/components/schemas/BlockIdentifier"\n          },\n          "required": false\n        }\n      ],\n      "result": {\n        "name": "chain_get_era_info_by_switch_block_result",\n        "schema": {\n          "description": "Result for \\"chain_get_era_info\\" RPC response.",\n          "type": "object",\n          "required": [\n            "api_version"\n          ],\n          "properties": {\n            "api_version": {\n              "description": "The RPC API version.",\n              "type": "string"\n            },\n            "era_summary": {\n              "description": "The era summary.",\n              "anyOf": [\n                {\n                  "$ref": "#/components/schemas/EraSummary"\n                },\n                {\n                  "type": "null"\n                }\n              ]\n            }\n          },\n          "additionalProperties": false\n        }\n      },\n      "examples": [\n        {\n          "name": "chain_get_era_info_by_switch_block_example",\n          "params": [\n            {\n              "name": "block_identifier",\n              "value": {\n                "Hash": "13c2d7a68ecdd4b74bf4393c88915c836c863fc4bf11d7f2bd930a1bbccacdcb"\n              }\n            }\n          ],\n          "result": {\n            "name": "chain_get_era_info_by_switch_block_example_result",\n            "value": {\n              "api_version": "1.5.6",\n              "era_summary": {\n                "block_hash": "13c2d7a68ecdd4b74bf4393c88915c836c863fc4bf11d7f2bd930a1bbccacdcb",\n                "era_id": 42,\n                "stored_value": {\n                  "EraInfo": {\n                    "seigniorage_allocations": [\n                      {\n                        "Delegator": {\n                          "delegator_public_key": "01e1b46a25baa8a5c28beb3c9cfb79b572effa04076f00befa57eb70b016153f18",\n                          "validator_public_key": "012a1732addc639ea43a89e25d3ad912e40232156dcaa4b9edfc709f43d2fb0876",\n                          "amount": "1000"\n                        }\n                      },\n                      {\n                        "Validator": {\n                          "validator_public_key": "012a1732addc639ea43a89e25d3ad912e40232156dcaa4b9edfc709f43d2fb0876",\n                          "amount": "2000"\n                        }\n                      }\n                    ]\n                  }\n                },\n                "state_root_hash": "0808080808080808080808080808080808080808080808080808080808080808",\n                "merkle_proof": "01000000006ef2e0949ac76e55812421f755abe129b6244fe7168b77f47a72536147614625016ef2e0949ac76e55812421f755abe129b6244fe7168b77f47a72536147614625000000003529cde5c621f857f75f3810611eb4af3f998caaa9d4a3413cf799f99c67db0307010000006ef2e0949ac76e55812421f755abe129b6244fe7168b77f47a7253614761462501010102000000006e06000000000074769d28aac597a36a03a932d4b43e4f10bf0403ee5c41dd035102553f5773631200b9e173e8f05361b681513c14e25e3138639eb03232581db7557c9e8dbbc83ce94500226a9a7fe4f2b7b88d5103a4fc7400f02bf89c860c9ccdd56951a2afe9be0e0267006d820fb5676eb2960e15722f7725f3f8f41030078f8b2e44bf0dc03f71b176d6e800dc5ae9805068c5be6da1a90b2528ee85db0609cc0fb4bd60bbd559f497a98b67f500e1e3e846592f4918234647fca39830b7e1e6ad6f5b7a99b39af823d82ba1873d000003000000010186ff500f287e9b53f823ae1582b1fa429dfede28015125fd233a31ca04d5012002015cc42669a55467a1fdf49750772bfc1aed59b9b085558eb81510e9b015a7c83b0301e3cf4a34b1db6bfa58808b686cb8fe21ebe0c1bcbcee522649d2b135fe510fe3"\n              }\n            }\n          }\n        }\n      ]\n    },\n    {\n      "name": "state_get_auction_info",\n      "summary": "returns the bids and validators as of either a specific block (by height or hash), or the most recently added block",\n      "params": [\n        {\n          "name": "block_identifier",\n          "schema": {\n            "description": "The block identifier.",\n            "$ref": "#/components/schemas/BlockIdentifier"\n          },\n          "required": false\n        }\n      ],\n      "result": {\n        "name": "state_get_auction_info_result",\n        "schema": {\n          "description": "Result for \\"state_get_auction_info\\" RPC response.",\n          "type": "object",\n          "required": [\n            "api_version",\n            "auction_state"\n          ],\n          "properties": {\n            "api_version": {\n              "description": "The RPC API version.",\n              "type": "string"\n            },\n            "auction_state": {\n              "description": "The auction state.",\n              "$ref": "#/components/schemas/AuctionState"\n            }\n          },\n          "additionalProperties": false\n        }\n      },\n      "examples": [\n        {\n          "name": "state_get_auction_info_example",\n          "params": [\n            {\n              "name": "block_identifier",\n              "value": {\n                "Hash": "13c2d7a68ecdd4b74bf4393c88915c836c863fc4bf11d7f2bd930a1bbccacdcb"\n              }\n            }\n          ],\n          "result": {\n            "name": "state_get_auction_info_example_result",\n            "value": {\n              "api_version": "1.5.6",\n              "auction_state": {\n                "state_root_hash": "0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b",\n                "block_height": 10,\n                "era_validators": [\n                  {\n                    "era_id": 10,\n                    "validator_weights": [\n                      {\n                        "public_key": "01197f6b23e16c8532c6abc838facd5ea789be0c76b2920334039bfa8b3d368d61",\n                        "weight": "10"\n                      }\n                    ]\n                  }\n                ],\n                "bids": [\n                  {\n                    "public_key": "01197f6b23e16c8532c6abc838facd5ea789be0c76b2920334039bfa8b3d368d61",\n                    "bid": {\n                      "bonding_purse": "uref-fafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafafa-007",\n                      "staked_amount": "10",\n                      "delegation_rate": 0,\n                      "delegators": [],\n                      "inactive": false\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        }\n      ]\n    },\n    {\n      "name": "chain_get_era_summary",\n      "summary": "returns the era summary at either a specific block (by height or hash), or the most recently added block",\n      "params": [\n        {\n          "name": "block_identifier",\n          "schema": {\n            "description": "The block identifier.",\n            "$ref": "#/components/schemas/BlockIdentifier"\n          },\n          "required": false\n        }\n      ],\n      "result": {\n        "name": "chain_get_era_summary_result",\n        "schema": {\n          "description": "Result for \\"chain_get_era_summary\\" RPC response.",\n          "type": "object",\n          "required": [\n            "api_version",\n            "era_summary"\n          ],\n          "properties": {\n            "api_version": {\n              "description": "The RPC API version.",\n              "type": "string"\n            },\n            "era_summary": {\n              "description": "The era summary.",\n              "$ref": "#/components/schemas/EraSummary"\n            }\n          },\n          "additionalProperties": false\n        }\n      },\n      "examples": [\n        {\n          "name": "chain_get_era_summary_example",\n          "params": [\n            {\n              "name": "block_identifier",\n              "value": {\n                "Hash": "13c2d7a68ecdd4b74bf4393c88915c836c863fc4bf11d7f2bd930a1bbccacdcb"\n              }\n            }\n          ],\n          "result": {\n            "name": "chain_get_era_summary_example_result",\n            "value": {\n              "api_version": "1.5.6",\n              "era_summary": {\n                "block_hash": "13c2d7a68ecdd4b74bf4393c88915c836c863fc4bf11d7f2bd930a1bbccacdcb",\n                "era_id": 42,\n                "stored_value": {\n                  "EraInfo": {\n                    "seigniorage_allocations": [\n                      {\n                        "Delegator": {\n                          "delegator_public_key": "01e1b46a25baa8a5c28beb3c9cfb79b572effa04076f00befa57eb70b016153f18",\n                          "validator_public_key": "012a1732addc639ea43a89e25d3ad912e40232156dcaa4b9edfc709f43d2fb0876",\n                          "amount": "1000"\n                        }\n                      },\n                      {\n                        "Validator": {\n                          "validator_public_key": "012a1732addc639ea43a89e25d3ad912e40232156dcaa4b9edfc709f43d2fb0876",\n                          "amount": "2000"\n                        }\n                      }\n                    ]\n                  }\n                },\n                "state_root_hash": "0808080808080808080808080808080808080808080808080808080808080808",\n                "merkle_proof": "01000000006ef2e0949ac76e55812421f755abe129b6244fe7168b77f47a72536147614625016ef2e0949ac76e55812421f755abe129b6244fe7168b77f47a72536147614625000000003529cde5c621f857f75f3810611eb4af3f998caaa9d4a3413cf799f99c67db0307010000006ef2e0949ac76e55812421f755abe129b6244fe7168b77f47a7253614761462501010102000000006e06000000000074769d28aac597a36a03a932d4b43e4f10bf0403ee5c41dd035102553f5773631200b9e173e8f05361b681513c14e25e3138639eb03232581db7557c9e8dbbc83ce94500226a9a7fe4f2b7b88d5103a4fc7400f02bf89c860c9ccdd56951a2afe9be0e0267006d820fb5676eb2960e15722f7725f3f8f41030078f8b2e44bf0dc03f71b176d6e800dc5ae9805068c5be6da1a90b2528ee85db0609cc0fb4bd60bbd559f497a98b67f500e1e3e846592f4918234647fca39830b7e1e6ad6f5b7a99b39af823d82ba1873d000003000000010186ff500f287e9b53f823ae1582b1fa429dfede28015125fd233a31ca04d5012002015cc42669a55467a1fdf49750772bfc1aed59b9b085558eb81510e9b015a7c83b0301e3cf4a34b1db6bfa58808b686cb8fe21ebe0c1bcbcee522649d2b135fe510fe3"\n              }\n            }\n          }\n        }\n      ]\n    }\n  ],\n  "components": {\n    "schemas": {\n      "Deploy": {\n        "description": "A deploy; an item containing a smart contract along with the requester\'s signature(s).",\n        "type": "object",\n        "required": [\n          "approvals",\n          "hash",\n          "header",\n          "payment",\n          "session"\n        ],\n        "properties": {\n          "hash": {\n            "$ref": "#/components/schemas/DeployHash"\n          },\n          "header": {\n            "$ref": "#/components/schemas/DeployHeader"\n          },\n          "payment": {\n            "$ref": "#/components/schemas/ExecutableDeployItem"\n          },\n          "session": {\n            "$ref": "#/components/schemas/ExecutableDeployItem"\n          },\n          "approvals": {\n            "type": "array",\n            "items": {\n              "$ref": "#/components/schemas/Approval"\n            },\n            "uniqueItems": true\n          }\n        },\n        "additionalProperties": false\n      },\n      "DeployHash": {\n        "description": "Hex-encoded deploy hash.",\n        "allOf": [\n          {\n            "$ref": "#/components/schemas/Digest"\n          }\n        ]\n      },\n      "Digest": {\n        "description": "Hex-encoded hash digest.",\n        "type": "string"\n      },\n      "DeployHeader": {\n        "description": "The header portion of a [`Deploy`].",\n        "type": "object",\n        "required": [\n          "account",\n          "body_hash",\n          "chain_name",\n          "dependencies",\n          "gas_price",\n          "timestamp",\n          "ttl"\n        ],\n        "properties": {\n          "account": {\n            "$ref": "#/components/schemas/PublicKey"\n          },\n          "timestamp": {\n            "$ref": "#/components/schemas/Timestamp"\n          },\n          "ttl": {\n            "$ref": "#/components/schemas/TimeDiff"\n          },\n          "gas_price": {\n            "type": "integer",\n            "format": "uint64",\n            "minimum": 0.0\n          },\n          "body_hash": {\n            "$ref": "#/components/schemas/Digest"\n          },\n          "dependencies": {\n            "type": "array",\n            "items": {\n              "$ref": "#/components/schemas/DeployHash"\n            }\n          },\n          "chain_name": {\n            "type": "string"\n          }\n        },\n        "additionalProperties": false\n      },\n      "PublicKey": {\n        "description": "Hex-encoded cryptographic public key, including the algorithm tag prefix.",\n        "examples": [\n          {\n            "name": "SystemPublicKey",\n            "description": "A pseudo public key, used for example when the system proposes an immediate switch block after a network upgrade rather than a specific validator. Its hex-encoded value is always \'00\', as is the corresponding pseudo signature\'s",\n            "value": "00"\n          },\n          {\n            "name": "Ed25519PublicKey",\n            "description": "An Ed25519 public key. Its hex-encoded value begins \'01\' and is followed by 64 characters",\n            "value": "018a88e3dd7409f195fd52db2d3cba5d72ca6709bf1d94121bf3748801b40f6f5c"\n          },\n          {\n            "name": "Secp256k1PublicKey",\n            "description": "A secp256k1 public key. Its hex-encoded value begins \'02\' and is followed by 66 characters",\n            "value": "0203408e9526316fd1f8def480dd45b2cc72ffd732771c9ceb5d92ffa4051e6ee084"\n          }\n        ],\n        "type": "string"\n      },\n      "Timestamp": {\n        "description": "Timestamp formatted as per RFC 3339",\n        "type": "integer",\n        "format": "uint64",\n        "minimum": 0.0\n      },\n      "TimeDiff": {\n        "description": "Human-readable duration.",\n        "type": "integer",\n        "format": "uint64",\n        "minimum": 0.0\n      },\n      "ExecutableDeployItem": {\n        "description": "Represents possible variants of an executable deploy.",\n        "anyOf": [\n          {\n            "description": "Executable specified as raw bytes that represent WASM code and an instance of [`RuntimeArgs`].",\n            "type": "object",\n            "required": [\n              "ModuleBytes"\n            ],\n            "properties": {\n              "ModuleBytes": {\n                "type": "object",\n                "required": [\n                  "args",\n                  "module_bytes"\n                ],\n                "properties": {\n                  "module_bytes": {\n                    "description": "Hex-encoded raw Wasm bytes.",\n                    "type": "string"\n                  },\n                  "args": {\n                    "description": "Runtime arguments.",\n                    "allOf": [\n                      {\n                        "$ref": "#/components/schemas/RuntimeArgs"\n                      }\n                    ]\n                  }\n                },\n                "additionalProperties": false\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "Stored contract referenced by its [`ContractHash`], entry point and an instance of [`RuntimeArgs`].",\n            "type": "object",\n            "required": [\n              "StoredContractByHash"\n            ],\n            "properties": {\n              "StoredContractByHash": {\n                "type": "object",\n                "required": [\n                  "args",\n                  "entry_point",\n                  "hash"\n                ],\n                "properties": {\n                  "hash": {\n                    "description": "Hex-encoded hash.",\n                    "type": "string"\n                  },\n                  "entry_point": {\n                    "description": "Name of an entry point.",\n                    "type": "string"\n                  },\n                  "args": {\n                    "description": "Runtime arguments.",\n                    "allOf": [\n                      {\n                        "$ref": "#/components/schemas/RuntimeArgs"\n                      }\n                    ]\n                  }\n                },\n                "additionalProperties": false\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "Stored contract referenced by a named key existing in the signer\'s account context, entry point and an instance of [`RuntimeArgs`].",\n            "type": "object",\n            "required": [\n              "StoredContractByName"\n            ],\n            "properties": {\n              "StoredContractByName": {\n                "type": "object",\n                "required": [\n                  "args",\n                  "entry_point",\n                  "name"\n                ],\n                "properties": {\n                  "name": {\n                    "description": "Named key.",\n                    "type": "string"\n                  },\n                  "entry_point": {\n                    "description": "Name of an entry point.",\n                    "type": "string"\n                  },\n                  "args": {\n                    "description": "Runtime arguments.",\n                    "allOf": [\n                      {\n                        "$ref": "#/components/schemas/RuntimeArgs"\n                      }\n                    ]\n                  }\n                },\n                "additionalProperties": false\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "Stored versioned contract referenced by its [`ContractPackageHash`], entry point and an instance of [`RuntimeArgs`].",\n            "type": "object",\n            "required": [\n              "StoredVersionedContractByHash"\n            ],\n            "properties": {\n              "StoredVersionedContractByHash": {\n                "type": "object",\n                "required": [\n                  "args",\n                  "entry_point",\n                  "hash"\n                ],\n                "properties": {\n                  "hash": {\n                    "description": "Hex-encoded hash.",\n                    "type": "string"\n                  },\n                  "version": {\n                    "description": "An optional version of the contract to call. It will default to the highest enabled version if no value is specified.",\n                    "type": [\n                      "integer",\n                      "null"\n                    ],\n                    "format": "uint32",\n                    "minimum": 0.0\n                  },\n                  "entry_point": {\n                    "description": "Entry point name.",\n                    "type": "string"\n                  },\n                  "args": {\n                    "description": "Runtime arguments.",\n                    "allOf": [\n                      {\n                        "$ref": "#/components/schemas/RuntimeArgs"\n                      }\n                    ]\n                  }\n                },\n                "additionalProperties": false\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "Stored versioned contract referenced by a named key existing in the signer\'s account context, entry point and an instance of [`RuntimeArgs`].",\n            "type": "object",\n            "required": [\n              "StoredVersionedContractByName"\n            ],\n            "properties": {\n              "StoredVersionedContractByName": {\n                "type": "object",\n                "required": [\n                  "args",\n                  "entry_point",\n                  "name"\n                ],\n                "properties": {\n                  "name": {\n                    "description": "Named key.",\n                    "type": "string"\n                  },\n                  "version": {\n                    "description": "An optional version of the contract to call. It will default to the highest enabled version if no value is specified.",\n                    "type": [\n                      "integer",\n                      "null"\n                    ],\n                    "format": "uint32",\n                    "minimum": 0.0\n                  },\n                  "entry_point": {\n                    "description": "Entry point name.",\n                    "type": "string"\n                  },\n                  "args": {\n                    "description": "Runtime arguments.",\n                    "allOf": [\n                      {\n                        "$ref": "#/components/schemas/RuntimeArgs"\n                      }\n                    ]\n                  }\n                },\n                "additionalProperties": false\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "A native transfer which does not contain or reference a WASM code.",\n            "type": "object",\n            "required": [\n              "Transfer"\n            ],\n            "properties": {\n              "Transfer": {\n                "type": "object",\n                "required": [\n                  "args"\n                ],\n                "properties": {\n                  "args": {\n                    "description": "Runtime arguments.",\n                    "allOf": [\n                      {\n                        "$ref": "#/components/schemas/RuntimeArgs"\n                      }\n                    ]\n                  }\n                },\n                "additionalProperties": false\n              }\n            },\n            "additionalProperties": false\n          }\n        ]\n      },\n      "RuntimeArgs": {\n        "description": "Represents a collection of arguments passed to a smart contract.",\n        "type": "array",\n        "items": {\n          "$ref": "#/components/schemas/NamedArg"\n        }\n      },\n      "NamedArg": {\n        "description": "Named arguments to a contract.",\n        "type": "array",\n        "items": [\n          {\n            "type": "string"\n          },\n          {\n            "$ref": "#/components/schemas/CLValue"\n          }\n        ],\n        "maxItems": 2,\n        "minItems": 2\n      },\n      "CLValue": {\n        "description": "A Casper value, i.e. a value which can be stored and manipulated by smart contracts.\\n\\nIt holds the underlying data as a type-erased, serialized `Vec<u8>` and also holds the CLType of the underlying data as a separate member.\\n\\nThe `parsed` field, representing the original value, is a convenience only available when a CLValue is encoded to JSON, and can always be set to null if preferred.",\n        "type": "object",\n        "required": [\n          "bytes",\n          "cl_type"\n        ],\n        "properties": {\n          "cl_type": {\n            "$ref": "#/components/schemas/CLType"\n          },\n          "bytes": {\n            "type": "string"\n          },\n          "parsed": true\n        },\n        "additionalProperties": false\n      },\n      "CLType": {\n        "description": "Casper types, i.e. types which can be stored and manipulated by smart contracts.\\n\\nProvides a description of the underlying data type of a [`CLValue`](crate::CLValue).",\n        "anyOf": [\n          {\n            "type": "string",\n            "enum": [\n              "Bool",\n              "I32",\n              "I64",\n              "U8",\n              "U32",\n              "U64",\n              "U128",\n              "U256",\n              "U512",\n              "Unit",\n              "String",\n              "Key",\n              "URef",\n              "PublicKey",\n              "Any"\n            ]\n          },\n          {\n            "description": "`Option` of a `CLType`.",\n            "type": "object",\n            "required": [\n              "Option"\n            ],\n            "properties": {\n              "Option": {\n                "$ref": "#/components/schemas/CLType"\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "Variable-length list of a single `CLType` (comparable to a `Vec`).",\n            "type": "object",\n            "required": [\n              "List"\n            ],\n            "properties": {\n              "List": {\n                "$ref": "#/components/schemas/CLType"\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "Fixed-length list of a single `CLType` (comparable to a Rust array).",\n            "type": "object",\n            "required": [\n              "ByteArray"\n            ],\n            "properties": {\n              "ByteArray": {\n                "type": "integer",\n                "format": "uint32",\n                "minimum": 0.0\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "`Result` with `Ok` and `Err` variants of `CLType`s.",\n            "type": "object",\n            "required": [\n              "Result"\n            ],\n            "properties": {\n              "Result": {\n                "type": "object",\n                "required": [\n                  "err",\n                  "ok"\n                ],\n                "properties": {\n                  "ok": {\n                    "$ref": "#/components/schemas/CLType"\n                  },\n                  "err": {\n                    "$ref": "#/components/schemas/CLType"\n                  }\n                },\n                "additionalProperties": false\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "Map with keys of a single `CLType` and values of a single `CLType`.",\n            "type": "object",\n            "required": [\n              "Map"\n            ],\n            "properties": {\n              "Map": {\n                "type": "object",\n                "required": [\n                  "key",\n                  "value"\n                ],\n                "properties": {\n                  "key": {\n                    "$ref": "#/components/schemas/CLType"\n                  },\n                  "value": {\n                    "$ref": "#/components/schemas/CLType"\n                  }\n                },\n                "additionalProperties": false\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "1-ary tuple of a `CLType`.",\n            "type": "object",\n            "required": [\n              "Tuple1"\n            ],\n            "properties": {\n              "Tuple1": {\n                "type": "array",\n                "items": {\n                  "$ref": "#/components/schemas/CLType"\n                },\n                "maxItems": 1,\n                "minItems": 1\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "2-ary tuple of `CLType`s.",\n            "type": "object",\n            "required": [\n              "Tuple2"\n            ],\n            "properties": {\n              "Tuple2": {\n                "type": "array",\n                "items": {\n                  "$ref": "#/components/schemas/CLType"\n                },\n                "maxItems": 2,\n                "minItems": 2\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "3-ary tuple of `CLType`s.",\n            "type": "object",\n            "required": [\n              "Tuple3"\n            ],\n            "properties": {\n              "Tuple3": {\n                "type": "array",\n                "items": {\n                  "$ref": "#/components/schemas/CLType"\n                },\n                "maxItems": 3,\n                "minItems": 3\n              }\n            },\n            "additionalProperties": false\n          }\n        ]\n      },\n      "Approval": {\n        "description": "A struct containing a signature of a deploy hash and the public key of the signer.",\n        "type": "object",\n        "required": [\n          "signature",\n          "signer"\n        ],\n        "properties": {\n          "signer": {\n            "$ref": "#/components/schemas/PublicKey"\n          },\n          "signature": {\n            "$ref": "#/components/schemas/Signature"\n          }\n        },\n        "additionalProperties": false\n      },\n      "Signature": {\n        "description": "Hex-encoded cryptographic signature, including the algorithm tag prefix.",\n        "type": "string"\n      },\n      "JsonExecutionResult": {\n        "description": "The execution result of a single deploy.",\n        "type": "object",\n        "required": [\n          "block_hash",\n          "result"\n        ],\n        "properties": {\n          "block_hash": {\n            "description": "The block hash.",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/BlockHash"\n              }\n            ]\n          },\n          "result": {\n            "description": "Execution result.",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/ExecutionResult"\n              }\n            ]\n          }\n        },\n        "additionalProperties": false\n      },\n      "BlockHash": {\n        "description": "A cryptographic hash identifying a [`Block`](struct.Block.html).",\n        "allOf": [\n          {\n            "$ref": "#/components/schemas/Digest"\n          }\n        ]\n      },\n      "ExecutionResult": {\n        "description": "The result of executing a single deploy.",\n        "anyOf": [\n          {\n            "description": "The result of a failed execution.",\n            "type": "object",\n            "required": [\n              "Failure"\n            ],\n            "properties": {\n              "Failure": {\n                "type": "object",\n                "required": [\n                  "cost",\n                  "effect",\n                  "error_message",\n                  "transfers"\n                ],\n                "properties": {\n                  "effect": {\n                    "description": "The effect of executing the deploy.",\n                    "allOf": [\n                      {\n                        "$ref": "#/components/schemas/ExecutionEffect"\n                      }\n                    ]\n                  },\n                  "transfers": {\n                    "description": "A record of Transfers performed while executing the deploy.",\n                    "type": "array",\n                    "items": {\n                      "$ref": "#/components/schemas/TransferAddr"\n                    }\n                  },\n                  "cost": {\n                    "description": "The cost of executing the deploy.",\n                    "allOf": [\n                      {\n                        "$ref": "#/components/schemas/U512"\n                      }\n                    ]\n                  },\n                  "error_message": {\n                    "description": "The error message associated with executing the deploy.",\n                    "type": "string"\n                  }\n                },\n                "additionalProperties": false\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "The result of a successful execution.",\n            "type": "object",\n            "required": [\n              "Success"\n            ],\n            "properties": {\n              "Success": {\n                "type": "object",\n                "required": [\n                  "cost",\n                  "effect",\n                  "transfers"\n                ],\n                "properties": {\n                  "effect": {\n                    "description": "The effect of executing the deploy.",\n                    "allOf": [\n                      {\n                        "$ref": "#/components/schemas/ExecutionEffect"\n                      }\n                    ]\n                  },\n                  "transfers": {\n                    "description": "A record of Transfers performed while executing the deploy.",\n                    "type": "array",\n                    "items": {\n                      "$ref": "#/components/schemas/TransferAddr"\n                    }\n                  },\n                  "cost": {\n                    "description": "The cost of executing the deploy.",\n                    "allOf": [\n                      {\n                        "$ref": "#/components/schemas/U512"\n                      }\n                    ]\n                  }\n                },\n                "additionalProperties": false\n              }\n            },\n            "additionalProperties": false\n          }\n        ]\n      },\n      "ExecutionEffect": {\n        "description": "The journal of execution transforms from a single deploy.",\n        "type": "object",\n        "required": [\n          "operations",\n          "transforms"\n        ],\n        "properties": {\n          "operations": {\n            "description": "The resulting operations.",\n            "type": "array",\n            "items": {\n              "$ref": "#/components/schemas/Operation"\n            }\n          },\n          "transforms": {\n            "description": "The journal of execution transforms.",\n            "type": "array",\n            "items": {\n              "$ref": "#/components/schemas/TransformEntry"\n            }\n          }\n        },\n        "additionalProperties": false\n      },\n      "Operation": {\n        "description": "An operation performed while executing a deploy.",\n        "type": "object",\n        "required": [\n          "key",\n          "kind"\n        ],\n        "properties": {\n          "key": {\n            "description": "The formatted string of the `Key`.",\n            "type": "string"\n          },\n          "kind": {\n            "description": "The type of operation.",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/OpKind"\n              }\n            ]\n          }\n        },\n        "additionalProperties": false\n      },\n      "OpKind": {\n        "description": "The type of operation performed while executing a deploy.",\n        "type": "string",\n        "enum": [\n          "Read",\n          "Write",\n          "Add",\n          "NoOp"\n        ]\n      },\n      "TransformEntry": {\n        "description": "A transformation performed while executing a deploy.",\n        "type": "object",\n        "required": [\n          "key",\n          "transform"\n        ],\n        "properties": {\n          "key": {\n            "description": "The formatted string of the `Key`.",\n            "type": "string"\n          },\n          "transform": {\n            "description": "The transformation.",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/Transform"\n              }\n            ]\n          }\n        },\n        "additionalProperties": false\n      },\n      "Transform": {\n        "description": "The actual transformation performed while executing a deploy.",\n        "anyOf": [\n          {\n            "type": "string",\n            "enum": [\n              "Identity",\n              "WriteContractWasm",\n              "WriteContract",\n              "WriteContractPackage"\n            ]\n          },\n          {\n            "description": "Writes the given CLValue to global state.",\n            "type": "object",\n            "required": [\n              "WriteCLValue"\n            ],\n            "properties": {\n              "WriteCLValue": {\n                "$ref": "#/components/schemas/CLValue"\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "Writes the given Account to global state.",\n            "type": "object",\n            "required": [\n              "WriteAccount"\n            ],\n            "properties": {\n              "WriteAccount": {\n                "$ref": "#/components/schemas/AccountHash"\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "Writes the given DeployInfo to global state.",\n            "type": "object",\n            "required": [\n              "WriteDeployInfo"\n            ],\n            "properties": {\n              "WriteDeployInfo": {\n                "$ref": "#/components/schemas/DeployInfo"\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "Writes the given EraInfo to global state.",\n            "type": "object",\n            "required": [\n              "WriteEraInfo"\n            ],\n            "properties": {\n              "WriteEraInfo": {\n                "$ref": "#/components/schemas/EraInfo"\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "Writes the given Transfer to global state.",\n            "type": "object",\n            "required": [\n              "WriteTransfer"\n            ],\n            "properties": {\n              "WriteTransfer": {\n                "$ref": "#/components/schemas/Transfer"\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "Writes the given Bid to global state.",\n            "type": "object",\n            "required": [\n              "WriteBid"\n            ],\n            "properties": {\n              "WriteBid": {\n                "$ref": "#/components/schemas/Bid"\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "Writes the given Withdraw to global state.",\n            "type": "object",\n            "required": [\n              "WriteWithdraw"\n            ],\n            "properties": {\n              "WriteWithdraw": {\n                "type": "array",\n                "items": {\n                  "$ref": "#/components/schemas/WithdrawPurse"\n                }\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "Adds the given `i32`.",\n            "type": "object",\n            "required": [\n              "AddInt32"\n            ],\n            "properties": {\n              "AddInt32": {\n                "type": "integer",\n                "format": "int32"\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "Adds the given `u64`.",\n            "type": "object",\n            "required": [\n              "AddUInt64"\n            ],\n            "properties": {\n              "AddUInt64": {\n                "type": "integer",\n                "format": "uint64",\n                "minimum": 0.0\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "Adds the given `U128`.",\n            "type": "object",\n            "required": [\n              "AddUInt128"\n            ],\n            "properties": {\n              "AddUInt128": {\n                "$ref": "#/components/schemas/U128"\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "Adds the given `U256`.",\n            "type": "object",\n            "required": [\n              "AddUInt256"\n            ],\n            "properties": {\n              "AddUInt256": {\n                "$ref": "#/components/schemas/U256"\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "Adds the given `U512`.",\n            "type": "object",\n            "required": [\n              "AddUInt512"\n            ],\n            "properties": {\n              "AddUInt512": {\n                "$ref": "#/components/schemas/U512"\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "Adds the given collection of named keys.",\n            "type": "object",\n            "required": [\n              "AddKeys"\n            ],\n            "properties": {\n              "AddKeys": {\n                "type": "array",\n                "items": {\n                  "$ref": "#/components/schemas/NamedKey"\n                }\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "A failed transformation, containing an error message.",\n            "type": "object",\n            "required": [\n              "Failure"\n            ],\n            "properties": {\n              "Failure": {\n                "type": "string"\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "Writes the given Unbonding to global state.",\n            "type": "object",\n            "required": [\n              "WriteUnbonding"\n            ],\n            "properties": {\n              "WriteUnbonding": {\n                "type": "array",\n                "items": {\n                  "$ref": "#/components/schemas/UnbondingPurse"\n                }\n              }\n            },\n            "additionalProperties": false\n          }\n        ]\n      },\n      "AccountHash": {\n        "description": "Hex-encoded account hash.",\n        "type": "string"\n      },\n      "DeployInfo": {\n        "description": "Information relating to the given Deploy.",\n        "type": "object",\n        "required": [\n          "deploy_hash",\n          "from",\n          "gas",\n          "source",\n          "transfers"\n        ],\n        "properties": {\n          "deploy_hash": {\n            "description": "The relevant Deploy.",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/DeployHash"\n              }\n            ]\n          },\n          "transfers": {\n            "description": "Transfers performed by the Deploy.",\n            "type": "array",\n            "items": {\n              "$ref": "#/components/schemas/TransferAddr"\n            }\n          },\n          "from": {\n            "description": "Account identifier of the creator of the Deploy.",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/AccountHash"\n              }\n            ]\n          },\n          "source": {\n            "description": "Source purse used for payment of the Deploy.",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/URef"\n              }\n            ]\n          },\n          "gas": {\n            "description": "Gas cost of executing the Deploy.",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/U512"\n              }\n            ]\n          }\n        },\n        "additionalProperties": false\n      },\n      "TransferAddr": {\n        "description": "Hex-encoded transfer address.",\n        "type": "string"\n      },\n      "URef": {\n        "description": "Hex-encoded, formatted URef.",\n        "type": "string"\n      },\n      "U512": {\n        "description": "Decimal representation of a 512-bit integer.",\n        "type": "string"\n      },\n      "EraInfo": {\n        "description": "Auction metadata.  Intended to be recorded at each era.",\n        "type": "object",\n        "required": [\n          "seigniorage_allocations"\n        ],\n        "properties": {\n          "seigniorage_allocations": {\n            "type": "array",\n            "items": {\n              "$ref": "#/components/schemas/SeigniorageAllocation"\n            }\n          }\n        },\n        "additionalProperties": false\n      },\n      "SeigniorageAllocation": {\n        "description": "Information about a seigniorage allocation",\n        "anyOf": [\n          {\n            "description": "Info about a seigniorage allocation for a validator",\n            "type": "object",\n            "required": [\n              "Validator"\n            ],\n            "properties": {\n              "Validator": {\n                "type": "object",\n                "required": [\n                  "amount",\n                  "validator_public_key"\n                ],\n                "properties": {\n                  "validator_public_key": {\n                    "description": "Validator\'s public key",\n                    "allOf": [\n                      {\n                        "$ref": "#/components/schemas/PublicKey"\n                      }\n                    ]\n                  },\n                  "amount": {\n                    "description": "Allocated amount",\n                    "allOf": [\n                      {\n                        "$ref": "#/components/schemas/U512"\n                      }\n                    ]\n                  }\n                },\n                "additionalProperties": false\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "Info about a seigniorage allocation for a delegator",\n            "type": "object",\n            "required": [\n              "Delegator"\n            ],\n            "properties": {\n              "Delegator": {\n                "type": "object",\n                "required": [\n                  "amount",\n                  "delegator_public_key",\n                  "validator_public_key"\n                ],\n                "properties": {\n                  "delegator_public_key": {\n                    "description": "Delegator\'s public key",\n                    "allOf": [\n                      {\n                        "$ref": "#/components/schemas/PublicKey"\n                      }\n                    ]\n                  },\n                  "validator_public_key": {\n                    "description": "Validator\'s public key",\n                    "allOf": [\n                      {\n                        "$ref": "#/components/schemas/PublicKey"\n                      }\n                    ]\n                  },\n                  "amount": {\n                    "description": "Allocated amount",\n                    "allOf": [\n                      {\n                        "$ref": "#/components/schemas/U512"\n                      }\n                    ]\n                  }\n                },\n                "additionalProperties": false\n              }\n            },\n            "additionalProperties": false\n          }\n        ]\n      },\n      "Transfer": {\n        "description": "Represents a transfer from one purse to another",\n        "type": "object",\n        "required": [\n          "amount",\n          "deploy_hash",\n          "from",\n          "gas",\n          "source",\n          "target"\n        ],\n        "properties": {\n          "deploy_hash": {\n            "description": "Deploy that created the transfer",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/DeployHash"\n              }\n            ]\n          },\n          "from": {\n            "description": "Account from which transfer was executed",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/AccountHash"\n              }\n            ]\n          },\n          "to": {\n            "description": "Account to which funds are transferred",\n            "anyOf": [\n              {\n                "$ref": "#/components/schemas/AccountHash"\n              },\n              {\n                "type": "null"\n              }\n            ]\n          },\n          "source": {\n            "description": "Source purse",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/URef"\n              }\n            ]\n          },\n          "target": {\n            "description": "Target purse",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/URef"\n              }\n            ]\n          },\n          "amount": {\n            "description": "Transfer amount",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/U512"\n              }\n            ]\n          },\n          "gas": {\n            "description": "Gas",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/U512"\n              }\n            ]\n          },\n          "id": {\n            "description": "User-defined id",\n            "type": [\n              "integer",\n              "null"\n            ],\n            "format": "uint64",\n            "minimum": 0.0\n          }\n        },\n        "additionalProperties": false\n      },\n      "Bid": {\n        "description": "An entry in the validator map.",\n        "type": "object",\n        "required": [\n          "bonding_purse",\n          "delegation_rate",\n          "delegators",\n          "inactive",\n          "staked_amount",\n          "validator_public_key"\n        ],\n        "properties": {\n          "validator_public_key": {\n            "description": "Validator public key",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/PublicKey"\n              }\n            ]\n          },\n          "bonding_purse": {\n            "description": "The purse that was used for bonding.",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/URef"\n              }\n            ]\n          },\n          "staked_amount": {\n            "description": "The amount of tokens staked by a validator (not including delegators).",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/U512"\n              }\n            ]\n          },\n          "delegation_rate": {\n            "description": "Delegation rate",\n            "type": "integer",\n            "format": "uint8",\n            "minimum": 0.0\n          },\n          "vesting_schedule": {\n            "description": "Vesting schedule for a genesis validator. `None` if non-genesis validator.",\n            "anyOf": [\n              {\n                "$ref": "#/components/schemas/VestingSchedule"\n              },\n              {\n                "type": "null"\n              }\n            ]\n          },\n          "delegators": {\n            "description": "This validator\'s delegators, indexed by their public keys",\n            "type": "object",\n            "additionalProperties": {\n              "$ref": "#/components/schemas/Delegator"\n            }\n          },\n          "inactive": {\n            "description": "`true` if validator has been \\"evicted\\"",\n            "type": "boolean"\n          }\n        },\n        "additionalProperties": false\n      },\n      "VestingSchedule": {\n        "type": "object",\n        "required": [\n          "initial_release_timestamp_millis"\n        ],\n        "properties": {\n          "initial_release_timestamp_millis": {\n            "type": "integer",\n            "format": "uint64",\n            "minimum": 0.0\n          },\n          "locked_amounts": {\n            "type": [\n              "array",\n              "null"\n            ],\n            "items": {\n              "$ref": "#/components/schemas/U512"\n            },\n            "maxItems": 14,\n            "minItems": 14\n          }\n        },\n        "additionalProperties": false\n      },\n      "Delegator": {\n        "description": "Represents a party delegating their stake to a validator (or \\"delegatee\\")",\n        "type": "object",\n        "required": [\n          "bonding_purse",\n          "delegator_public_key",\n          "staked_amount",\n          "validator_public_key"\n        ],\n        "properties": {\n          "delegator_public_key": {\n            "$ref": "#/components/schemas/PublicKey"\n          },\n          "staked_amount": {\n            "$ref": "#/components/schemas/U512"\n          },\n          "bonding_purse": {\n            "$ref": "#/components/schemas/URef"\n          },\n          "validator_public_key": {\n            "$ref": "#/components/schemas/PublicKey"\n          },\n          "vesting_schedule": {\n            "anyOf": [\n              {\n                "$ref": "#/components/schemas/VestingSchedule"\n              },\n              {\n                "type": "null"\n              }\n            ]\n          }\n        },\n        "additionalProperties": false\n      },\n      "WithdrawPurse": {\n        "description": "A withdraw purse, a legacy structure.",\n        "type": "object",\n        "required": [\n          "amount",\n          "bonding_purse",\n          "era_of_creation",\n          "unbonder_public_key",\n          "validator_public_key"\n        ],\n        "properties": {\n          "bonding_purse": {\n            "description": "Bonding Purse",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/URef"\n              }\n            ]\n          },\n          "validator_public_key": {\n            "description": "Validators public key.",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/PublicKey"\n              }\n            ]\n          },\n          "unbonder_public_key": {\n            "description": "Unbonders public key.",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/PublicKey"\n              }\n            ]\n          },\n          "era_of_creation": {\n            "description": "Era in which this unbonding request was created.",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/EraId"\n              }\n            ]\n          },\n          "amount": {\n            "description": "Unbonding Amount.",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/U512"\n              }\n            ]\n          }\n        },\n        "additionalProperties": false\n      },\n      "EraId": {\n        "description": "Era ID newtype.",\n        "type": "integer",\n        "format": "uint64",\n        "minimum": 0.0\n      },\n      "U128": {\n        "description": "Decimal representation of a 128-bit integer.",\n        "type": "string"\n      },\n      "U256": {\n        "description": "Decimal representation of a 256-bit integer.",\n        "type": "string"\n      },\n      "NamedKey": {\n        "description": "A named key.",\n        "type": "object",\n        "required": [\n          "key",\n          "name"\n        ],\n        "properties": {\n          "name": {\n            "description": "The name of the entry.",\n            "type": "string"\n          },\n          "key": {\n            "description": "The value of the entry: a casper `Key` type.",\n            "type": "string"\n          }\n        },\n        "additionalProperties": false\n      },\n      "UnbondingPurse": {\n        "description": "Unbonding purse.",\n        "type": "object",\n        "required": [\n          "amount",\n          "bonding_purse",\n          "era_of_creation",\n          "unbonder_public_key",\n          "validator_public_key"\n        ],\n        "properties": {\n          "bonding_purse": {\n            "description": "Bonding Purse",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/URef"\n              }\n            ]\n          },\n          "validator_public_key": {\n            "description": "Validators public key.",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/PublicKey"\n              }\n            ]\n          },\n          "unbonder_public_key": {\n            "description": "Unbonders public key.",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/PublicKey"\n              }\n            ]\n          },\n          "era_of_creation": {\n            "description": "Era in which this unbonding request was created.",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/EraId"\n              }\n            ]\n          },\n          "amount": {\n            "description": "Unbonding Amount.",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/U512"\n              }\n            ]\n          },\n          "new_validator": {\n            "description": "The validator public key to re-delegate to.",\n            "anyOf": [\n              {\n                "$ref": "#/components/schemas/PublicKey"\n              },\n              {\n                "type": "null"\n              }\n            ]\n          }\n        },\n        "additionalProperties": false\n      },\n      "AccountIdentifier": {\n        "description": "Identifier of an account.",\n        "anyOf": [\n          {\n            "description": "The public key of an account",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/PublicKey"\n              }\n            ]\n          },\n          {\n            "description": "The account hash of an account",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/AccountHash"\n              }\n            ]\n          }\n        ]\n      },\n      "BlockIdentifier": {\n        "description": "Identifier for possible ways to retrieve a block.",\n        "anyOf": [\n          {\n            "description": "Identify and retrieve the block with its hash.",\n            "type": "object",\n            "required": [\n              "Hash"\n            ],\n            "properties": {\n              "Hash": {\n                "$ref": "#/components/schemas/BlockHash"\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "Identify and retrieve the block with its height.",\n            "type": "object",\n            "required": [\n              "Height"\n            ],\n            "properties": {\n              "Height": {\n                "type": "integer",\n                "format": "uint64",\n                "minimum": 0.0\n              }\n            },\n            "additionalProperties": false\n          }\n        ]\n      },\n      "Account": {\n        "description": "Structure representing a user\'s account, stored in global state.",\n        "type": "object",\n        "required": [\n          "account_hash",\n          "action_thresholds",\n          "associated_keys",\n          "main_purse",\n          "named_keys"\n        ],\n        "properties": {\n          "account_hash": {\n            "$ref": "#/components/schemas/AccountHash"\n          },\n          "named_keys": {\n            "type": "array",\n            "items": {\n              "$ref": "#/components/schemas/NamedKey"\n            }\n          },\n          "main_purse": {\n            "$ref": "#/components/schemas/URef"\n          },\n          "associated_keys": {\n            "type": "array",\n            "items": {\n              "$ref": "#/components/schemas/AssociatedKey"\n            }\n          },\n          "action_thresholds": {\n            "$ref": "#/components/schemas/ActionThresholds"\n          }\n        },\n        "additionalProperties": false\n      },\n      "AssociatedKey": {\n        "type": "object",\n        "required": [\n          "account_hash",\n          "weight"\n        ],\n        "properties": {\n          "account_hash": {\n            "$ref": "#/components/schemas/AccountHash"\n          },\n          "weight": {\n            "type": "integer",\n            "format": "uint8",\n            "minimum": 0.0\n          }\n        },\n        "additionalProperties": false\n      },\n      "ActionThresholds": {\n        "description": "Thresholds that have to be met when executing an action of a certain type.",\n        "type": "object",\n        "required": [\n          "deployment",\n          "key_management"\n        ],\n        "properties": {\n          "deployment": {\n            "type": "integer",\n            "format": "uint8",\n            "minimum": 0.0\n          },\n          "key_management": {\n            "type": "integer",\n            "format": "uint8",\n            "minimum": 0.0\n          }\n        },\n        "additionalProperties": false\n      },\n      "DictionaryIdentifier": {\n        "description": "Options for dictionary item lookups.",\n        "anyOf": [\n          {\n            "description": "Lookup a dictionary item via an Account\'s named keys.",\n            "type": "object",\n            "required": [\n              "AccountNamedKey"\n            ],\n            "properties": {\n              "AccountNamedKey": {\n                "type": "object",\n                "required": [\n                  "dictionary_item_key",\n                  "dictionary_name",\n                  "key"\n                ],\n                "properties": {\n                  "key": {\n                    "description": "The account key as a formatted string whose named keys contains dictionary_name.",\n                    "type": "string"\n                  },\n                  "dictionary_name": {\n                    "description": "The named key under which the dictionary seed URef is stored.",\n                    "type": "string"\n                  },\n                  "dictionary_item_key": {\n                    "description": "The dictionary item key formatted as a string.",\n                    "type": "string"\n                  }\n                }\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "Lookup a dictionary item via a Contract\'s named keys.",\n            "type": "object",\n            "required": [\n              "ContractNamedKey"\n            ],\n            "properties": {\n              "ContractNamedKey": {\n                "type": "object",\n                "required": [\n                  "dictionary_item_key",\n                  "dictionary_name",\n                  "key"\n                ],\n                "properties": {\n                  "key": {\n                    "description": "The contract key as a formatted string whose named keys contains dictionary_name.",\n                    "type": "string"\n                  },\n                  "dictionary_name": {\n                    "description": "The named key under which the dictionary seed URef is stored.",\n                    "type": "string"\n                  },\n                  "dictionary_item_key": {\n                    "description": "The dictionary item key formatted as a string.",\n                    "type": "string"\n                  }\n                }\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "Lookup a dictionary item via its seed URef.",\n            "type": "object",\n            "required": [\n              "URef"\n            ],\n            "properties": {\n              "URef": {\n                "type": "object",\n                "required": [\n                  "dictionary_item_key",\n                  "seed_uref"\n                ],\n                "properties": {\n                  "seed_uref": {\n                    "description": "The dictionary\'s seed URef.",\n                    "type": "string"\n                  },\n                  "dictionary_item_key": {\n                    "description": "The dictionary item key formatted as a string.",\n                    "type": "string"\n                  }\n                }\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "Lookup a dictionary item via its unique key.",\n            "type": "object",\n            "required": [\n              "Dictionary"\n            ],\n            "properties": {\n              "Dictionary": {\n                "type": "string"\n              }\n            },\n            "additionalProperties": false\n          }\n        ]\n      },\n      "StoredValue": {\n        "description": "Representation of a value stored in global state.\\n\\n`Account`, `Contract` and `ContractPackage` have their own `json_compatibility` representations (see their docs for further info).",\n        "anyOf": [\n          {\n            "description": "An instance of any variant of CLValue",\n            "type": "object",\n            "required": [\n              "CLValue"\n            ],\n            "properties": {\n              "CLValue": {\n                "$ref": "#/components/schemas/CLValue"\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "An account.",\n            "type": "object",\n            "required": [\n              "Account"\n            ],\n            "properties": {\n              "Account": {\n                "$ref": "#/components/schemas/Account"\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "A contract\'s Wasm",\n            "type": "object",\n            "required": [\n              "ContractWasm"\n            ],\n            "properties": {\n              "ContractWasm": {\n                "type": "string"\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "Methods and type signatures supported by a contract.",\n            "type": "object",\n            "required": [\n              "Contract"\n            ],\n            "properties": {\n              "Contract": {\n                "$ref": "#/components/schemas/Contract"\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "A contract definition, metadata, and security container.",\n            "type": "object",\n            "required": [\n              "ContractPackage"\n            ],\n            "properties": {\n              "ContractPackage": {\n                "$ref": "#/components/schemas/ContractPackage"\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "A record of a transfer",\n            "type": "object",\n            "required": [\n              "Transfer"\n            ],\n            "properties": {\n              "Transfer": {\n                "$ref": "#/components/schemas/Transfer"\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "A record of a deploy",\n            "type": "object",\n            "required": [\n              "DeployInfo"\n            ],\n            "properties": {\n              "DeployInfo": {\n                "$ref": "#/components/schemas/DeployInfo"\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "Auction metadata",\n            "type": "object",\n            "required": [\n              "EraInfo"\n            ],\n            "properties": {\n              "EraInfo": {\n                "$ref": "#/components/schemas/EraInfo"\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "A bid",\n            "type": "object",\n            "required": [\n              "Bid"\n            ],\n            "properties": {\n              "Bid": {\n                "$ref": "#/components/schemas/Bid"\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "A withdraw",\n            "type": "object",\n            "required": [\n              "Withdraw"\n            ],\n            "properties": {\n              "Withdraw": {\n                "type": "array",\n                "items": {\n                  "$ref": "#/components/schemas/WithdrawPurse"\n                }\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "A collection of unbonding purses",\n            "type": "object",\n            "required": [\n              "Unbonding"\n            ],\n            "properties": {\n              "Unbonding": {\n                "type": "array",\n                "items": {\n                  "$ref": "#/components/schemas/UnbondingPurse"\n                }\n              }\n            },\n            "additionalProperties": false\n          }\n        ]\n      },\n      "Contract": {\n        "description": "A contract struct that can be serialized as  JSON object.",\n        "type": "object",\n        "required": [\n          "contract_package_hash",\n          "contract_wasm_hash",\n          "entry_points",\n          "named_keys",\n          "protocol_version"\n        ],\n        "properties": {\n          "contract_package_hash": {\n            "$ref": "#/components/schemas/ContractPackageHash"\n          },\n          "contract_wasm_hash": {\n            "$ref": "#/components/schemas/ContractWasmHash"\n          },\n          "named_keys": {\n            "type": "array",\n            "items": {\n              "$ref": "#/components/schemas/NamedKey"\n            }\n          },\n          "entry_points": {\n            "type": "array",\n            "items": {\n              "$ref": "#/components/schemas/EntryPoint"\n            }\n          },\n          "protocol_version": {\n            "type": "string"\n          }\n        },\n        "additionalProperties": false\n      },\n      "ContractPackageHash": {\n        "description": "The hash address of the contract package",\n        "type": "string"\n      },\n      "ContractWasmHash": {\n        "description": "The hash address of the contract wasm",\n        "type": "string"\n      },\n      "EntryPoint": {\n        "description": "Type signature of a method. Order of arguments matter since can be referenced by index as well as name.",\n        "type": "object",\n        "required": [\n          "access",\n          "args",\n          "entry_point_type",\n          "name",\n          "ret"\n        ],\n        "properties": {\n          "name": {\n            "type": "string"\n          },\n          "args": {\n            "type": "array",\n            "items": {\n              "$ref": "#/components/schemas/Parameter"\n            }\n          },\n          "ret": {\n            "$ref": "#/components/schemas/CLType"\n          },\n          "access": {\n            "$ref": "#/components/schemas/EntryPointAccess"\n          },\n          "entry_point_type": {\n            "$ref": "#/components/schemas/EntryPointType"\n          }\n        }\n      },\n      "Parameter": {\n        "description": "Parameter to a method",\n        "type": "object",\n        "required": [\n          "cl_type",\n          "name"\n        ],\n        "properties": {\n          "name": {\n            "type": "string"\n          },\n          "cl_type": {\n            "$ref": "#/components/schemas/CLType"\n          }\n        }\n      },\n      "EntryPointAccess": {\n        "description": "Enum describing the possible access control options for a contract entry point (method).",\n        "anyOf": [\n          {\n            "type": "string",\n            "enum": [\n              "Public"\n            ]\n          },\n          {\n            "description": "Only users from the listed groups may call this method. Note: if the list is empty then this method is not callable from outside the contract.",\n            "type": "object",\n            "required": [\n              "Groups"\n            ],\n            "properties": {\n              "Groups": {\n                "type": "array",\n                "items": {\n                  "$ref": "#/components/schemas/Group"\n                }\n              }\n            },\n            "additionalProperties": false\n          }\n        ]\n      },\n      "Group": {\n        "description": "A (labelled) \\"user group\\". Each method of a versioned contract may be associated with one or more user groups which are allowed to call it.",\n        "type": "string"\n      },\n      "EntryPointType": {\n        "description": "Context of method execution",\n        "type": "string",\n        "enum": [\n          "Session",\n          "Contract"\n        ]\n      },\n      "ContractPackage": {\n        "description": "Contract definition, metadata, and security container.",\n        "type": "object",\n        "required": [\n          "access_key",\n          "disabled_versions",\n          "groups",\n          "lock_status",\n          "versions"\n        ],\n        "properties": {\n          "access_key": {\n            "$ref": "#/components/schemas/URef"\n          },\n          "versions": {\n            "type": "array",\n            "items": {\n              "$ref": "#/components/schemas/ContractVersion"\n            }\n          },\n          "disabled_versions": {\n            "type": "array",\n            "items": {\n              "$ref": "#/components/schemas/DisabledVersion"\n            }\n          },\n          "groups": {\n            "type": "array",\n            "items": {\n              "$ref": "#/components/schemas/Groups"\n            }\n          },\n          "lock_status": {\n            "$ref": "#/components/schemas/ContractPackageStatus"\n          }\n        },\n        "additionalProperties": false\n      },\n      "ContractVersion": {\n        "type": "object",\n        "required": [\n          "contract_hash",\n          "contract_version",\n          "protocol_version_major"\n        ],\n        "properties": {\n          "protocol_version_major": {\n            "type": "integer",\n            "format": "uint32",\n            "minimum": 0.0\n          },\n          "contract_version": {\n            "type": "integer",\n            "format": "uint32",\n            "minimum": 0.0\n          },\n          "contract_hash": {\n            "$ref": "#/components/schemas/ContractHash"\n          }\n        }\n      },\n      "ContractHash": {\n        "description": "The hash address of the contract",\n        "type": "string"\n      },\n      "DisabledVersion": {\n        "type": "object",\n        "required": [\n          "contract_version",\n          "protocol_version_major"\n        ],\n        "properties": {\n          "protocol_version_major": {\n            "type": "integer",\n            "format": "uint32",\n            "minimum": 0.0\n          },\n          "contract_version": {\n            "type": "integer",\n            "format": "uint32",\n            "minimum": 0.0\n          }\n        }\n      },\n      "Groups": {\n        "type": "object",\n        "required": [\n          "group",\n          "keys"\n        ],\n        "properties": {\n          "group": {\n            "type": "string"\n          },\n          "keys": {\n            "type": "array",\n            "items": {\n              "$ref": "#/components/schemas/URef"\n            }\n          }\n        }\n      },\n      "ContractPackageStatus": {\n        "description": "A enum to determine the lock status of the contract package.",\n        "type": "string",\n        "enum": [\n          "Locked",\n          "Unlocked"\n        ]\n      },\n      "GlobalStateIdentifier": {\n        "description": "Identifier for possible ways to query Global State",\n        "anyOf": [\n          {\n            "description": "Query using a block hash.",\n            "type": "object",\n            "required": [\n              "BlockHash"\n            ],\n            "properties": {\n              "BlockHash": {\n                "$ref": "#/components/schemas/BlockHash"\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "Query using a block height.",\n            "type": "object",\n            "required": [\n              "BlockHeight"\n            ],\n            "properties": {\n              "BlockHeight": {\n                "type": "integer",\n                "format": "uint64",\n                "minimum": 0.0\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "Query using the state root hash.",\n            "type": "object",\n            "required": [\n              "StateRootHash"\n            ],\n            "properties": {\n              "StateRootHash": {\n                "$ref": "#/components/schemas/Digest"\n              }\n            },\n            "additionalProperties": false\n          }\n        ]\n      },\n      "JsonBlockHeader": {\n        "description": "JSON representation of a block header.",\n        "type": "object",\n        "required": [\n          "accumulated_seed",\n          "body_hash",\n          "era_id",\n          "height",\n          "parent_hash",\n          "protocol_version",\n          "random_bit",\n          "state_root_hash",\n          "timestamp"\n        ],\n        "properties": {\n          "parent_hash": {\n            "description": "The parent hash.",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/BlockHash"\n              }\n            ]\n          },\n          "state_root_hash": {\n            "description": "The state root hash.",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/Digest"\n              }\n            ]\n          },\n          "body_hash": {\n            "description": "The body hash.",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/Digest"\n              }\n            ]\n          },\n          "random_bit": {\n            "description": "Randomness bit.",\n            "type": "boolean"\n          },\n          "accumulated_seed": {\n            "description": "Accumulated seed.",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/Digest"\n              }\n            ]\n          },\n          "era_end": {\n            "description": "The era end.",\n            "anyOf": [\n              {\n                "$ref": "#/components/schemas/JsonEraEnd"\n              },\n              {\n                "type": "null"\n              }\n            ]\n          },\n          "timestamp": {\n            "description": "The block timestamp.",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/Timestamp"\n              }\n            ]\n          },\n          "era_id": {\n            "description": "The block era id.",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/EraId"\n              }\n            ]\n          },\n          "height": {\n            "description": "The block height.",\n            "type": "integer",\n            "format": "uint64",\n            "minimum": 0.0\n          },\n          "protocol_version": {\n            "description": "The protocol version.",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/ProtocolVersion"\n              }\n            ]\n          }\n        },\n        "additionalProperties": false\n      },\n      "JsonEraEnd": {\n        "type": "object",\n        "required": [\n          "era_report",\n          "next_era_validator_weights"\n        ],\n        "properties": {\n          "era_report": {\n            "$ref": "#/components/schemas/JsonEraReport"\n          },\n          "next_era_validator_weights": {\n            "type": "array",\n            "items": {\n              "$ref": "#/components/schemas/ValidatorWeight"\n            }\n          }\n        },\n        "additionalProperties": false\n      },\n      "JsonEraReport": {\n        "description": "Equivocation and reward information to be included in the terminal block.",\n        "type": "object",\n        "required": [\n          "equivocators",\n          "inactive_validators",\n          "rewards"\n        ],\n        "properties": {\n          "equivocators": {\n            "type": "array",\n            "items": {\n              "$ref": "#/components/schemas/PublicKey"\n            }\n          },\n          "rewards": {\n            "type": "array",\n            "items": {\n              "$ref": "#/components/schemas/Reward"\n            }\n          },\n          "inactive_validators": {\n            "type": "array",\n            "items": {\n              "$ref": "#/components/schemas/PublicKey"\n            }\n          }\n        },\n        "additionalProperties": false\n      },\n      "Reward": {\n        "type": "object",\n        "required": [\n          "amount",\n          "validator"\n        ],\n        "properties": {\n          "validator": {\n            "$ref": "#/components/schemas/PublicKey"\n          },\n          "amount": {\n            "type": "integer",\n            "format": "uint64",\n            "minimum": 0.0\n          }\n        },\n        "additionalProperties": false\n      },\n      "ValidatorWeight": {\n        "type": "object",\n        "required": [\n          "validator",\n          "weight"\n        ],\n        "properties": {\n          "validator": {\n            "$ref": "#/components/schemas/PublicKey"\n          },\n          "weight": {\n            "$ref": "#/components/schemas/U512"\n          }\n        },\n        "additionalProperties": false\n      },\n      "ProtocolVersion": {\n        "description": "Casper Platform protocol version",\n        "type": "string"\n      },\n      "PurseIdentifier": {\n        "description": "Identifier of a purse.",\n        "anyOf": [\n          {\n            "description": "The main purse of the account identified by this public key.",\n            "type": "object",\n            "required": [\n              "main_purse_under_public_key"\n            ],\n            "properties": {\n              "main_purse_under_public_key": {\n                "$ref": "#/components/schemas/PublicKey"\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "The main purse of the account identified by this account hash.",\n            "type": "object",\n            "required": [\n              "main_purse_under_account_hash"\n            ],\n            "properties": {\n              "main_purse_under_account_hash": {\n                "$ref": "#/components/schemas/AccountHash"\n              }\n            },\n            "additionalProperties": false\n          },\n          {\n            "description": "The purse identified by this URef.",\n            "type": "object",\n            "required": [\n              "purse_uref"\n            ],\n            "properties": {\n              "purse_uref": {\n                "$ref": "#/components/schemas/URef"\n              }\n            },\n            "additionalProperties": false\n          }\n        ]\n      },\n      "PeersMap": {\n        "description": "Map of peer IDs to network addresses.",\n        "type": "array",\n        "items": {\n          "$ref": "#/components/schemas/PeerEntry"\n        }\n      },\n      "PeerEntry": {\n        "description": "Node peer entry.",\n        "type": "object",\n        "required": [\n          "address",\n          "node_id"\n        ],\n        "properties": {\n          "node_id": {\n            "description": "Node id.",\n            "type": "string"\n          },\n          "address": {\n            "description": "Node address.",\n            "type": "string"\n          }\n        },\n        "additionalProperties": false\n      },\n      "MinimalBlockInfo": {\n        "description": "Minimal info of a `Block`.",\n        "type": "object",\n        "required": [\n          "creator",\n          "era_id",\n          "hash",\n          "height",\n          "state_root_hash",\n          "timestamp"\n        ],\n        "properties": {\n          "hash": {\n            "$ref": "#/components/schemas/BlockHash"\n          },\n          "timestamp": {\n            "$ref": "#/components/schemas/Timestamp"\n          },\n          "era_id": {\n            "$ref": "#/components/schemas/EraId"\n          },\n          "height": {\n            "type": "integer",\n            "format": "uint64",\n            "minimum": 0.0\n          },\n          "state_root_hash": {\n            "$ref": "#/components/schemas/Digest"\n          },\n          "creator": {\n            "$ref": "#/components/schemas/PublicKey"\n          }\n        },\n        "additionalProperties": false\n      },\n      "NextUpgrade": {\n        "description": "Information about the next protocol upgrade.",\n        "type": "object",\n        "required": [\n          "activation_point",\n          "protocol_version"\n        ],\n        "properties": {\n          "activation_point": {\n            "$ref": "#/components/schemas/ActivationPoint"\n          },\n          "protocol_version": {\n            "type": "string"\n          }\n        }\n      },\n      "ActivationPoint": {\n        "description": "The first era to which the associated protocol version applies.",\n        "anyOf": [\n          {\n            "description": "Era id.",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/EraId"\n              }\n            ]\n          },\n          {\n            "description": "Genesis timestamp.",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/Timestamp"\n              }\n            ]\n          }\n        ]\n      },\n      "ReactorState": {\n        "description": "The state of the reactor.",\n        "type": "string",\n        "enum": [\n          "Initialize",\n          "CatchUp",\n          "Upgrading",\n          "KeepUp",\n          "Validate",\n          "ShutdownForUpgrade"\n        ]\n      },\n      "AvailableBlockRange": {\n        "description": "An unbroken, inclusive range of blocks.",\n        "type": "object",\n        "required": [\n          "high",\n          "low"\n        ],\n        "properties": {\n          "low": {\n            "description": "The inclusive lower bound of the range.",\n            "type": "integer",\n            "format": "uint64",\n            "minimum": 0.0\n          },\n          "high": {\n            "description": "The inclusive upper bound of the range.",\n            "type": "integer",\n            "format": "uint64",\n            "minimum": 0.0\n          }\n        },\n        "additionalProperties": false\n      },\n      "BlockSynchronizerStatus": {\n        "description": "The status of the block synchronizer.",\n        "type": "object",\n        "properties": {\n          "historical": {\n            "description": "The status of syncing a historical block, if any.",\n            "anyOf": [\n              {\n                "$ref": "#/components/schemas/BlockSyncStatus"\n              },\n              {\n                "type": "null"\n              }\n            ]\n          },\n          "forward": {\n            "description": "The status of syncing a forward block, if any.",\n            "anyOf": [\n              {\n                "$ref": "#/components/schemas/BlockSyncStatus"\n              },\n              {\n                "type": "null"\n              }\n            ]\n          }\n        },\n        "additionalProperties": false\n      },\n      "BlockSyncStatus": {\n        "description": "The status of syncing an individual block.",\n        "type": "object",\n        "required": [\n          "acquisition_state",\n          "block_hash"\n        ],\n        "properties": {\n          "block_hash": {\n            "description": "The block hash.",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/BlockHash"\n              }\n            ]\n          },\n          "block_height": {\n            "description": "The height of the block, if known.",\n            "type": [\n              "integer",\n              "null"\n            ],\n            "format": "uint64",\n            "minimum": 0.0\n          },\n          "acquisition_state": {\n            "description": "The state of acquisition of the data associated with the block.",\n            "type": "string"\n          }\n        },\n        "additionalProperties": false\n      },\n      "JsonValidatorChanges": {\n        "description": "The changes in a validator\'s status.",\n        "type": "object",\n        "required": [\n          "public_key",\n          "status_changes"\n        ],\n        "properties": {\n          "public_key": {\n            "description": "The public key of the validator.",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/PublicKey"\n              }\n            ]\n          },\n          "status_changes": {\n            "description": "The set of changes to the validator\'s status.",\n            "type": "array",\n            "items": {\n              "$ref": "#/components/schemas/JsonValidatorStatusChange"\n            }\n          }\n        },\n        "additionalProperties": false\n      },\n      "JsonValidatorStatusChange": {\n        "description": "A single change to a validator\'s status in the given era.",\n        "type": "object",\n        "required": [\n          "era_id",\n          "validator_change"\n        ],\n        "properties": {\n          "era_id": {\n            "description": "The era in which the change occurred.",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/EraId"\n              }\n            ]\n          },\n          "validator_change": {\n            "description": "The change in validator status.",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/ValidatorChange"\n              }\n            ]\n          }\n        },\n        "additionalProperties": false\n      },\n      "ValidatorChange": {\n        "description": "A change to a validator\'s status between two eras.",\n        "type": "string",\n        "enum": [\n          "Added",\n          "Removed",\n          "Banned",\n          "CannotPropose",\n          "SeenAsFaulty"\n        ]\n      },\n      "ChainspecRawBytes": {\n        "description": "The raw bytes of the chainspec.toml, genesis accounts.toml, and global_state.toml files.",\n        "type": "object",\n        "required": [\n          "chainspec_bytes",\n          "maybe_genesis_accounts_bytes",\n          "maybe_global_state_bytes"\n        ],\n        "properties": {\n          "chainspec_bytes": {\n            "description": "Hex-encoded raw bytes of the current chainspec.toml file.",\n            "type": "string"\n          },\n          "maybe_genesis_accounts_bytes": {\n            "description": "Hex-encoded raw bytes of the current genesis accounts.toml file.",\n            "type": "string"\n          },\n          "maybe_global_state_bytes": {\n            "description": "Hex-encoded raw bytes of the current global_state.toml file.",\n            "type": "string"\n          }\n        }\n      },\n      "JsonBlock": {\n        "description": "A JSON-friendly representation of `Block`.",\n        "type": "object",\n        "required": [\n          "body",\n          "hash",\n          "header",\n          "proofs"\n        ],\n        "properties": {\n          "hash": {\n            "description": "`BlockHash`",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/BlockHash"\n              }\n            ]\n          },\n          "header": {\n            "description": "JSON-friendly block header.",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/JsonBlockHeader"\n              }\n            ]\n          },\n          "body": {\n            "description": "JSON-friendly block body.",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/JsonBlockBody"\n              }\n            ]\n          },\n          "proofs": {\n            "description": "JSON-friendly list of proofs for this block.",\n            "type": "array",\n            "items": {\n              "$ref": "#/components/schemas/JsonProof"\n            }\n          }\n        },\n        "additionalProperties": false\n      },\n      "JsonBlockBody": {\n        "description": "A JSON-friendly representation of `Body`",\n        "type": "object",\n        "required": [\n          "deploy_hashes",\n          "proposer",\n          "transfer_hashes"\n        ],\n        "properties": {\n          "proposer": {\n            "$ref": "#/components/schemas/PublicKey"\n          },\n          "deploy_hashes": {\n            "type": "array",\n            "items": {\n              "$ref": "#/components/schemas/DeployHash"\n            }\n          },\n          "transfer_hashes": {\n            "type": "array",\n            "items": {\n              "$ref": "#/components/schemas/DeployHash"\n            }\n          }\n        },\n        "additionalProperties": false\n      },\n      "JsonProof": {\n        "description": "A JSON-friendly representation of a proof, i.e. a block\'s finality signature.",\n        "type": "object",\n        "required": [\n          "public_key",\n          "signature"\n        ],\n        "properties": {\n          "public_key": {\n            "$ref": "#/components/schemas/PublicKey"\n          },\n          "signature": {\n            "$ref": "#/components/schemas/Signature"\n          }\n        },\n        "additionalProperties": false\n      },\n      "EraSummary": {\n        "description": "The summary of an era",\n        "type": "object",\n        "required": [\n          "block_hash",\n          "era_id",\n          "merkle_proof",\n          "state_root_hash",\n          "stored_value"\n        ],\n        "properties": {\n          "block_hash": {\n            "description": "The block hash",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/BlockHash"\n              }\n            ]\n          },\n          "era_id": {\n            "description": "The era id",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/EraId"\n              }\n            ]\n          },\n          "stored_value": {\n            "description": "The StoredValue containing era information",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/StoredValue"\n              }\n            ]\n          },\n          "state_root_hash": {\n            "description": "Hex-encoded hash of the state root",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/Digest"\n              }\n            ]\n          },\n          "merkle_proof": {\n            "description": "The Merkle proof",\n            "type": "string"\n          }\n        },\n        "additionalProperties": false\n      },\n      "AuctionState": {\n        "description": "Data structure summarizing auction contract data.",\n        "type": "object",\n        "required": [\n          "bids",\n          "block_height",\n          "era_validators",\n          "state_root_hash"\n        ],\n        "properties": {\n          "state_root_hash": {\n            "description": "Global state hash.",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/Digest"\n              }\n            ]\n          },\n          "block_height": {\n            "description": "Block height.",\n            "type": "integer",\n            "format": "uint64",\n            "minimum": 0.0\n          },\n          "era_validators": {\n            "description": "Era validators.",\n            "type": "array",\n            "items": {\n              "$ref": "#/components/schemas/JsonEraValidators"\n            }\n          },\n          "bids": {\n            "description": "All bids contained within a vector.",\n            "type": "array",\n            "items": {\n              "$ref": "#/components/schemas/JsonBids"\n            }\n          }\n        },\n        "additionalProperties": false\n      },\n      "JsonEraValidators": {\n        "description": "The validators for the given era.",\n        "type": "object",\n        "required": [\n          "era_id",\n          "validator_weights"\n        ],\n        "properties": {\n          "era_id": {\n            "$ref": "#/components/schemas/EraId"\n          },\n          "validator_weights": {\n            "type": "array",\n            "items": {\n              "$ref": "#/components/schemas/JsonValidatorWeights"\n            }\n          }\n        },\n        "additionalProperties": false\n      },\n      "JsonValidatorWeights": {\n        "description": "A validator\'s weight.",\n        "type": "object",\n        "required": [\n          "public_key",\n          "weight"\n        ],\n        "properties": {\n          "public_key": {\n            "$ref": "#/components/schemas/PublicKey"\n          },\n          "weight": {\n            "$ref": "#/components/schemas/U512"\n          }\n        },\n        "additionalProperties": false\n      },\n      "JsonBids": {\n        "description": "A Json representation of a single bid.",\n        "type": "object",\n        "required": [\n          "bid",\n          "public_key"\n        ],\n        "properties": {\n          "public_key": {\n            "$ref": "#/components/schemas/PublicKey"\n          },\n          "bid": {\n            "$ref": "#/components/schemas/JsonBid"\n          }\n        },\n        "additionalProperties": false\n      },\n      "JsonBid": {\n        "description": "An entry in a founding validator map representing a bid.",\n        "type": "object",\n        "required": [\n          "bonding_purse",\n          "delegation_rate",\n          "delegators",\n          "inactive",\n          "staked_amount"\n        ],\n        "properties": {\n          "bonding_purse": {\n            "description": "The purse that was used for bonding.",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/URef"\n              }\n            ]\n          },\n          "staked_amount": {\n            "description": "The amount of tokens staked by a validator (not including delegators).",\n            "allOf": [\n              {\n                "$ref": "#/components/schemas/U512"\n              }\n            ]\n          },\n          "delegation_rate": {\n            "description": "The delegation rate.",\n            "type": "integer",\n            "format": "uint8",\n            "minimum": 0.0\n          },\n          "delegators": {\n            "description": "The delegators.",\n            "type": "array",\n            "items": {\n              "$ref": "#/components/schemas/JsonDelegator"\n            }\n          },\n          "inactive": {\n            "description": "Is this an inactive validator.",\n            "type": "boolean"\n          }\n        },\n        "additionalProperties": false\n      },\n      "JsonDelegator": {\n        "description": "A delegator associated with the given validator.",\n        "type": "object",\n        "required": [\n          "bonding_purse",\n          "delegatee",\n          "public_key",\n          "staked_amount"\n        ],\n        "properties": {\n          "public_key": {\n            "$ref": "#/components/schemas/PublicKey"\n          },\n          "staked_amount": {\n            "$ref": "#/components/schemas/U512"\n          },\n          "bonding_purse": {\n            "$ref": "#/components/schemas/URef"\n          },\n          "delegatee": {\n            "$ref": "#/components/schemas/PublicKey"\n          }\n        },\n        "additionalProperties": false\n      }\n    }\n  }\n}\n \n'})})}function f(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(p,{...n})}):p(n)}},28453:(n,e,a)=>{a.d(e,{R:()=>o,x:()=>i});var t=a(96540);const r={},s=t.createContext(r);function o(n){const e=t.useContext(s);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:o(n.components),t.createElement(s.Provider,{value:e},n.children)}}}]);