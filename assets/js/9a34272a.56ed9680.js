"use strict";(self.webpackChunkcspr_docs_redux=self.webpackChunkcspr_docs_redux||[]).push([[57394],{82519:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>i,contentTitle:()=>c,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>p});const s=JSON.parse('{"id":"jsonrpc-comp/rpc-2.0/info_get_status.json","title":"info_get_status.json","description":"","source":"@site/condor/jsonrpc-comp/rpc-2.0/info_get_status.json.md","sourceDirName":"jsonrpc-comp/rpc-2.0","slug":"/jsonrpc-comp/rpc-2.0/info_get_status.json","permalink":"/condor/jsonrpc-comp/rpc-2.0/info_get_status.json","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{}}');var o=t(74848),a=t(28453);const r={},c=void 0,i={},p=[];function l(n){const e={code:"code",pre:"pre",...(0,a.R)(),...n.components};return(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-json",metastring:"copy ",children:'{\n  "name": "info_get_status",\n  "summary": "returns the current status of the node",\n  "params": [],\n  "result": {\n    "name": "info_get_status_result",\n    "schema": {\n      "description": "Result for \\"info_get_status\\" RPC response.",\n      "type": "object",\n      "required": [\n        "api_version",\n        "available_block_range",\n        "block_sync",\n        "build_version",\n        "chainspec_name",\n        "last_progress",\n        "peers",\n        "protocol_version",\n        "reactor_state",\n        "starting_state_root_hash",\n        "uptime"\n      ],\n      "properties": {\n        "api_version": {\n          "description": "The RPC API version.",\n          "type": "string"\n        },\n        "protocol_version": {\n          "description": "The current Casper protocol version.",\n          "$ref": "#/components/schemas/ProtocolVersion"\n        },\n        "peers": {\n          "description": "The node ID and network address of each connected peer.",\n          "$ref": "#/components/schemas/Peers"\n        },\n        "build_version": {\n          "description": "The compiled node version.",\n          "type": "string"\n        },\n        "chainspec_name": {\n          "description": "The chainspec name.",\n          "type": "string"\n        },\n        "starting_state_root_hash": {\n          "description": "The state root hash of the lowest block in the available block range.",\n          "$ref": "#/components/schemas/Digest"\n        },\n        "last_added_block_info": {\n          "description": "The minimal info of the last block from the linear chain.",\n          "anyOf": [\n            {\n              "$ref": "#/components/schemas/MinimalBlockInfo"\n            },\n            {\n              "type": "null"\n            }\n          ]\n        },\n        "our_public_signing_key": {\n          "description": "Our public signing key.",\n          "anyOf": [\n            {\n              "$ref": "#/components/schemas/PublicKey"\n            },\n            {\n              "type": "null"\n            }\n          ]\n        },\n        "round_length": {\n          "description": "The next round length if this node is a validator.",\n          "anyOf": [\n            {\n              "$ref": "#/components/schemas/TimeDiff"\n            },\n            {\n              "type": "null"\n            }\n          ]\n        },\n        "next_upgrade": {\n          "description": "Information about the next scheduled upgrade.",\n          "anyOf": [\n            {\n              "$ref": "#/components/schemas/NextUpgrade"\n            },\n            {\n              "type": "null"\n            }\n          ]\n        },\n        "uptime": {\n          "description": "Time that passed since the node has started.",\n          "$ref": "#/components/schemas/TimeDiff"\n        },\n        "reactor_state": {\n          "description": "The name of the current state of node reactor.",\n          "type": "string"\n        },\n        "last_progress": {\n          "description": "Timestamp of the last recorded progress in the reactor.",\n          "$ref": "#/components/schemas/Timestamp"\n        },\n        "available_block_range": {\n          "description": "The available block range in storage.",\n          "$ref": "#/components/schemas/AvailableBlockRange"\n        },\n        "block_sync": {\n          "description": "The status of the block synchronizer builders.",\n          "$ref": "#/components/schemas/BlockSynchronizerStatus"\n        },\n        "latest_switch_block_hash": {\n          "description": "The hash of the latest switch block.",\n          "anyOf": [\n            {\n              "$ref": "#/components/schemas/BlockHash"\n            },\n            {\n              "type": "null"\n            }\n          ]\n        }\n      },\n      "additionalProperties": false\n    }\n  },\n  "examples": [\n    {\n      "name": "info_get_status_example",\n      "params": [],\n      "result": {\n        "name": "info_get_status_example_result",\n        "value": {\n          "api_version": "2.0.0",\n          "protocol_version": "2.0.0",\n          "peers": [\n            {\n              "node_id": "tls:0101..0101",\n              "address": "127.0.0.1:54321"\n            }\n          ],\n          "build_version": "1.0.0",\n          "chainspec_name": "casper-example",\n          "starting_state_root_hash": "0000000000000000000000000000000000000000000000000000000000000000",\n          "last_added_block_info": {\n            "hash": "0744fcb72af43c5cc372039bc5a8bfee48808a9ce414acc0d6338a628c20eb42",\n            "timestamp": "2020-11-17T00:39:24.072Z",\n            "era_id": 1,\n            "height": 10,\n            "state_root_hash": "0808080808080808080808080808080808080808080808080808080808080808",\n            "creator": "01d9bf2148748a85c89da5aad8ee0b0fc2d105fd39d41a4c796536354f0ae2900c"\n          },\n          "our_public_signing_key": "01d9bf2148748a85c89da5aad8ee0b0fc2d105fd39d41a4c796536354f0ae2900c",\n          "round_length": "1m 5s 536ms",\n          "next_upgrade": {\n            "activation_point": 42,\n            "protocol_version": "2.0.1"\n          },\n          "uptime": "13s",\n          "reactor_state": "Initialize",\n          "last_progress": "1970-01-01T00:00:00.000Z",\n          "available_block_range": {\n            "low": 0,\n            "high": 0\n          },\n          "block_sync": {\n            "historical": {\n              "block_hash": "16ddf28e2b3d2e17f4cef36f8b58827eca917af225d139b0c77df3b4a67dc55e",\n              "block_height": 40,\n              "acquisition_state": "have strict finality(40) for: block hash 16dd..c55e"\n            },\n            "forward": {\n              "block_hash": "59907b1e32a9158169c4d89d9ce5ac9164fc31240bfcfb0969227ece06d74983",\n              "block_height": 6701,\n              "acquisition_state": "have block body(6701) for: block hash 5990..4983"\n            }\n          },\n          "latest_switch_block_hash": "0000000000000000000000000000000000000000000000000000000000000000"\n        }\n      }\n    }\n  ]\n}\n \n'})})}function d(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(l,{...n})}):l(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>c});var s=t(96540);const o={},a=s.createContext(o);function r(n){const e=s.useContext(a);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:r(n.components),s.createElement(a.Provider,{value:e},n.children)}}}]);