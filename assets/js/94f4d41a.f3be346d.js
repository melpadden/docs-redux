"use strict";(self.webpackChunkcspr_docs_redux=self.webpackChunkcspr_docs_redux||[]).push([[32152],{53543:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>p,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>i});const c=JSON.parse('{"id":"jsonrpc-comp/rpc-2.0/schema/TypeMismatch.json","title":"TypeMismatch.json","description":"","source":"@site/condor/jsonrpc-comp/rpc-2.0/schema/TypeMismatch.json.md","sourceDirName":"jsonrpc-comp/rpc-2.0/schema","slug":"/jsonrpc-comp/rpc-2.0/schema/TypeMismatch.json","permalink":"/condor/jsonrpc-comp/rpc-2.0/schema/TypeMismatch.json","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{}}');var o=t(74848),r=t(28453);const s={},p=void 0,a={},i=[];function d(e){const n={code:"code",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",metastring:"copy ",children:'{\n    "description": "An error struct representing a type mismatch in [`StoredValue`](crate::StoredValue) operations.",\n    "type": "object",\n    "required": [\n        "expected",\n        "found"\n    ],\n    "properties": {\n        "expected": {\n            "description": "The name of the expected type.",\n            "type": "string"\n        },\n        "found": {\n            "description": "The actual type found.",\n            "type": "string"\n        }\n    }\n} \n'})})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>p});var c=t(96540);const o={},r=c.createContext(o);function s(e){const n=c.useContext(r);return c.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function p(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),c.createElement(r.Provider,{value:n},e.children)}}}]);