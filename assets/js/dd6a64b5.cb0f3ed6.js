"use strict";(self.webpackChunkcspr_docs_redux=self.webpackChunkcspr_docs_redux||[]).push([[30437],{19610:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>i,contentTitle:()=>c,default:()=>l,frontMatter:()=>o,metadata:()=>a,toc:()=>u});const a=JSON.parse('{"id":"jsonrpc-comp/rpc-2.0/query_balance.json","title":"query_balance.json","description":"","source":"@site/condor/jsonrpc-comp/rpc-2.0/query_balance.json.md","sourceDirName":"jsonrpc-comp/rpc-2.0","slug":"/jsonrpc-comp/rpc-2.0/query_balance.json","permalink":"/condor/jsonrpc-comp/rpc-2.0/query_balance.json","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{}}');var t=r(74848),s=r(28453);const o={},c=void 0,i={},u=[];function p(n){const e={code:"code",pre:"pre",...(0,s.R)(),...n.components};return(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-json",metastring:"copy ",children:'{\n  "name": "query_balance",\n  "summary": "query for a balance using a purse identifier and a state identifier",\n  "params": [\n    {\n      "name": "purse_identifier",\n      "schema": {\n        "description": "The identifier to obtain the purse corresponding to balance query.",\n        "$ref": "#/components/schemas/PurseIdentifier"\n      },\n      "required": true\n    },\n    {\n      "name": "state_identifier",\n      "schema": {\n        "description": "The state identifier used for the query, if none is passed the tip of the chain will be used.",\n        "anyOf": [\n          {\n            "$ref": "#/components/schemas/GlobalStateIdentifier"\n          },\n          {\n            "type": "null"\n          }\n        ]\n      },\n      "required": false\n    }\n  ],\n  "result": {\n    "name": "query_balance_result",\n    "schema": {\n      "description": "Result for \\"query_balance\\" RPC response.",\n      "type": "object",\n      "required": [\n        "api_version",\n        "balance"\n      ],\n      "properties": {\n        "api_version": {\n          "description": "The RPC API version.",\n          "type": "string"\n        },\n        "balance": {\n          "description": "The available balance in motes (total balance - sum of all active holds).",\n          "$ref": "#/components/schemas/U512"\n        }\n      }\n    }\n  },\n  "examples": [\n    {\n      "name": "query_balance_example",\n      "params": [\n        {\n          "name": "state_identifier",\n          "value": {\n            "BlockHash": "0707070707070707070707070707070707070707070707070707070707070707"\n          }\n        },\n        {\n          "name": "purse_identifier",\n          "value": {\n            "main_purse_under_account_hash": "account-hash-0909090909090909090909090909090909090909090909090909090909090909"\n          }\n        }\n      ],\n      "result": {\n        "name": "query_balance_example_result",\n        "value": {\n          "api_version": "2.0.0",\n          "balance": "123456"\n        }\n      }\n    }\n  ]\n}\n \n'})})}function l(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(p,{...n})}):p(n)}},28453:(n,e,r)=>{r.d(e,{R:()=>o,x:()=>c});var a=r(96540);const t={},s=a.createContext(t);function o(n){const e=a.useContext(s);return a.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:o(n.components),a.createElement(s.Provider,{value:e},n.children)}}}]);