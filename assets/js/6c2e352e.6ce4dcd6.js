"use strict";(self.webpackChunkcspr_docs_redux=self.webpackChunkcspr_docs_redux||[]).push([[18786],{52377:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>p,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>i});const c=JSON.parse('{"id":"jsonrpc-comp/rpc-2.0/schema/BlockV1.json","title":"BlockV1.json","description":"","source":"@site/condor/jsonrpc-comp/rpc-2.0/schema/BlockV1.json.md","sourceDirName":"jsonrpc-comp/rpc-2.0/schema","slug":"/jsonrpc-comp/rpc-2.0/schema/BlockV1.json","permalink":"/condor/jsonrpc-comp/rpc-2.0/schema/BlockV1.json","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{}}');var t=o(74848),s=o(28453);const r={},a=void 0,p={},i=[];function l(n){const e={code:"code",pre:"pre",...(0,s.R)(),...n.components};return(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-json",metastring:"copy ",children:'{\n    "description": "A block after execution, with the resulting global state root hash. This is the core component of the Casper linear blockchain. Version 1.",\n    "type": "object",\n    "required": [\n        "body",\n        "hash",\n        "header"\n    ],\n    "properties": {\n        "hash": {\n            "description": "The block hash identifying this block.",\n            "allOf": [\n                {\n                    "$ref": "#/components/schemas/BlockHash"\n                }\n            ]\n        },\n        "header": {\n            "description": "The header portion of the block.",\n            "allOf": [\n                {\n                    "$ref": "#/components/schemas/BlockHeaderV1"\n                }\n            ]\n        },\n        "body": {\n            "description": "The body portion of the block.",\n            "allOf": [\n                {\n                    "$ref": "#/components/schemas/BlockBodyV1"\n                }\n            ]\n        }\n    }\n} \n'})})}function d(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(l,{...n})}):l(n)}},28453:(n,e,o)=>{o.d(e,{R:()=>r,x:()=>a});var c=o(96540);const t={},s=c.createContext(t);function r(n){const e=c.useContext(s);return c.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:r(n.components),c.createElement(s.Provider,{value:e},n.children)}}}]);