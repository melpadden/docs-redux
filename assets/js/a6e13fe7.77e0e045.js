"use strict";(self.webpackChunkcspr_docs_redux=self.webpackChunkcspr_docs_redux||[]).push([[38439],{91615:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>i,default:()=>d,frontMatter:()=>c,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"jsonrpc-comp/rpc-2.0/schema/EntryPointType.json","title":"EntryPointType.json","description":"","source":"@site/condor/jsonrpc-comp/rpc-2.0/schema/EntryPointType.json.md","sourceDirName":"jsonrpc-comp/rpc-2.0/schema","slug":"/jsonrpc-comp/rpc-2.0/schema/EntryPointType.json","permalink":"/condor/jsonrpc-comp/rpc-2.0/schema/EntryPointType.json","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{}}');var o=t(74848),r=t(28453);const c={},i=void 0,a={},u=[];function l(n){const e={code:"code",pre:"pre",...(0,r.R)(),...n.components};return(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-json",metastring:"copy ",children:'{\n    "description": "Context of method execution\\n\\nMost significant bit represents version i.e. - 0b0 -> 0.x/1.x (session & contracts) - 0b1 -> 2.x and later (introduced installer, utility entry points)",\n    "oneOf": [\n        {\n            "description": "Runs using the calling entity\'s context. In v1.x this was used for both \\"session\\" code run using the originating Account\'s context, and also for \\"StoredSession\\" code that ran in the caller\'s context. While this made systemic sense due to the way the runtime context nesting works, this dual usage was very confusing to most human beings.\\n\\nIn v2.x the renamed Caller variant is exclusively used for wasm run using the initiating account entity\'s context. Previously installed 1.x stored session code should continue to work as the binary value matches but we no longer allow such logic to be upgraded, nor do we allow new stored session to be installed.",\n            "type": "string",\n            "enum": [\n                "Caller"\n            ]\n        },\n        {\n            "description": "Runs using the called entity\'s context.",\n            "type": "string",\n            "enum": [\n                "Called"\n            ]\n        },\n        {\n            "description": "Extract a subset of bytecode and installs it as a new smart contract. Runs using the called entity\'s context.",\n            "type": "string",\n            "enum": [\n                "Factory"\n            ]\n        }\n    ]\n} \n'})})}function d(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(l,{...n})}):l(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>c,x:()=>i});var s=t(96540);const o={},r=s.createContext(o);function c(n){const e=s.useContext(r);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:c(n.components),s.createElement(r.Provider,{value:e},n.children)}}}]);