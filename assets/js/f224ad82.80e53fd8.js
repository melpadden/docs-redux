"use strict";(self.webpackChunkcspr_docs_redux=self.webpackChunkcspr_docs_redux||[]).push([[75932],{72385:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"concepts/serialization/index","title":"Binary Serialization Standard","description":"serialization-standard-head}","source":"@site/versioned_docs/version-2.0.0/concepts/serialization/index.md","sourceDirName":"concepts/serialization","slug":"/concepts/serialization/","permalink":"/concepts/serialization/","draft":false,"unlisted":false,"tags":[],"version":"2.0.0","lastUpdatedBy":"Mel Padden","lastUpdatedAt":1727970104000,"frontMatter":{},"sidebar":"concepts","previous":{"title":"Z","permalink":"/concepts/glossary/Z"},"next":{"title":"Primitives and Basic Serialization Rules","permalink":"/concepts/serialization/primitives"}}');var s=n(74848),r=n(28453);const a={},o="Binary Serialization Standard {#serialization-standard-head}",d={},c=[];function l(e){const t={a:"a",code:"code",h1:"h1",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"serialization-standard-head",children:"Binary Serialization Standard"})}),"\n",(0,s.jsx)(t.p,{children:"We provide a custom implementation to serialize data structures used by the Casper node to their byte representation. This category details custom serialization implementation, allowing developers to build a library that is compatible with the custom serialization."}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"Casper Binary Serialization Standard"})," uses a default ",(0,s.jsx)(t.code,{children:"u8"})," byte tag to identify the subsequent data's type and direct further deserialization. Additional serialization rules can be found in the following sub-categories."]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Page"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/concepts/serialization/primitives",children:"Primitives"})}),(0,s.jsx)(t.td,{children:"Base-level types used to create more complex structures."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/concepts/serialization/structures",children:"Structures"})}),(0,s.jsx)(t.td,{children:"Major structures used through Casper systems, as well as their included sub-types."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/concepts/serialization/types",children:"Types"})}),(0,s.jsxs)(t.td,{children:["Minor types not covered ",(0,s.jsx)(t.code,{children:"Primitives"})," or ",(0,s.jsx)(t.code,{children:"Structures"}),"."]})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var i=n(96540);const s={},r=i.createContext(s);function a(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);